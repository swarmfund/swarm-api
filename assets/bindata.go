// Code generated by go-bindata.
// sources:
// enums/business_type.json
// enums/countries.json
// enums/education.json
// enums/employment_status.json
// enums/entity_type.json
// enums/gender.json
// enums/id_document.json
// enums/industry.json
// enums/marital_status.json
// enums/nationalities.json
// migrations/001_squashed.sql
// migrations/003_email_tokens.sql
// migrations/004_wallets_refactor.sql
// migrations/005_tfa_backends_refactor.sql
// migrations/006_totp_constraint.sql
// migrations/007_cascade_wallet_id_update.sql
// migrations/008_password_constraint.sql
// migrations/009_drop_tfa_keychain.sql
// migrations/010_users_refactoring.sql
// migrations/011_kyc_entities.sql
// migrations/012_blobs.sql
// migrations/013_rm_org_wallets.sql
// migrations/014_blob_relationships.sql
// migrations/015_rm_recovery_requests.sql
// migrations/016_recoveries.sql
// migrations/017_rm_pending_transactions.sql
// migrations/018_user_kyc.sql
// migrations/019_airdrops.sql
// migrations/020_favorites.sql
// migrations/021_kdf_v2.sql
// migrations/022_referrals.sql
// migrations/023_master_blobs.sql
// migrations/024_user_states.sql
// migrations/025_tracking.sql
// migrations/026_fix_user_states.sql
// templates/email_confirm.html
// templates/kyc_approve.html
// templates/kyc_reject.html
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _enumsBusiness_typeJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\x50\x72\x4f\xcd\x4b\x2d\x4a\xcc\x51\x08\x29\x4a\x4c\xc9\xcc\x4b\x57\xd2\x01\x09\xfa\x97\x64\xa4\x16\x29\x71\xc5\x02\x02\x00\x00\xff\xff\xeb\x54\xff\x06\x22\x00\x00\x00")

func enumsBusiness_typeJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsBusiness_typeJson,
		"enums/business_type.json",
	)
}

func enumsBusiness_typeJson() (*asset, error) {
	bytes, err := enumsBusiness_typeJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/business_type.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsCountriesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x58\x5d\x72\x1b\x39\x0e\x7e\x9f\x53\xb0\xf2\x32\x49\x95\x67\xee\x10\xcb\xb1\xe3\x58\x72\xb4\x91\xe2\xa9\xc9\xd6\x3e\xa0\xbb\xe1\x6e\x44\x6c\x42\x01\x49\x69\xa4\x0b\x6d\xed\x39\xe6\x62\x5b\x54\x2b\x0d\xb4\xec\x79\x92\x3e\x00\x24\x41\xfc\xb3\xff\xfd\x8b\x73\xce\xbd\x79\xff\xdc\x76\x10\x28\x26\x08\x6f\xae\xce\x24\x0f\xa1\x71\xf7\xb1\xfc\x44\x25\x56\x10\x08\x14\xb6\x28\x06\xf6\x28\x54\x43\x70\x2b\xe8\x59\xa9\xa1\x61\x11\x03\x5b\xf6\x16\x65\xf2\x16\x27\x90\x3a\x51\x6d\x29\xd4\x66\x70\x45\x9b\x6b\x90\x2a\x37\xca\x92\x16\x43\xa2\x60\x08\x3d\x5a\xf5\x24\x57\x0a\x72\x4c\x02\x9e\xa6\x04\x03\x8f\x28\x15\xd0\x77\xb5\xc0\x35\x74\xd0\x43\x34\x50\x80\x0c\x37\xb4\x1e\x1a\x8c\x9d\x52\xa4\x82\x86\x75\x01\x7a\x90\x6c\x61\x4b\xb9\x37\x90\x8e\xa8\x28\x98\xad\x51\x7a\x73\xcd\xeb\x2e\x1b\xbf\x5c\xb3\xa7\x1d\xc1\x95\x5b\xfa\x2c\x14\x20\x11\x07\xf0\x6e\x95\x20\xa1\xe3\x67\x15\x0b\x40\x82\x57\x6e\x45\x21\xb9\x0f\x39\x26\x48\x94\xe3\xc9\x8c\x2b\x50\xb3\x5c\x73\x0c\x34\x58\xf7\x23\xca\x11\x5b\xde\x19\x83\x5e\x73\x8a\x7b\xb0\x38\xef\x30\x9d\xa3\x62\x24\x0a\x1c\xc9\x2b\xa2\x44\xb1\x73\xf7\xa1\x21\x08\xee\x73\x8d\x10\xdc\x1a\x45\x28\xb1\x1c\x54\x2a\x07\x24\x77\x53\x0c\x14\xc1\x83\x9a\x25\xfb\x16\x8c\x5b\xae\xb3\x6c\x28\x80\xbb\x85\xc8\x86\x96\x43\x43\x3f\xe1\x0c\x2a\x76\x4f\x28\x0d\x2a\xa5\xaf\xb8\xd1\x4d\x66\xd0\xa3\x30\x07\xc5\x01\x1a\xc3\x3d\xf4\x10\x2e\x43\x7d\x86\xa1\xc4\x8b\x7b\xff\x3c\xc4\xf4\x17\xdc\xe6\xca\x53\x3d\xf2\x3b\x68\xf4\x3f\x79\x34\x40\x0d\x36\xeb\x84\x62\xea\x21\x5e\xd8\x6c\xc6\x35\x47\xf7\xf6\x01\xd1\x53\x68\xdf\xbd\x38\x9c\x3d\xf7\x95\xb9\x00\xf7\x2c\x6c\xd8\xa1\xe5\x09\xb8\x72\xa9\x43\x77\x83\x3d\xd7\x02\x89\xea\x51\x5d\xc7\xcf\x85\xa5\xc2\xbc\x79\x79\x58\x4c\xe0\xbe\x98\x9c\x9b\x71\x42\xd7\xfc\x7a\xbf\x63\x12\x5d\x2a\x0c\xc9\xa8\x64\x72\x6b\x96\x05\xfe\xfe\x2f\xa8\x4a\x87\xad\x09\xfc\xd9\x11\xeb\x4e\x17\xde\x60\xe8\x41\x36\x23\xfc\x4e\x15\xe7\x34\x7a\xf3\x86\x7b\x0a\x46\x97\x9f\xf8\xa5\x07\x3e\xd4\x19\x1a\x96\x11\xb6\x87\x6d\x1a\x81\x77\x2b\xf0\xbb\x09\xff\x47\x86\xc4\x42\xe0\xdd\x5d\xa6\x80\xe3\x09\x1f\x84\x92\x18\x18\x13\x9b\x22\xf2\x21\x75\xc4\x5b\xc5\xb7\xe0\x37\xb6\x34\xba\xb7\x0b\xf0\x25\x67\xe2\x3b\x15\x11\xc6\x4b\x2b\xdf\xd2\x77\xd2\xff\xc1\x06\xc3\xad\x40\xa8\x51\x11\x86\xba\x2b\x3a\x9a\xc4\x3b\x13\x97\xec\x0f\x01\x23\x5d\xd2\x57\x9c\x53\x87\xa2\x89\x46\x38\x1e\x7c\x07\x95\x46\xfe\x1d\xd8\xb0\xba\x43\x96\xd6\x42\xe9\x21\x8c\x39\x7a\xd7\x19\x05\xee\xa8\x12\xf0\x09\x46\x73\xde\x09\xa2\x2a\x5d\xd0\xe4\x4e\x77\x82\x36\xc7\xee\x32\x34\xe8\x39\x6f\xd1\x50\x7a\xf3\x3f\x61\x0f\xde\x88\xa3\x84\x88\xaa\xca\xc4\x61\x03\xfa\xed\x9a\x62\x84\xac\xc4\x83\x51\xf7\x23\x90\x86\xd4\x47\x04\xf9\xe9\xaf\x53\xa5\x5b\xd4\x37\xa5\x68\xbe\x68\x6f\x1f\xd9\x1f\xdc\x0a\x51\x71\x68\xb2\x80\xe1\x87\xd6\x3d\x70\x68\x47\x42\x0e\x2d\x68\x55\xbb\xaf\xd1\xda\xe0\x54\x02\x0d\xe0\x89\xeb\xee\x05\xc2\xd5\x49\x83\x7e\x9a\xaf\x46\xe0\x87\xfe\x9f\xee\x1c\x7d\x29\xf6\x6e\xa1\x7d\xe1\x3e\x0a\xe0\x58\x85\xef\x13\xf8\x51\xad\x4f\xd0\x83\xc9\xa8\x4f\xb0\xd5\x65\x9f\x50\x8c\x9d\x3f\xb1\x34\xca\x7b\x80\x23\x6c\x3a\x3b\x14\x3c\x60\x38\x8c\xfb\x3c\x90\x50\x05\x6a\xe6\x07\x16\x84\x2b\x5b\x84\x96\xc8\x5b\x8f\xbf\xc6\xd7\x6e\x77\x96\x7e\x8d\x93\xf7\x40\x63\x26\x3f\x1c\xa4\x3d\x1c\xad\x12\x73\x60\xdd\xf9\x95\x92\xa7\x72\x69\xa7\xe6\x9e\x63\x05\x41\x13\x61\x8e\x91\x53\x37\x56\xac\x39\x55\x76\x92\x99\x53\x75\x30\x00\xeb\x2e\x61\x88\x09\xb5\x47\xcf\x29\x75\xd9\xce\x42\xf3\xfc\x17\xf6\x15\x67\x19\x83\x63\x01\xb5\x96\xc4\x05\xd4\xd8\x94\xba\x32\x54\xea\x67\x96\x1e\xc5\xfd\x99\x5b\x8e\x1e\x76\xaf\x99\x61\x01\x0d\xb4\x10\x6b\x4d\xb9\x05\x78\xd8\x93\x45\x07\x13\x4f\x0b\xf0\x0d\xed\x34\xef\x17\xe0\xad\x6c\x32\x82\x12\x3b\xf0\xfe\x32\xfa\x17\x20\x89\x02\xfd\xc8\xa8\x94\x2c\x94\xec\x2d\x07\x0a\x65\xb3\xe8\xc0\x29\xe9\x0a\xfc\x8b\x6a\xbd\x34\xd5\x32\x04\xfd\x95\xbb\xc5\x06\x05\x12\x36\xc3\xa8\x12\xed\x4d\xd9\x37\xbc\x7b\x3d\x18\x16\x1c\xc0\x6c\x58\x7a\x9d\x99\xe1\x16\x1c\x12\x06\x6c\xc5\x4a\xa4\x88\x22\x90\x94\x22\x5c\xdb\x2d\x8e\xa5\x06\xda\x5b\x1e\xa0\x74\xa4\x9f\xf0\x11\x7a\x32\x35\xf2\x11\xb2\x8c\x45\xe6\x11\xb7\xe0\x15\x94\x9a\x3b\x31\xe1\x23\xee\xdd\x0c\xfc\xe0\x69\x4b\xfc\x86\x60\xf3\xf7\x91\x6a\x10\x68\xb3\xca\x50\x8b\x32\x01\x66\x3d\xa9\xae\x8f\x2c\xcf\xec\x37\x17\xd3\xc4\x23\xcb\x50\xfe\x17\x65\x74\x0a\x70\xe9\xd9\x47\x96\x3d\x8c\x49\xfe\xb9\xd7\x5c\x5a\xc2\x66\x32\xf5\x2f\xc1\x6b\x49\x5d\x82\xc7\x98\x28\x94\x29\xf2\x62\xbc\x5c\x42\x80\x1e\x14\x6d\x33\xb8\x72\xcf\x69\xa1\x5e\x0e\x97\x1c\x4f\x5e\xa2\x9a\x72\xd9\x91\xa7\xed\x96\x82\x46\xec\x92\x52\x0d\x24\xaa\x0c\xdb\x4b\x2e\x59\x52\x6e\xd5\xfc\xcb\x8c\x92\xb8\xcc\x2d\xa3\x6f\xff\x05\xa6\x41\x7d\xc1\x1c\x48\x13\xfe\x0b\xf7\x36\x90\xbf\xe4\x18\xcb\x7c\x7a\x0e\x4b\x2b\xb8\x87\xa0\x8d\x6b\x05\x65\x7e\xbe\x06\x49\xdd\xdf\xff\xf3\xd8\x1f\xa6\x8c\x8f\xe8\x31\xc0\x95\x7b\x1f\x6b\x0c\x91\x38\x9c\xfa\xcb\x5a\x4e\x46\x75\x0d\xb8\x59\x0e\xdd\xc5\x66\x0f\x94\xd2\x30\x88\x3f\xe2\x8e\xe2\x94\x39\xcf\x35\x5d\xc8\x0f\x79\xe9\xde\x9e\x7b\xfd\x16\x24\xbd\x9b\x4a\x2c\x09\x45\x70\x68\x6d\x25\xb2\xbd\xde\x66\x10\x78\xa2\x50\x63\x48\x27\x89\x52\x7e\x86\xee\x6c\x6d\x3f\x79\xb2\xad\x60\x08\xa5\xc0\x4a\x61\xb7\xe6\x7e\x38\x63\x29\x14\x6a\xd2\x56\xbe\x82\xdc\x90\x7b\x2f\x60\xd2\x66\x55\xd2\x52\x9d\xb5\x42\x99\x30\x0f\x75\x87\xde\x9b\xe3\xcb\x0d\xc0\xcd\x91\x83\x6e\x4b\xa1\x85\x2d\x8b\x25\x14\x6b\x80\x24\x0c\xee\xed\x4d\x4e\x2f\xac\xe1\x79\x07\x1b\x73\x8e\xe7\x9d\x7d\x10\xae\xca\x58\xcd\x2f\x46\xfd\x15\xf7\xf6\x61\x78\x1a\xa6\xce\x73\xff\x94\x76\x9e\x97\x46\x33\x0e\xd4\x15\x84\x66\x4f\x75\xf7\x72\xdb\x13\x37\x9b\x8e\xba\xda\x9a\x17\xe4\x4a\xc8\xcd\x21\x6c\xf4\x90\x89\xe8\xe9\x75\xd7\xeb\xe5\x77\xe0\xab\x32\xc7\x94\xc3\x3f\x9d\x1c\x74\x40\x95\xde\x97\x37\x98\xc9\x96\xd5\x1e\x1b\xcb\xa6\x74\x1c\x6a\xd5\x48\x3a\x94\x52\x71\xf2\xda\x8b\xce\xb9\x06\xda\x97\xe1\x64\x29\xe5\x35\x58\x9f\x46\x8d\xc9\xb3\x66\x0d\xdf\x69\x5a\x38\xd6\x10\x8e\x70\x6a\x6f\x5f\x03\x95\x2a\xff\x4a\x2d\x5f\x77\x30\xd1\x71\x4d\x3d\xcb\x6f\x73\x8c\xda\x3f\xd6\xac\x0f\x9b\x35\x6f\xd0\x54\xa3\x35\x87\x56\x15\x10\x0a\xd4\xc0\x60\x8d\x35\x57\x60\x96\xe5\x40\xa6\x2d\xae\xb3\x6c\x74\xc0\x29\xa8\xc7\xe9\x97\x8e\x42\x1b\xf2\x71\x06\x54\x9e\x65\x17\x7e\x5c\xe7\x1d\xf8\x51\x8d\xaf\xad\x2d\x0f\x5f\x37\x02\xa4\x21\x7b\xbe\xfb\xc9\xa8\x1f\x7a\x2a\xfd\x2e\x5e\xf0\x1e\x28\xb4\x0d\xf7\xc5\xa4\x77\x82\x90\x5c\x79\x30\x03\x0d\x85\x63\x2c\xe4\x17\xf3\xde\x79\xed\xb9\x73\x2e\x28\xb0\xb8\xcf\x39\xf9\x03\x85\xf6\x52\xdd\xa9\x2c\x3f\xbb\xf3\x67\x99\x91\x2f\xd9\xd6\xe4\xaf\xc7\x0a\xa7\xae\x7c\x82\x90\x21\x8d\x17\x7e\xc2\x80\xc7\x8c\x1e\xae\xdc\xe9\xdb\xc3\xa9\xc5\xbc\xe6\xde\x27\xc2\xe4\x1e\x75\xaa\x7f\x22\x69\x69\x4c\xb6\x2b\x77\xfe\x32\xf0\x4f\xec\xaf\xbf\xaf\x7e\xff\xc9\xfb\x03\xbc\xa7\xc1\x27\xb7\x39\x65\x0d\xbc\x3f\x4a\xb0\x48\x70\x2b\xe8\x40\xbf\x29\xfd\x89\xbd\xc6\xfa\xb7\xc9\x13\xe7\x1b\xf5\x15\x54\x7b\x7c\xf3\xcb\x7f\xfe\x1f\x00\x00\xff\xff\xe3\xe1\x2f\xa2\xec\x12\x00\x00")

func enumsCountriesJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsCountriesJson,
		"enums/countries.json",
	)
}

func enumsCountriesJson() (*asset, error) {
	bytes, err := enumsCountriesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/countries.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsEducationJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\x50\x0a\x4e\x4d\xce\xcf\x4b\x49\x2c\xaa\x54\x70\x4d\x29\x4d\x4e\x2c\xc9\xcc\xcf\x53\xd2\x01\x49\x38\x25\x26\x67\xa4\xe6\xe4\x17\x41\x78\xbe\x89\xc5\x25\xa9\x50\xb6\x63\x71\x71\x66\x71\x49\x62\x5e\x89\x42\x41\x51\x7e\x5a\x6a\x71\x71\x3e\x42\x22\x3f\x39\x33\xb1\x24\x15\x5d\x22\x00\x95\xeb\x5f\x92\x91\x5a\xa4\xc4\x15\x0b\x08\x00\x00\xff\xff\x8b\x8f\x40\x08\x81\x00\x00\x00")

func enumsEducationJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsEducationJson,
		"enums/education.json",
	)
}

func enumsEducationJson() (*asset, error) {
	bytes, err := enumsEducationJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/education.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsEmployment_statusJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcd\xbd\x0a\xc2\x40\x10\x04\xe0\x3e\x4f\x31\xa4\x36\x0f\x61\xa1\x58\x49\x30\x76\x62\x11\xc9\x9c\x1c\xf7\xb3\xb2\xee\x11\x7c\x7b\x91\x33\xa0\xa0\xe5\x7c\x3b\xec\x9c\x1a\xa0\xdd\xa4\x5b\x94\x07\x27\x6c\x4b\x8c\xdd\xd1\x27\xb6\xab\x2f\xef\x47\xb5\x0f\x1f\x18\x5d\xc7\xf7\xb1\xd2\x5e\x0c\x8b\xe0\x52\x0c\x51\x24\xf8\x7c\x85\x13\xc5\x2c\x1a\x7e\xd4\xc6\x3c\x21\xcb\xbf\xea\x4e\x12\xd3\x18\xa8\x35\x1e\x68\x5e\x97\xb5\xc1\xca\xc4\x6c\x35\xf4\x4a\x47\xc5\xeb\xb5\x09\xd6\xf9\x3e\x53\xdb\xe6\xfc\x0c\x00\x00\xff\xff\x63\xec\xf6\xf5\xda\x00\x00\x00")

func enumsEmployment_statusJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsEmployment_statusJson,
		"enums/employment_status.json",
	)
}

func enumsEmployment_statusJson() (*asset, error) {
	bytes, err := enumsEmployment_statusJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/employment_status.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsEntity_typeJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\x50\xf2\xc9\xcc\xcd\x2c\x49\x4d\x51\xf0\xc9\x4c\x4c\xca\xcc\xc9\x2c\xa9\x54\xd2\x01\x09\xfb\x97\x64\xa4\x16\x29\x71\xc5\x02\x02\x00\x00\xff\xff\xdc\x91\xdd\x6c\x24\x00\x00\x00")

func enumsEntity_typeJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsEntity_typeJson,
		"enums/entity_type.json",
	)
}

func enumsEntity_typeJson() (*asset, error) {
	bytes, err := enumsEntity_typeJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/entity_type.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsGenderJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\x50\xf2\x4d\xcc\x49\x55\xd2\x01\xb1\xdc\x52\x73\xe1\x6c\xbf\xfc\x12\x85\xe2\xd2\xa2\x54\x25\xae\x58\x40\x00\x00\x00\xff\xff\x52\x2f\x0e\x38\x26\x00\x00\x00")

func enumsGenderJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsGenderJson,
		"enums/gender.json",
	)
}

func enumsGenderJson() (*asset, error) {
	bytes, err := enumsGenderJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/gender.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsId_documentJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\x50\x0a\x48\x2c\x2e\x2e\xc8\x2f\x2a\x51\xd2\x01\xf1\x82\x52\x8b\x33\x53\x52\xf3\x92\x53\x15\x3c\x5d\x20\x22\xce\x99\x25\x99\x55\xa9\x79\x20\x3e\x57\x2c\x20\x00\x00\xff\xff\xac\x89\x09\xfe\x32\x00\x00\x00")

func enumsId_documentJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsId_documentJson,
		"enums/id_document.json",
	)
}

func enumsId_documentJson() (*asset, error) {
	bytes, err := enumsId_documentJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/id_document.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsIndustryJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x92\xcd\x72\xdb\x3a\x0c\x85\xf7\x79\x0a\x4e\xd6\xf7\x0e\x9f\xc1\x49\x95\x9f\x8e\xdd\x24\x76\xda\x4d\xa7\x0b\x04\x86\x25\x4c\x28\xc0\x03\x82\x6a\xfd\xf6\x1d\x49\x94\xe3\x74\xc9\x73\x40\x00\xfc\x0e\x7f\x5e\x85\x70\xbd\x42\xd4\x22\xce\xd2\xc6\x3b\x16\x10\xa4\xeb\xff\x26\x7d\x3f\x90\x39\xe7\xd1\x78\x2e\x6f\x89\x31\x6c\x29\x81\xb3\x4a\xae\x15\x64\x9a\x8f\x80\x14\x57\x03\x4f\x46\xd5\xcd\x73\x6c\xc4\xc9\x1c\x58\x7a\x12\x9f\x1b\xe4\x8e\xa5\xad\x25\xc5\xb5\x57\xe7\xa1\x0e\xbb\x01\x79\x1f\x07\x6d\xd4\xbc\x85\x76\x51\x4b\x66\xa1\x9c\xc3\x17\x1a\x28\xe9\x71\x6c\xf5\x8f\xf3\x74\x3c\xaa\x79\x11\xf6\xd3\xec\xdc\x26\x32\x46\x48\x71\xb5\xef\x59\x38\xbb\xc1\xc7\x98\x5b\x95\xec\x56\x70\xdc\x35\xde\x01\x72\x62\x67\xca\x1f\x66\xe9\xc9\xc2\xbd\xea\x7e\xd1\x4a\x76\x1d\xb5\x1d\xd9\xc0\x0b\x9a\x66\x5f\x70\x7a\x6f\x7c\x35\x60\x39\xbf\xaa\x11\xb2\xf6\x14\xbf\xfb\xa7\xbe\x8d\xb4\x2c\x44\x76\x2e\xbb\xd7\x81\x6c\xe6\xb2\x19\x2b\xc1\xea\xee\xf7\x46\x54\x19\x3e\x10\x24\xef\x10\xac\x8e\x7c\xd0\x7c\x64\x87\xc4\x7e\x1a\x87\x0e\x94\xaa\x5e\x7a\x90\xb0\xa5\xac\xc5\x70\x99\xf8\x28\xd9\x21\xcd\x59\xc5\x0d\xb0\x38\x5d\x04\xfb\x28\xb9\xd8\xe5\xd1\xc9\x84\x2a\xd8\xaf\xfa\x16\x76\x04\x86\x5d\x58\xf1\x42\x61\x0d\xbf\x43\x23\x07\x35\xa4\x69\xeb\x1d\x61\xb1\x33\xf1\x35\xb5\x50\xb7\xd9\x80\x40\x3b\xd7\x34\x7f\x08\xcb\x07\xf9\x0d\x48\x39\x00\x7a\x19\x31\xc4\xa7\x23\xd9\xe5\x4f\xda\x80\xbd\x93\x9f\x01\x7d\x53\xf9\xff\xd9\xf4\xc0\x1e\x7f\x68\x2a\xe2\x44\x36\x3b\xcf\x1d\x58\x0f\x48\xc5\xa7\x8c\x6f\x58\x9d\xb0\xab\x9e\xe9\x81\x72\x66\x15\x48\x4b\x5e\xb5\xff\xcb\x2a\xbe\x94\x09\x5e\xb8\x55\x71\xd3\xba\xef\x96\x20\x85\x26\x3b\x38\x2d\x42\x76\x18\xe9\x78\xbc\x53\xdd\x7f\x8e\x7d\x4b\x0e\x5c\x6f\xee\x20\x2d\xcd\x77\xc8\x24\x48\x71\x4b\x79\x02\x57\xd5\x77\x4e\x89\xf6\x61\x0d\x6f\x5a\xea\xf6\xaf\x84\x9d\x68\xd2\xf6\xb4\x9c\x13\xa1\xf6\x7d\x11\xc6\x4b\x1c\xaf\x06\x92\xc7\x7f\x3d\x27\xb8\xd6\x96\xb3\x33\x56\xf7\xc9\x3b\xb2\xeb\xab\x5f\x7f\x03\x00\x00\xff\xff\x89\x06\xd9\x1d\xbe\x03\x00\x00")

func enumsIndustryJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsIndustryJson,
		"enums/industry.json",
	)
}

func enumsIndustryJson() (*asset, error) {
	bytes, err := enumsIndustryJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/industry.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsMarital_statusJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\x50\x0a\xce\xcc\x4b\xcf\x49\x55\xd2\x01\xb1\x7d\x13\x8b\x8a\x32\x53\x53\x20\x1c\x97\xcc\xb2\xfc\xa2\x64\x18\x2f\x3c\x33\x25\xbf\x3c\x35\x45\x89\x2b\x16\x10\x00\x00\xff\xff\x1b\xdc\x53\x3a\x36\x00\x00\x00")

func enumsMarital_statusJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsMarital_statusJson,
		"enums/marital_status.json",
	)
}

func enumsMarital_statusJson() (*asset, error) {
	bytes, err := enumsMarital_statusJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/marital_status.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsNationalitiesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x56\xcd\x72\xe3\x36\x0c\xbe\xef\x53\x68\xf6\xbc\x79\x88\x78\x93\x75\x1c\xff\xd4\x8d\x9d\xcc\x34\x9d\x1e\x20\x09\x2b\x21\xa6\x00\x07\x24\xed\xb5\x9e\xbe\xa3\xa6\x91\x00\xef\xf1\xfb\x08\x92\x00\xf8\x01\xc4\xdf\x5f\x8a\xa2\x28\xbe\xde\xfe\x6c\x5a\xe0\xaf\xdf\xfe\x47\xa1\x04\x26\x8b\x1b\x54\x8b\xb9\x16\x55\x8b\x1b\x09\x16\x26\x6a\x32\xf0\xb7\x62\x06\x5a\xe6\xda\xac\x68\x83\x9c\x88\xd1\x52\x1d\xba\xbb\x72\x4c\x0a\xe1\x9a\xb1\xb8\x47\x2d\x81\xde\x80\xe9\x93\x9a\x41\x0b\x9d\x31\x99\x41\xab\x40\x76\x9d\x9b\x00\x35\xc6\xd6\x50\x5a\x42\x6d\xf7\x60\x00\xcd\xd1\x33\x8d\x87\xd4\xa3\xc5\x4c\x8c\x11\x47\xdc\xe6\x04\x8e\xa0\x18\x21\xdf\xcc\xb3\x0b\x78\x26\x81\x4e\xf6\x58\x89\x43\xfc\xdf\x8a\x07\xd4\x1e\x1b\x39\x91\x4d\xc7\x5a\x52\x3c\x03\xc3\x68\xad\xd0\x93\xcd\xce\x4c\x33\xa3\xc5\x39\x34\xa0\x8e\xd0\x03\x31\x94\x68\x88\xcc\x36\xf2\xef\xd0\x95\x72\x45\xa0\x8a\xb0\xa3\x18\xbc\xc9\x11\x8b\x17\x54\xc7\x21\x0f\x4f\x57\xdc\xfe\x54\xaa\x0c\xdd\xfa\x9d\x2d\x05\x74\xd0\xe6\xec\xbb\x04\xe9\x4a\x6b\x2e\x9d\xa8\x85\x83\xd6\xdc\x86\x98\xa0\x78\x72\x17\xaa\x40\xb2\x47\xe4\xd2\x80\xcb\x51\x49\xd2\x08\x7b\xac\xda\x4f\x70\x07\x4c\x71\x42\x6f\x54\x4a\x4e\xa3\x62\xee\xa4\x23\xb6\xf7\xfc\x46\xdc\x57\x19\x6a\x51\x13\xdd\x7d\x73\x39\x5a\x57\x76\x10\x4e\x83\x89\xb1\x78\xcf\x90\x44\x09\x42\x71\x25\x94\x7b\xa5\xe4\xce\x8a\xc9\x3d\xc9\x7d\x6a\x49\x8e\x86\xf8\x41\x6f\x0e\xb1\x8d\xe6\x87\x22\x4f\x91\xce\xc1\x25\x79\x0e\xa5\xd8\x57\x98\xa3\xa8\x95\xfe\x1c\xb5\x33\xa8\x05\x06\xbb\xaa\x88\x07\x03\xbc\x52\xe6\x19\x12\x76\x10\x2c\xe3\xe2\x9c\xe7\x8b\x2b\x9b\x07\x20\x9b\xb2\x07\xe1\x3a\x9b\x84\x3d\x64\xf6\x02\x5f\x54\x18\x80\x6b\xd4\x91\x70\xea\x5e\x70\x3d\xc4\x66\x19\x75\xdd\x6d\xa1\xf0\x4e\x13\x30\x39\x5b\x44\x05\x0c\xd3\x5a\x72\x7d\x69\x71\x12\xeb\xc6\x23\x74\x60\xc5\xf0\x08\x47\x17\xd6\xa3\x68\xed\xee\x5d\x42\x0f\x87\x36\x26\xd3\xc7\x96\xc8\x17\x73\xc1\xcd\x92\x94\x4a\x98\x24\xb8\xcc\xe7\x21\x39\x23\x24\x6d\x5a\xea\x3f\xe1\x0a\x92\x6d\x2c\x2b\x2c\x9d\x03\x6b\x89\x92\x5a\x99\xac\xc5\xa6\x79\x45\xa5\xeb\xf1\x2b\x2a\x2f\x16\x61\xd5\x26\xe4\x98\x90\x78\xca\xf4\x8a\x52\x9b\x5d\x50\xab\xfc\x0b\xbb\x52\xb2\x36\x93\xd5\x1a\x2a\xac\x9d\x74\xd7\x10\xa0\x81\x78\xb1\xf8\x7c\xb5\x7e\x89\x9e\xa8\xe9\xe4\xb0\x5f\x4d\x36\x50\xd0\xd8\x42\x08\x8e\xca\x4a\x09\xbc\x0f\x03\x65\x09\xfc\x65\xdf\x6f\x4d\x95\x5e\x09\x67\x2d\xa1\x16\xeb\x85\x30\x36\x10\xdf\xb3\xc9\xf1\xd0\x9e\xdc\x16\x4e\xc8\xd8\x28\x19\x4a\xa5\xb2\x17\x49\x3f\x54\x63\xe5\x5a\x76\x67\x9c\xdf\x40\x47\xb6\x5a\x37\x90\x35\x1b\x88\x47\xb0\xb1\xde\xe5\x34\x15\xfa\x06\xcf\xc5\x2b\x82\x2f\x90\x0d\x55\xa0\xd0\xd8\x33\x68\xf8\xe1\xf1\x0a\x9b\x75\xd1\x33\x36\x9e\x48\x6d\xb1\x74\xcd\xee\x8f\xce\x48\x79\x0b\x07\x72\xda\xde\x42\x00\x73\xe3\x16\x18\x3a\xf7\x20\x5b\x38\x66\x28\x06\x87\xaf\x1a\xc4\xf6\xc3\x59\x23\xc7\x2d\x6a\x3e\xb9\x5e\x17\xe8\x48\x3c\x6a\x7b\x2b\xc1\x94\xf1\x56\x34\xe5\x26\x9b\x14\xfd\x09\x09\x74\xf4\xec\x49\xbc\x23\x4f\x39\xda\x57\x7f\x3a\x03\x9b\x19\x66\x49\x69\x50\x4d\x01\x5c\x17\x1b\x3c\x51\x74\xed\x9d\x38\x15\xab\x5c\xfd\xc6\xbd\x10\x57\xc3\xe8\x63\xf9\x4e\x1c\xea\x40\xdd\x57\xb8\x03\x29\xf6\xd2\xa1\x35\xca\x35\x15\xb7\x0a\x56\x0d\xbb\x41\x5e\x4e\x00\x3b\x54\x6f\x70\xa9\x5a\x0c\x41\x28\x8e\x14\xa1\x2a\x14\x2b\x14\x9b\xe7\x1d\x71\x03\x47\xf7\xa4\xbb\x20\x27\x38\x58\x84\x3c\xdd\x33\xfc\xd5\xc2\xc5\x22\x7a\x79\xed\xa4\x83\xa9\x6b\xee\x24\xa7\xf6\x7a\x26\xf8\x20\xbd\x7c\x3e\xb8\xdd\x30\x2f\xda\x60\x8e\xee\x53\xde\x29\x15\x2b\xe0\x83\xd9\x76\xbd\x21\x2b\xf1\x30\xc0\x8c\xc4\x19\xfa\xc9\x9b\x33\xd6\xf6\xb8\x33\xc5\x29\x2b\x17\x2b\xf9\x3d\x70\xef\x64\xb1\x87\xba\x6f\x69\x4c\xc6\xbe\x85\xf1\xd4\x7b\x88\xa9\xd8\x53\x27\x6a\x1c\xd9\x8b\x9f\x54\xf6\xc2\x8d\x39\x4d\x89\xa9\x76\x3f\xe5\x3e\xb3\x53\xd3\x7e\x98\xdc\x26\x5f\x07\xd8\xa1\x59\x3d\x41\x30\x05\xf5\xdc\x38\x99\x3e\x1f\xfe\x9b\x80\xcd\xb8\xd0\x91\x9a\xaf\x64\x36\x34\xbf\xe9\xf0\xdb\x0e\xdd\x03\x3d\x6b\xf6\x25\xf7\xdc\x97\x78\x55\xd1\x1b\xba\x79\x01\xce\x90\xf2\x27\xf3\x82\x8c\x7d\x46\xf3\xd7\xbf\x10\xa6\xe1\x35\xa6\x34\xfc\x85\xc3\xc0\xff\x89\x5e\xfd\x20\xf2\x4a\x5d\x09\xe5\x79\x50\xc5\x97\x7f\xfe\x0d\x00\x00\xff\xff\x66\xc9\xfc\xd2\x9c\x0c\x00\x00")

func enumsNationalitiesJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsNationalitiesJson,
		"enums/nationalities.json",
	)
}

func enumsNationalitiesJson() (*asset, error) {
	bytes, err := enumsNationalitiesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/nationalities.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations001_squashedSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\xdd\x72\xe2\x36\x14\xbe\xe7\x29\x74\x17\x32\x4d\x3a\x49\xba\x61\x5b\xf6\x8a\x06\x67\x87\x29\x35\x2d\x81\x99\xe6\x4a\x23\xec\x03\xa8\x18\xc9\x2b\xcb\x10\xd2\xe9\xbb\x77\x2c\xdb\xf8\xef\x60\x0c\x29\xcb\x1d\xd2\xe7\x73\x3e\x9d\x7f\xe9\xf6\x96\xfc\xb0\xe6\x0b\xc5\x34\x90\xa9\xdf\x6a\x3d\x8d\xad\xde\xc4\x22\x93\xde\xaf\x43\x8b\xb0\x50\x2f\xa5\xe2\xef\xe0\x52\x17\x36\xdc\x01\xd2\x6e\x11\x42\x08\x77\xc9\x8c\x2f\x02\x50\x9c\x79\xe4\x8f\xf1\xe0\xf7\xde\xf8\x95\xfc\x66\xbd\xde\x98\xdd\x2d\xf3\x3c\xd0\x94\xbb\x84\x0b\x0d\x0b\x50\xf1\xf2\x9c\x8b\x05\x28\x5f\x71\xa1\xc9\x86\x29\x67\xc9\x54\xbb\xf3\xe9\x9a\xd8\xa3\x09\xb1\xa7\xc3\x61\x8c\x72\x41\x33\xee\x05\xe4\xef\x40\x8a\x19\xe9\x5b\xcf\xbd\xe9\x70\x42\xae\xfe\xf9\xf7\xaa\xdb\x8d\xd7\x8a\x78\x47\x01\xd3\xe0\x52\xa6\x89\xe6\x6b\x08\x34\x5b\xfb\x64\xcb\xf5\x52\x86\xf1\x0a\x79\x97\x02\x32\x41\x0f\x77\xf7\x9f\x6f\xef\xef\x6f\xef\x7f\x22\xf7\x77\xdd\x4f\x9d\xee\xe3\xcf\x3f\x76\x1e\x3a\xbf\x74\x3e\x5f\x75\xbb\x35\x12\x62\x6d\x1e\x0b\x34\xf5\xe4\x82\x8b\x8b\x2b\x6c\x5d\x7f\x29\x79\x63\xb9\x66\x0e\x5d\xc1\x2e\x38\xe2\x05\x12\x73\xf5\xc3\x99\xc7\x9d\xbc\xa9\xe3\xf5\x00\x1c\x05\x05\x17\x54\x55\xad\x76\x0e\x05\xa1\xb9\xe6\x80\x6a\xf3\x15\x5f\x33\xb5\x23\x2b\xd8\xc5\x42\xc3\x00\x14\x8d\x21\x91\x7f\x4b\x3e\x65\x9a\x11\xcc\x79\x7a\xe7\x43\x1a\x24\x1f\xf3\x6b\xb4\x12\x2d\xb4\xaf\x42\xed\x44\x86\x85\x37\x7d\x43\x84\xdc\xb6\xaf\xcb\x11\x16\xfa\xee\xff\x25\x19\x37\x9c\x56\xcc\x59\x81\xfa\xb8\xdd\x4c\xb4\x05\x3a\x4a\x4d\x2c\x61\xaa\xda\x85\xd4\x7c\xce\x1d\xa6\xb9\x14\xcd\xfc\xc6\x5c\x57\x41\x10\xd4\x24\x24\xac\x19\xf7\xf6\xfb\x0f\x8f\x8f\xd7\x35\xbe\xab\x52\x92\x6a\xc1\x04\x7f\x37\x94\x68\x5c\x19\x9a\x31\xcb\xaa\x08\x6a\x9b\x82\x5c\xe4\x14\x09\xca\x07\x65\x20\xd9\x01\xee\xae\xb3\xdc\xbc\xbb\xea\x76\x93\x8d\x9a\x23\xf8\x20\x5c\x2e\x16\x91\x5f\x45\xc0\x1c\xa3\x31\xe0\x0b\x01\x2a\x3d\x09\x86\x38\x44\x3c\xfe\x92\x72\xd7\xe4\xd7\xae\x16\x14\xa7\x70\x94\xf3\x35\x0e\x4a\xb0\x82\xad\x81\x44\xc1\x99\x1d\x2f\x89\xd6\x12\x3e\xab\xcb\xa7\x9d\xb9\x99\xdb\xf4\x1b\x5d\xb2\x60\x59\xc3\x57\xbf\x51\x10\x1b\xf0\xa4\x9f\xf0\x2d\x39\x36\x75\x19\xad\xa9\x0e\x71\x52\x7c\xa4\x72\x9c\x52\x0b\x12\x9d\x32\x54\x4e\xd3\x4c\x54\xe0\xc8\x0d\xa8\x1d\x55\xf0\x2d\x84\xe0\xe4\x98\x2f\x74\x4e\xe6\x38\x32\x14\x66\xfd\x48\x9e\x52\x2d\x57\x20\x6a\x50\x8e\x74\xf1\x23\xa4\xbd\x41\xe8\x46\xc6\x88\xe4\xd0\x60\x29\xb7\xc7\x1a\xe1\x59\xd5\xdc\x54\xd7\xac\x40\x9a\xd0\xae\x56\xa0\xbd\x8d\x33\xb3\x55\x41\xa1\xef\x49\xe6\x1e\x55\x5d\xf5\xa0\x9e\xb3\x66\x01\x7f\xc4\xe2\x1b\x50\x7c\xce\xc1\x25\x33\x29\x3d\x60\x62\x7f\xc8\x39\xf3\x02\x28\x07\xbf\xf6\xe9\xc1\x6e\x39\x8b\xda\x8a\x48\xcb\x0a\xca\x98\x26\x98\xf3\x4a\x6c\x51\x0d\x9e\x5d\xbe\xe2\x52\x45\x75\xab\x10\xa1\xcd\xa7\xb6\x2a\xed\xc8\xc3\x97\x69\x56\xd5\x7d\xd3\x6e\x4d\x5d\xa9\x8e\x45\x07\xfb\x6c\x29\xda\x8a\xb5\x27\x3d\xeb\x5d\xb9\x77\xf3\x35\xd7\x54\xc1\x86\xc3\xb6\xe1\x27\xae\x74\xc2\x35\x08\x5d\x63\xc6\xf3\xb3\xe9\x63\x43\x10\x26\xc2\x05\x0f\x9a\xd6\xce\xfd\xd1\xe8\x06\x54\x10\xf5\xe3\xa4\xed\x55\x6d\x51\x0d\x90\xf3\xa6\x86\xac\x14\x74\xb0\x28\x28\xd5\x94\x0a\x26\x60\x9e\xae\xdb\x5f\xb9\x73\xea\x33\xc5\xd6\x01\xd6\xc4\x56\xb0\x73\x96\x8c\x8b\x38\x99\xcd\xc8\x98\x2b\x06\x4e\xd2\xdf\x0a\x95\x23\x2a\x59\x85\xd6\x5d\x1e\x4c\xce\x28\x27\x8d\x1a\x87\x13\x2a\x65\xca\x7e\x13\x70\x54\x63\x1a\x4d\x25\x11\xb0\x6a\x05\x04\x54\x30\x74\xa5\xa9\xf6\x86\x13\x6b\x9c\xc4\xc1\xc8\x1e\xbe\x56\xaf\xa4\x46\x50\xaf\xdf\x27\x4f\x23\xfb\x65\x32\xee\x0d\xec\x49\x15\x44\x73\x97\x4f\x43\x7c\x6a\x0f\xfe\x9c\x5a\xa4\x9d\x5b\x47\xd5\xe5\xe6\x79\x4c\x51\x6e\x9b\x26\xa3\x3c\x0d\x05\xff\x16\xc2\x5e\x43\xb2\x8c\x4a\x2f\xcc\xeb\x98\xfc\x02\x20\x1d\x73\x4d\x01\x2b\xab\x49\xf6\x6e\xcc\x5c\x8e\x2a\xab\x8c\x24\x98\xc2\x0a\x28\x6b\xae\x05\xbb\xed\x57\x51\x55\x7a\xce\x30\xe1\x91\xbb\x4d\xd0\x97\xc9\x9b\x45\x54\x92\x69\x0e\x98\xac\x58\xc2\x7e\xf2\x2f\x99\xe1\x44\x59\xd1\x46\xc2\x89\xc6\x2d\x24\x95\x67\xfe\xa1\xd2\x92\xaa\x84\xc9\x4b\xb6\x9a\x98\x2e\x29\x74\x03\xbb\x6f\xfd\x95\xf0\x98\xed\x12\x0e\x23\x3b\xe9\x8d\xd3\x97\x81\xfd\x95\xcc\xb4\x02\xa8\x63\x74\x66\x6a\x64\x2c\xe7\x11\xcd\xe7\xd1\xd8\x1a\x7c\xb5\xcd\x43\x42\x8e\x2b\x19\x5b\xcf\xd6\xd8\xb2\x9f\xac\x97\xf4\x7c\xed\x68\x79\x64\x93\xbe\x35\xb4\x26\x16\x79\xea\xbd\x3c\xf5\xfa\xd6\xa1\x2c\x4a\x9f\x13\x0e\xa5\x51\xba\xbf\xcf\xa3\x2a\x9b\x34\x95\xf2\x5c\x8c\x85\x4e\x63\x72\x62\x3e\x5f\x84\x07\x76\x2d\xc6\x08\x61\x38\x8a\xdd\x7d\x11\x9a\x18\x0c\xe1\xbc\xdf\xb9\x3c\xf1\xef\x10\x6a\x35\x97\x75\x8c\x66\x0d\x9c\xe2\xb7\x7a\x84\x3a\x0e\x2c\x9c\x03\xbb\x4f\x37\x3f\xd4\x87\x4b\xf7\xc5\xcc\x5d\x53\xe9\x93\x7b\x04\xa2\x3b\xd9\x29\x68\xce\x5f\x5e\x4e\x52\xbf\xff\xea\x08\x8f\x4b\x98\x23\xff\x78\xde\x97\x5b\xd1\x6a\xb9\x4a\xfa\x44\xb3\x99\x07\xc8\xe3\x79\xf6\xfb\x92\x07\x66\xef\xba\xd5\x5f\x01\x58\x78\x95\x3d\x06\x4c\x5f\x21\x6b\x81\xc5\x07\xc3\x1a\x20\xfa\x8c\x87\x01\xeb\x1e\xcb\x8e\x01\x71\x89\xd5\xa7\x94\x03\x1c\xa3\x1b\xfb\xa1\x5f\x19\x98\x5d\x94\xeb\x80\x71\xfb\x6d\x20\xb1\x64\x91\x22\xf0\xbf\x00\x00\x00\xff\xff\x10\x92\x58\xab\x63\x19\x00\x00")

func migrations001_squashedSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations001_squashedSql,
		"migrations/001_squashed.sql",
	)
}

func migrations001_squashedSql() (*asset, error) {
	bytes, err := migrations001_squashedSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/001_squashed.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations003_email_tokensSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xc1\x6e\xf2\x30\x10\x84\xef\x7e\x8a\x39\x12\xfd\x3f\x97\xaa\xe5\xc2\xb5\xaf\xd0\xb3\xb5\xc4\x1b\x58\xb1\xb1\xd3\xf5\x06\x44\x9f\xbe\x0a\xa1\x88\xa8\xdc\x7a\x4a\xb4\x3b\x1e\x7f\xe3\x59\xaf\xf1\xaf\x97\xbd\x91\x33\x3e\x86\x10\x5a\xe3\xe9\xd7\x69\xa7\x0c\xee\x49\x34\x7a\x39\x72\xae\x58\x05\x40\x12\x76\xb2\xaf\x6c\x42\x8a\xc1\xa4\x27\xbb\xe0\xc8\x97\xff\x01\x38\x93\x2a\x7b\x94\x84\x13\x59\x7b\x20\x5b\xbd\xbc\x6d\x1a\xe4\xe2\xc8\xa3\xea\x24\xb9\x3a\xdd\xd7\x9b\xd7\x66\x1a\x2a\x55\x8f\x95\xb3\x47\x72\xb8\xf4\x5c\x9d\xfa\x01\x67\xf1\x43\x19\xe7\x09\xbe\x4a\xe6\x49\xdb\x96\xdc\x89\xf5\x9c\xb0\x2b\x45\x91\xb8\xa3\x51\x1d\x1d\x69\xe5\xd0\x6c\x03\xa9\xb3\x3d\x83\xa7\x94\xa6\xc3\xd5\x8d\x24\xfb\x62\x17\x67\xf0\x1a\xbb\x23\x5f\xd0\x15\x63\xd9\xe7\x29\x14\x56\xf7\x48\x0d\x8c\x3b\x36\xce\x2d\xd7\x5b\xd0\xfa\xb8\x2d\x19\x89\x95\x9d\xd1\x52\x6d\x29\xf1\x9f\x50\xa2\xa4\x38\x66\xf9\x1c\x19\xf3\xe7\xe1\xaa\xa5\xf1\x0d\x05\xc9\xca\x80\xb6\xe8\xd8\x67\x9c\xd8\xa4\x13\x4e\xdb\x10\x1e\xcb\x7d\x2f\xe7\x1c\xc2\x55\xf8\x1b\xea\xb9\xeb\x4c\xba\x30\x9d\xdf\xfd\xa7\xd3\x65\x01\xdb\xf0\x1d\x00\x00\xff\xff\xf0\x49\xb2\xd1\x4d\x02\x00\x00")

func migrations003_email_tokensSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations003_email_tokensSql,
		"migrations/003_email_tokens.sql",
	)
}

func migrations003_email_tokensSql() (*asset, error) {
	bytes, err := migrations003_email_tokensSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/003_email_tokens.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations004_wallets_refactorSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6f\xdb\x30\x0c\xc5\xef\xfa\x14\xef\x56\x1b\x53\x81\xb5\x58\x8a\x0d\xbe\xee\x2b\xec\x1c\xb0\x16\x9d\x12\xd6\x1f\x83\x62\xd2\xe5\xdb\x0f\x4a\x9c\xad\x45\x83\x35\x37\x9b\x7a\xef\x89\xfc\x89\xf7\xf7\xf8\x92\x64\xa7\x64\x8c\x5f\x8b\x73\xa3\x72\xfb\x34\x7a\x8e\x8c\x39\x4c\xe8\x1c\x20\x01\x92\x0d\x8b\x4a\x22\x3d\x62\xe6\xa3\x77\x00\xc5\x5d\x51\xb1\x97\x84\x03\xe9\xf8\x42\xda\x3d\x6e\x36\x3d\x72\x31\xe4\x7d\x8c\x4d\xf2\x2c\x56\x9b\x95\x77\xac\xef\x0e\x32\x02\x8f\x92\x28\xbe\xab\xea\x55\xed\xf2\xa1\xea\xfa\xc1\x49\xae\xac\xd6\x8e\xca\xb9\x4f\x09\xfe\x5f\x4b\xfe\x74\xb5\x47\xf6\x50\x8f\xa5\xc7\x81\xe2\x9e\x2b\xba\x07\x8f\xbb\x3a\xea\x71\xb1\x3b\x8f\xc7\xcd\x93\xc7\xb7\xaf\x3f\x9e\x3c\xbe\x7b\x3c\xf4\x83\x73\x14\x8d\x75\x1d\xff\x95\x62\x64\xab\x50\xce\x94\x18\x63\x89\xfb\x94\xb1\xaf\xac\xa7\x7f\x2b\xe0\x44\x12\x87\xab\xa6\xa0\x65\xb9\x58\xe6\x30\x6d\x17\x52\x4a\xf5\xba\x96\x42\x78\x2b\x5d\x71\x5f\xa6\xfd\x9f\x27\x57\x53\x6a\xe2\xb5\xbc\x6d\xfe\x69\xe6\x23\xa6\xa2\x2c\xbb\xdc\x1e\x0b\xdd\x39\xb5\x87\xf2\xc4\xca\x79\xe4\xda\x2e\xea\x24\xf4\x9f\x37\x7f\x60\x95\x49\x46\x32\x29\x79\x6b\x65\xe6\x3c\x38\xf7\x76\x6d\x7e\x96\xd7\x7c\x0b\xb8\x13\xac\x46\xed\x42\xf0\x26\x18\x67\x6e\x30\xfe\x6d\xb7\x81\x96\xf0\x69\xee\xc7\x91\xd6\xfc\x53\xd6\xdf\xdd\x1f\xdc\x9f\x00\x00\x00\xff\xff\xcb\xf6\x05\x04\x1e\x03\x00\x00")

func migrations004_wallets_refactorSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations004_wallets_refactorSql,
		"migrations/004_wallets_refactor.sql",
	)
}

func migrations004_wallets_refactorSql() (*asset, error) {
	bytes, err := migrations004_wallets_refactorSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/004_wallets_refactor.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations005_tfa_backends_refactorSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x92\xc1\x4e\xc3\x30\x10\x44\xef\xfe\x8a\x3d\x36\x42\xbd\x20\x95\x4b\xaf\xfc\x02\xe7\x68\x63\x4f\x82\x15\x77\x1d\xad\x37\x54\xfd\x7b\x54\x1a\x45\x46\x20\x08\x17\xd4\x63\x76\x46\x3b\x99\xb7\xde\xef\xe9\xe1\x14\x07\x65\x03\xbd\x4c\xce\x99\xce\xe2\xaf\x1f\xc6\x5d\x02\x59\xcf\x6d\xc7\x7e\x84\x84\x42\x9e\x8b\xe7\x80\xa3\xe3\x64\xd0\xef\x1c\x41\xf3\x44\x3e\xa7\xf9\x24\x74\xe6\x94\x60\x6d\x0c\x3f\xf8\x39\x84\x2f\x76\x7a\x63\xf5\xaf\xac\xbb\xc7\xc3\x53\x43\x92\x8d\x64\x4e\xe9\xd7\x25\x52\x4c\x39\x8a\x7d\xd2\xda\xdb\xd6\xd2\xf6\x23\x8c\xfa\xac\x88\x83\xd0\x88\x0b\xed\xd6\xbc\x86\x14\x3d\x14\xe2\x51\x96\xbf\x28\xb5\x9a\x85\x02\x12\x0c\x1b\xfa\xdf\x84\xa5\xd1\xa4\x31\x6b\xb4\x0b\x15\xd8\x96\x1e\x35\xbc\x65\xb8\x0d\xdd\x32\xab\xc0\x1d\x9a\xa3\x73\xf5\x69\x9f\xf3\x59\xee\xe2\xb8\x5d\x1c\xa2\xd8\x9f\x11\x7e\x64\xff\x07\xc3\xeb\x0b\x5a\x73\xde\x03\x00\x00\xff\xff\x67\xa6\x62\x13\x1d\x03\x00\x00")

func migrations005_tfa_backends_refactorSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations005_tfa_backends_refactorSql,
		"migrations/005_tfa_backends_refactor.sql",
	)
}

func migrations005_tfa_backends_refactorSql() (*asset, error) {
	bytes, err := migrations005_tfa_backends_refactorSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/005_tfa_backends_refactor.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations006_totp_constraintSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8d\x3d\x8e\xc2\x40\x0c\x46\x7b\x9f\xc2\x5d\x12\xed\xe6\x04\x11\x1d\x57\xa0\x1e\x99\x19\x03\x16\xc1\x1e\x1c\x47\xc3\xf1\x51\xa4\x14\xd0\xd1\x7d\x3f\xd2\x7b\xe3\x88\x7f\x0f\xb9\x3a\x05\xe3\xa9\x02\x64\xe7\x2d\xae\x2a\xcf\x95\x51\xb4\xf0\x0b\xe3\x42\xe9\x4c\xf9\xce\x5a\x96\x14\x16\x35\x65\xd3\x25\x9c\x44\x03\x4d\xbf\xfe\xbe\xd1\x3c\x73\x24\x29\xff\xb8\x6f\x03\xb6\x1b\x3b\x63\xbf\xf7\x43\xb7\x31\xba\x61\x02\xf8\xb4\x1f\xad\x29\x40\x71\xab\x3f\x68\xa7\x77\x00\x00\x00\xff\xff\x28\x9b\x77\x33\xb8\x00\x00\x00")

func migrations006_totp_constraintSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations006_totp_constraintSql,
		"migrations/006_totp_constraint.sql",
	)
}

func migrations006_totp_constraintSql() (*asset, error) {
	bytes, err := migrations006_totp_constraintSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/006_totp_constraint.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations007_cascade_wallet_id_updateSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x91\x41\x4a\xc0\x30\x10\x45\xf7\x3d\xc5\x2c\x15\xe9\x09\xba\xf5\x0a\xae\xc3\x34\xf3\x53\x42\xd3\x49\x49\x46\x4a\x6f\x2f\x45\xc1\x54\x29\x08\xd6\x8d\xbb\xf0\x7f\xf8\xcc\xe3\xf5\x3d\x3d\x2d\x71\x2a\x6c\xa0\x97\xb5\xeb\x38\x19\x0a\x19\x8f\x09\x84\x85\x63\x72\x96\x67\x68\x25\x29\x79\x25\x9f\xb5\x5a\xe1\xa8\x76\x2a\xdd\xc6\x29\xc1\xaa\x0b\x33\xf6\xe1\x7a\x83\x45\x7e\x34\x41\x21\x17\xc4\x49\xe9\x78\x3f\xbc\x37\x2e\xca\x23\x15\x04\x14\xa8\x47\xa5\x8f\xff\x6d\x9b\x95\x04\x09\x06\xf2\x5c\x3d\x0b\x8e\xe4\x75\x15\xfe\x4c\x86\x33\xa1\x05\x76\x23\xfb\x19\x2a\xdf\x09\xdb\xb2\x3d\xcf\x86\xeb\x8d\x2f\x84\x57\x13\x7f\x4b\xd8\x3a\x7d\xce\x9b\xfe\x33\xab\x77\x38\xdc\x7f\xef\xd0\xee\xe3\x79\x0b\x00\x00\xff\xff\xde\x24\x4e\x77\x85\x03\x00\x00")

func migrations007_cascade_wallet_id_updateSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations007_cascade_wallet_id_updateSql,
		"migrations/007_cascade_wallet_id_update.sql",
	)
}

func migrations007_cascade_wallet_id_updateSql() (*asset, error) {
	bytes, err := migrations007_cascade_wallet_id_updateSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/007_cascade_wallet_id_update.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations008_password_constraintSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xb1\x0e\xc2\x30\x0c\x44\x77\x7f\x85\xb7\xb6\x82\x7e\x41\xc5\xc6\x2f\x30\x47\x26\x31\x10\x51\xec\xe0\xb8\x0a\x9f\x8f\x90\x8a\x04\x5b\xb7\xbb\xd3\xe9\xee\x8d\x23\xee\x1e\xf9\x6a\xe4\x8c\xa7\x02\x10\x8d\x3f\x72\x91\xfc\x5c\x18\xb3\x24\x7e\xa1\x5f\x28\x9c\x29\xde\x59\x52\x0d\x85\x6a\x6d\x6a\x29\x44\x95\xea\x46\x59\x1c\x55\xfe\x3a\x7d\xa3\x79\x66\x0f\x39\xed\x71\xcd\x06\x6c\x37\x36\xc6\x7e\xf5\x87\xee\xbb\xd3\x0d\x13\xc0\x2f\xc5\x51\x9b\x00\x24\xd3\xb2\xf1\x7e\x7a\x07\x00\x00\xff\xff\x1f\x2f\x94\xdd\xc4\x00\x00\x00")

func migrations008_password_constraintSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations008_password_constraintSql,
		"migrations/008_password_constraint.sql",
	)
}

func migrations008_password_constraintSql() (*asset, error) {
	bytes, err := migrations008_password_constraintSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/008_password_constraint.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations009_drop_tfa_keychainSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcf\xc1\xae\x82\x30\x10\x85\xe1\x7d\x9f\x62\x76\xdc\x1b\xc3\xce\xb8\x61\xeb\x2b\xb8\x26\x87\x76\x10\xc2\xd0\x36\x65\x2a\xf2\xf6\xc6\x9d\x9a\x26\x12\xf7\x33\x7f\xbe\x53\xd7\x74\x98\xc7\x6b\x82\x32\x5d\xa2\x31\x10\xe5\x44\x8a\x4e\x98\x56\x88\xb0\x2e\xe4\x52\x88\x64\x83\xe4\xd9\x93\xf6\x68\x63\xee\x64\xb4\xed\xc4\x5b\xb3\xeb\x7e\xe2\xcd\x0e\x18\x7d\xeb\xa0\xd8\xf7\xb2\x40\xb4\x31\xe6\x55\x77\x0e\xab\x2f\xfb\xe0\x5c\x99\x47\x37\x24\x3b\x20\xfd\x9d\x8e\xff\xe4\x83\x92\xcf\x22\xe4\xb8\x47\x16\xa5\xaa\x2a\x5b\x3e\x72\x6f\x7a\x52\xbe\xeb\xcf\xa9\xe7\xaa\xef\xa6\x47\x00\x00\x00\xff\xff\x9a\x2c\xea\xda\x93\x01\x00\x00")

func migrations009_drop_tfa_keychainSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations009_drop_tfa_keychainSql,
		"migrations/009_drop_tfa_keychain.sql",
	)
}

func migrations009_drop_tfa_keychainSql() (*asset, error) {
	bytes, err := migrations009_drop_tfa_keychainSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/009_drop_tfa_keychain.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations010_users_refactoringSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xb1\x0a\x02\x31\x0c\x86\xf7\x3e\x45\x46\x45\x6e\x13\x17\x57\x5f\xc1\x59\x62\x1a\xf4\x20\x97\x96\x34\x55\x7c\x7b\xb9\x03\x45\xe5\xa0\x88\x8e\x49\xbe\xff\x87\x2f\x5d\x07\xab\xa1\x3f\x19\x3a\xc3\x3e\x87\xe0\x56\x95\xc6\xc1\xf1\x28\x0c\xb5\xb0\x15\x20\x2c\x84\x91\xb7\x01\xc5\xd9\xde\x4e\xd1\x52\x06\x4a\x52\x07\x9d\x36\x07\xbf\xe5\x26\x58\x1c\x7d\x16\xc2\x18\x1f\xcc\xd8\x03\xbd\x3a\x68\x72\xd0\x2a\xd2\xe0\xa7\xce\x8f\x40\x78\xb5\xdb\xa5\xab\xfe\xe6\xf7\x2f\xb5\xe7\x9f\xe0\x82\x46\x67\xb4\xc5\x66\xbd\xfc\xce\x73\x3e\x78\x0f\x00\x00\xff\xff\xd8\xc8\x27\x17\xcd\x01\x00\x00")

func migrations010_users_refactoringSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations010_users_refactoringSql,
		"migrations/010_users_refactoring.sql",
	)
}

func migrations010_users_refactoringSql() (*asset, error) {
	bytes, err := migrations010_users_refactoringSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/010_users_refactoring.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations011_kyc_entitiesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd0\x41\x4b\xc3\x40\x10\x05\xe0\xfb\xfc\x8a\x77\x4c\xd0\x1e\xf4\xe0\x25\x78\xd8\x66\x17\xbb\x98\x6e\xea\x98\x45\x7b\x0a\xa1\x59\x64\x50\xb7\x25\xd9\x2a\xfd\xf7\x52\x2f\x36\x0a\xe2\xc5\xe3\x30\x8f\xc7\xcc\x37\x9b\xe1\xec\x55\x9e\x86\x2e\x05\xf8\x1d\x51\xc3\xde\x95\xaa\x31\x78\x3e\x6c\xda\x10\x93\x24\x09\x63\x41\xa4\xaa\xc6\x30\x1a\x35\xaf\xa6\x2b\x02\x34\xd7\x2b\x94\x75\xe5\x97\x0e\xd2\xff\x9e\x55\x5a\x7f\x45\x51\x2e\x14\x67\x97\x57\x39\x56\x6c\x97\x8a\xd7\xb8\x35\xeb\x82\xa8\x64\x73\xbc\xc0\x3b\x7b\xe7\x0d\xac\xd3\xe6\x71\xd2\xd3\x4a\xec\xe5\x4d\xfa\x7d\xf7\xd2\x6e\xb6\x71\x4c\x43\x27\x31\x11\x50\xbb\x49\x0e\xd9\x7e\x0c\x43\x2b\xfd\x39\xd2\x61\x17\x72\x02\x1e\x16\x86\x0d\xb2\xe3\x88\x6b\x5c\xe4\x05\x11\x9d\x12\xe8\xed\x7b\x3c\x41\xf8\xf9\xc3\x7f\x51\xcc\xed\xcd\xbd\x61\xab\xaa\x6f\x16\x9f\x8d\x7f\x25\x28\xe8\x23\x00\x00\xff\xff\xc5\x92\x81\x2a\xcf\x01\x00\x00")

func migrations011_kyc_entitiesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations011_kyc_entitiesSql,
		"migrations/011_kyc_entities.sql",
	)
}

func migrations011_kyc_entitiesSql() (*asset, error) {
	bytes, err := migrations011_kyc_entitiesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/011_kyc_entities.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations012_blobsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x31\x4f\xc3\x30\x10\x85\xf7\xfb\x15\x6f\x4c\x04\x5d\x10\xb0\x74\x32\xf6\x21\x2a\x82\x13\x39\x8e\x44\xa7\x28\x55\x0c\xaa\x28\x4d\x65\xb7\x54\xfd\xf7\xc8\x0e\x28\xe9\x8d\xf7\x3e\x9f\x3f\xbd\xc5\x02\x37\xdf\xdb\x4f\xdf\x1d\x1d\x9a\x03\x91\x34\x2c\x2c\xc3\x8a\xa7\x82\xb1\xd9\x0d\x9b\x80\x8c\x80\x6d\x8f\xd9\xc8\x17\x61\xb2\x87\xbb\x1c\x95\x59\xbd\x09\xb3\xc6\x2b\xaf\x6f\x09\x18\xce\x7b\xe7\xdb\xae\xef\xbd\x0b\x61\xa4\x1e\xef\x73\xe8\xd2\x42\x37\x45\x41\xe9\x6d\xa9\x6b\x6b\xc4\x4a\xdb\xf1\x7c\x7b\x0a\xce\x87\xf6\xe3\xcb\x5d\x52\x6e\xf8\x99\x0d\x6b\xc9\x35\x52\x82\xec\xef\x5e\x9e\xe2\x52\xa3\xa9\x54\x54\x94\xa2\x96\x42\x71\xdc\x28\x2e\x78\xda\x44\x93\xe3\xe5\xe0\x26\xdf\xf8\x59\x9a\x7f\x93\x88\xfc\x74\xbb\xd3\xc4\x58\x7e\xb7\x57\x08\xe5\x4b\xa2\x79\x3b\x6a\x38\xef\x89\x94\x29\xab\x79\x3b\xcb\xdf\x00\x00\x00\xff\xff\x2d\xbd\x1e\x9c\x41\x01\x00\x00")

func migrations012_blobsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations012_blobsSql,
		"migrations/012_blobs.sql",
	)
}

func migrations012_blobsSql() (*asset, error) {
	bytes, err := migrations012_blobsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/012_blobs.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations013_rm_org_walletsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x51\x4b\xc3\x30\x14\x85\xdf\xef\xaf\xb8\x6f\x5b\xd1\xc1\x10\xf1\x61\x7b\xca\xd2\xbb\x19\x8c\x99\xa4\x99\xd0\xa7\x12\x69\x1c\xc5\xda\x96\xb4\x32\xf4\xd7\x4b\xa6\xd5\x8d\x15\x99\xe7\x2d\xb9\xe7\x9e\xfb\x71\x26\x13\xbc\x78\x2d\xb6\xde\x76\x0e\x37\x0d\x40\xee\xeb\x06\x3b\xfb\x54\x3a\xac\xfd\xd6\x56\xc5\x87\xed\x8a\xba\xca\x76\xb6\x2c\x5d\xd7\xce\x01\xe0\x70\x25\xae\x77\x15\x00\xd7\xc4\x0c\xa1\x61\x0b\x49\x83\x6b\x30\x06\xc4\x22\xc7\x53\x2d\xc4\x2a\x21\x2d\x98\x1c\x98\x9d\x48\xad\x0d\xaa\x8d\x94\x10\x1e\x7c\xad\x12\xa3\x99\x50\x66\xf0\x64\xd6\xbc\xb8\xf7\xbd\xf1\x41\x8b\x7b\xa6\x53\xbc\xa3\xf4\x12\x10\xbf\xe6\xd9\x31\xcd\x42\xac\x42\xd0\x79\xfa\x17\xc6\xcf\xb9\xec\xb9\x07\xd2\xb4\x24\x4d\x8a\x53\x82\x7d\x3f\xe1\x7b\xad\x30\x26\x49\x86\x90\xb3\x84\xb3\x98\x02\xed\x51\xa6\xcd\x73\xef\xda\x16\x1f\x99\xe6\xb7\x4c\x8f\x6f\xae\xa3\xb3\x18\x86\x42\x06\x71\xde\x5a\xe7\x5b\x1c\x7f\x5b\xa2\x3f\xb0\x1a\xe7\xf7\x71\x87\xbd\xf4\x58\x57\xd3\x08\x63\x5a\xb2\x8d\x34\x38\x9a\x8e\x70\x36\xc3\xf0\xcf\xb8\x21\x1d\x4c\xa9\x50\xab\xdf\x12\xa3\x39\xc0\x67\x00\x00\x00\xff\xff\xb5\xdc\x1d\xd2\x86\x02\x00\x00")

func migrations013_rm_org_walletsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations013_rm_org_walletsSql,
		"migrations/013_rm_org_wallets.sql",
	)
}

func migrations013_rm_org_walletsSql() (*asset, error) {
	bytes, err := migrations013_rm_org_walletsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/013_rm_org_wallets.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations014_blob_relationshipsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xb1\x11\xc2\x30\x0c\x05\xd0\x5e\x53\xfc\x2e\x05\x97\x09\xd2\xb2\x02\x03\xc8\x58\x80\x39\x45\xf2\x59\xf2\x51\x70\xec\x4e\x9b\x22\x0b\xbc\x75\xc5\x65\x6f\xcf\xc1\x29\xb8\x75\x22\xd6\x94\x81\xe4\xa2\x82\xa2\x5e\x02\x5c\x2b\xee\xae\x73\x37\x0c\x51\xce\xe6\x16\xaf\xd6\x03\xef\x70\x2b\x30\x4f\xd8\x54\x45\x95\x07\x4f\x4d\x2c\xdf\xdf\xb2\x11\x1d\xe1\xab\x7f\xec\x8c\xae\xc3\xfb\xa9\xbd\xd1\x3f\x00\x00\xff\xff\xef\x60\x21\xd4\x98\x00\x00\x00")

func migrations014_blob_relationshipsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations014_blob_relationshipsSql,
		"migrations/014_blob_relationships.sql",
	)
}

func migrations014_blob_relationshipsSql() (*asset, error) {
	bytes, err := migrations014_blob_relationshipsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/014_blob_relationships.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations015_rm_recovery_requestsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcd\x31\xaa\x02\x41\x10\x84\xe1\xbc\x4f\x51\xe1\x7b\xc8\x82\xf9\xa4\x5e\xc1\x58\xda\x9d\x52\x16\x7a\x67\xd6\x9e\x1e\xc5\xdb\x8b\x0a\x62\xb0\xc6\x7f\xf1\xd5\x30\x60\x33\x4f\x67\xd7\x20\xf6\x8b\x88\x5a\xd0\x11\x7a\x34\xa2\x37\x7a\x43\xf6\xba\x60\xac\xd6\xe7\x02\xe7\x58\xaf\xf4\xfb\xa1\x85\x06\x93\xbc\xda\x7b\xfc\x49\xce\x4b\x67\x8b\x96\x44\xbe\xf1\x5d\xbd\x95\x35\x5e\x73\x5e\xd7\x31\x95\x40\xa9\x81\xd2\xcd\x90\x79\xd2\x6e\x81\x6d\x92\xd1\xf9\xcc\x3f\x6e\xf1\xf7\x9f\xe4\x11\x00\x00\xff\xff\x1c\xdb\xaf\x59\xd6\x00\x00\x00")

func migrations015_rm_recovery_requestsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations015_rm_recovery_requestsSql,
		"migrations/015_rm_recovery_requests.sql",
	)
}

func migrations015_rm_recovery_requestsSql() (*asset, error) {
	bytes, err := migrations015_rm_recovery_requestsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/015_rm_recovery_requests.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations016_recoveriesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\xc1\x6e\xb3\x30\x0c\xc7\xef\x79\x0a\x1f\xfb\xe9\x5b\x9f\x80\x13\x03\x4f\xaa\x84\x82\x46\x83\xd4\x5b\xe4\x11\x6f\x8b\x4a\x43\x97\xa4\xeb\xfa\xf6\x53\x69\x61\x6c\x54\xda\x38\xe2\xdf\xdf\xbf\xd8\xc9\x72\x09\xff\x77\xf6\xc5\x53\x64\xa8\xf7\x42\x64\x15\xa6\x0a\xa1\x96\xab\xc7\x1a\x61\x25\x73\xdc\xc0\x91\xda\x96\x63\xd0\xbc\x23\xdb\xea\x83\xb3\x6f\x07\xd6\x4d\xe7\x42\xf4\x64\x5d\x84\x52\x0e\xc8\xa2\x47\xfe\x25\x63\x1f\x95\xde\x17\x08\x9e\x9b\xee\x9d\xbd\xe5\x20\x16\x02\xae\x30\x5c\x3f\x85\x1b\x05\xb2\x54\x20\xeb\xa2\x10\xe7\x3f\x59\x29\xd7\xaa\x4a\x57\x52\x4d\x92\x7a\x38\xc5\xf3\x96\x4f\x3d\x56\xe1\x03\x56\x28\x33\x5c\x0f\x7a\xb8\xfa\xfb\x72\x29\x21\xc7\x02\x15\x42\x96\xae\xb3\x34\xc7\x3b\x01\x10\xa8\x1d\xc5\x3f\xd4\xe7\xf2\x96\x4f\xcd\x2b\x59\xa7\x0d\x45\x9a\x97\x2f\x1a\x6d\xcd\xed\x34\x19\xe3\x39\x84\x9b\x73\x4d\x76\xf2\x6d\xb7\xb3\x01\xb5\x35\xf3\x15\x8b\x7e\x9c\x2f\x16\x16\x23\x7c\x6e\x2c\xa6\xb7\x98\x77\x47\x27\x84\xf1\xdd\x1e\xac\x33\xfc\xf1\x47\x45\x72\x89\x44\x7a\x6a\x79\x12\x49\xa6\x9d\x7e\x7b\x08\x0d\x85\x86\x0c\x27\x9f\x01\x00\x00\xff\xff\xb5\xac\x9b\x0a\x55\x02\x00\x00")

func migrations016_recoveriesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations016_recoveriesSql,
		"migrations/016_recoveries.sql",
	)
}

func migrations016_recoveriesSql() (*asset, error) {
	bytes, err := migrations016_recoveriesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/016_recoveries.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations017_rm_pending_transactionsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\xc1\x8e\xda\x30\x14\xbc\xfb\x2b\xde\x0d\x50\xcb\xad\xea\x01\x4e\x26\x79\xd0\xa8\x21\x41\x8e\xa9\xca\xc9\x72\x13\x17\x2c\xc0\xb1\x12\xd3\x36\x7f\x5f\x39\xbb\x61\xa3\x25\x80\xf6\x1d\xf3\x66\xe6\xc5\x33\x33\x9d\xc2\xa7\xb3\xde\x57\xd2\x29\xd8\x5a\x42\x42\x96\x6e\x80\xd3\x45\x8c\x60\x95\x29\xb4\xd9\x0b\x57\x49\x53\xcb\xdc\xe9\xd2\x88\x5a\xef\x8d\xaa\xea\xf9\x13\x5c\x3d\x27\xa4\xaf\x1c\x96\x7f\x0d\x21\x01\x43\xca\xf1\x01\x8b\x8c\x09\x80\x2e\xa0\x3f\x8b\x68\x95\x21\x8b\x68\x0c\x00\x49\xca\x21\xd9\xc6\x31\xf1\x8b\x20\x4d\x32\xce\x68\x94\xf0\x41\x2d\x61\x8f\xaa\x69\x81\x1b\x16\xad\x29\xdb\xc1\x77\xdc\x7d\x26\x00\xee\x9f\x38\xc8\xfa\xd0\xe9\xff\xa0\x2c\xf8\x46\xd9\xf8\xeb\x97\xc9\x55\xff\x15\xa6\xcc\x1f\x75\x2a\xad\xf2\x30\x8e\x3f\x79\x47\xe9\xc3\x4a\xab\x2a\xd9\x5a\xe3\x1a\xab\x20\x4a\x38\xae\x90\xdd\xc0\x6a\xe7\x6d\xb8\xce\x3d\x58\x5e\x29\xe9\x54\x21\xa4\x6b\x57\x3c\x5a\x63\xc6\xe9\x7a\xe3\x77\x17\x5b\xdc\xdd\xd5\xe5\xa5\xca\xdf\xf4\x87\xde\x44\x26\x73\xf2\x3c\x82\x2e\xe0\x36\x89\xa1\xbd\x2e\x7c\x22\xde\xf4\x9b\xf9\x40\x3a\xdd\x19\x31\x7c\x42\xfc\xee\xb2\x63\xb8\x44\x86\x49\x80\xd9\x70\x61\x3c\x26\x4d\x20\xc4\x18\x39\x42\x40\xb3\x80\x86\xd8\x3a\xd2\x1e\x10\xba\x50\xc6\x69\xd7\xf4\xda\xf4\xf0\xdf\x7b\x54\x7b\xf9\x75\xd2\xb9\x38\xaa\xe6\xd6\xd4\x27\x54\x23\xcf\xaa\x0f\x69\xcb\x13\xe2\x92\x6e\x63\x0e\xa3\x11\xcc\x66\x2f\x9f\xfa\xd4\x77\xb5\x1f\x6a\xca\xa0\xd9\x3e\xd6\xff\x01\x00\x00\xff\xff\x33\x7c\xb9\x5b\xc5\x03\x00\x00")

func migrations017_rm_pending_transactionsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations017_rm_pending_transactionsSql,
		"migrations/017_rm_pending_transactions.sql",
	)
}

func migrations017_rm_pending_transactionsSql() (*asset, error) {
	bytes, err := migrations017_rm_pending_transactionsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/017_rm_pending_transactions.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations018_user_kycSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\x31\x0e\xc2\x30\x10\x44\xd1\xde\xa7\x98\x2e\x05\x8a\x44\x9f\x96\x2b\x50\x47\xc6\x1e\x50\x60\xb3\x0e\xeb\xb5\x80\xdb\xd3\x06\xc9\xa2\xff\xfa\x7a\xe3\x88\xc3\xba\xdc\x2c\x3a\x71\xde\x42\x88\xe2\x34\x78\xbc\x08\xd1\x2a\xad\x22\xe6\x8c\x54\xa4\xad\x8a\xc7\x27\xcd\x95\xcf\x46\x4d\xc4\xa2\x0e\x2d\x0e\x6d\x22\xc8\xbc\xc6\x26\x8e\xe3\xf4\xff\x60\xbc\x33\xf9\x6c\x8c\xb5\x28\x9c\xef\xce\x63\x18\xa6\x10\xf6\xae\x53\x79\x69\x4f\x96\xad\x6c\x3d\x5a\xcf\xb0\x6f\x7f\x10\x53\xf8\x06\x00\x00\xff\xff\xb2\x19\xdc\xf2\x03\x01\x00\x00")

func migrations018_user_kycSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations018_user_kycSql,
		"migrations/018_user_kyc.sql",
	)
}

func migrations018_user_kycSql() (*asset, error) {
	bytes, err := migrations018_user_kycSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/018_user_kyc.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations019_airdropsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xc1\x6a\xc3\x30\x10\x44\xef\xfb\x15\x73\x4c\x68\xf3\x05\x3e\xa9\xd2\x16\x0c\x46\x4e\x65\x09\x72\x33\x06\x6f\x8b\x29\xb5\x5d\x29\x21\xed\xdf\x17\xa9\x10\xa7\x87\x5e\x77\x87\x99\x37\x73\x38\xe0\xe1\x63\x7a\x8b\xc3\x59\x10\x56\x22\xed\x58\x79\x86\x57\x4f\x0d\x63\x98\xe2\x18\x97\x35\x61\x47\xc0\x72\x9d\x25\xc2\xf3\xc9\xc3\xb6\x1e\x36\x34\x0d\x01\x80\x6e\x6d\xe7\x9d\xaa\xad\xbf\xe9\xfb\x4b\x92\x98\xfa\xd7\x77\xf9\x2e\x12\xc7\xcf\xec\xd8\x6a\xee\x50\x3e\xd8\x0d\xe3\x18\x25\xa5\x7d\x79\xb7\x16\xe1\x68\x72\xac\x56\x9d\x56\x86\xf3\xc5\x70\xc3\xdb\xe5\x91\x80\x74\xce\x90\x39\x67\x03\xd8\x57\x37\xe4\x60\xeb\x97\xc0\xa8\xad\xe1\xd3\x1d\xc9\x3c\x7d\x5e\xa4\x5f\x25\x16\x28\x2a\x69\x5b\xaf\x52\x2a\x9b\xdc\xef\x60\x96\xeb\x4c\x64\x5c\x7b\xc4\x34\x8f\xf2\xf5\xaf\x5b\xf5\x2b\xfa\x3b\x56\x45\x44\x3f\x01\x00\x00\xff\xff\x9d\xd2\x6a\x50\x56\x01\x00\x00")

func migrations019_airdropsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations019_airdropsSql,
		"migrations/019_airdrops.sql",
	)
}

func migrations019_airdropsSql() (*asset, error) {
	bytes, err := migrations019_airdropsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/019_airdrops.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations020_favoritesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x91\xc1\x6e\x83\x30\x0c\x86\xef\x79\x0a\x1f\x5b\xad\x7d\x82\x9e\x52\xe2\x4e\xd1\xd2\xc0\x42\x22\xb5\x27\x84\x86\x3b\xa1\x6a\xd0\x05\xba\x8a\xb7\x9f\x12\xc6\xca\xa6\x49\xe3\x44\xec\x5f\xf6\xf7\xff\x5e\xaf\xe1\xe1\xad\x7e\xf5\x65\x4f\xe0\x2e\x8c\x25\x06\xb9\x45\xb0\x7c\xab\x10\x4e\xe5\x47\xeb\xeb\x9e\x3a\x58\x30\x80\xba\x82\xe9\xdb\xca\xc7\x1c\x8d\xe4\x0a\x32\x23\xf7\xdc\x1c\xe1\x09\x8f\x2b\x06\xf0\xe2\xa9\xec\xa9\x2a\xca\x1e\xac\xdc\x63\x6e\xf9\x3e\x03\x9d\x5a\xd0\x4e\x29\x10\xb8\xe3\x4e\x59\x68\xda\xdb\x62\x19\xe4\xed\xad\x21\x3f\x8e\xb4\x78\xb0\xe3\xdf\x24\x67\xe1\x91\xa4\x3a\xb7\x86\x4b\x6d\xef\x34\xc5\xb5\x23\xdf\x15\xa7\x33\x0d\x51\x63\x70\x87\x06\x75\x82\x39\xc4\x0e\x2c\xca\xaa\xf2\xd4\x75\xcb\xd8\x4e\x35\xb8\x4c\x04\x57\x09\xcf\x13\x2e\x30\x54\x04\x2a\xbc\x57\x02\x4b\x3f\x5c\xe8\xcb\x5e\xd8\xf6\x93\x25\x08\xce\x34\x4c\xfe\xff\x80\x5d\x6e\xbe\xc3\x73\x5a\x3e\x3b\x04\xa9\x05\x1e\xe6\xd4\x4d\xfd\x7e\xa5\xe2\x42\x3e\x1a\x60\x91\x6c\x16\x71\x0c\x63\x15\x39\x56\x61\x59\x98\x38\x3f\x8f\x68\x6f\x0d\x63\xc2\xa4\xd9\x7f\xa3\x37\xa3\xea\xd7\x11\x37\x9f\x01\x00\x00\xff\xff\xcc\x30\x93\x7c\xec\x01\x00\x00")

func migrations020_favoritesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations020_favoritesSql,
		"migrations/020_favorites.sql",
	)
}

func migrations020_favoritesSql() (*asset, error) {
	bytes, err := migrations020_favoritesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/020_favorites.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations021_kdf_v2Sql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x55\x4d\x6f\xe3\x36\x10\xbd\xeb\x57\xbc\x9b\x63\x54\xda\xed\x2e\xda\x45\x0b\x63\x0f\xde\x44\x59\x18\x75\xe4\x85\xac\x14\xcd\x29\xa0\xc5\x91\xc3\x8a\x22\x05\x92\x8a\xe0\x7f\x5f\x50\x5f\xb6\xd3\x24\x45\x52\x5d\x0c\xf3\x69\x86\x6f\xde\xbc\x19\x45\x11\x7e\xaa\xc4\xde\x30\x47\xb8\xad\x83\x20\x8a\x50\x08\x63\x1d\x6a\x66\x1c\x84\x45\x2e\x89\xa9\xa6\x86\x2e\xa0\x25\x47\xc9\x0b\x38\xb6\x93\x04\xa5\x77\x9a\x1f\xd0\x58\xe2\xc7\xa8\x42\x1b\x12\x7b\x85\x92\x0e\xc1\x72\x9d\xc5\x29\xb2\xe5\xb7\x75\x8c\x96\x49\x49\xce\x06\xc0\x55\xba\xf9\x81\xcb\x4d\xb2\xcd\xd2\xe5\x2a\xc9\x46\xe4\xbe\xe4\xc5\x7d\x51\xd2\x61\xe1\x93\xb9\x07\x52\xfd\x35\x41\xf7\x7e\x9f\xa4\xe4\xc5\xa2\x63\x68\x29\xd7\x8a\x4f\x14\x59\xee\x1a\x26\xd1\x97\x21\xb4\xf2\xaf\xe4\x86\x7c\x49\x3b\x66\xe9\xc8\x39\xb8\x4c\xe3\x65\x16\x1f\xd3\xe1\x22\x00\x1e\xc9\x58\xa1\x15\x80\x6f\xab\xef\x9e\xd2\x8f\x74\x75\xb3\x4c\xef\xf0\x47\x7c\x17\x06\x00\x93\x7b\x6d\x84\x7b\xa8\x90\xc5\x7f\x65\x00\x92\x4d\x86\xe4\x76\xbd\xf6\xe0\x4e\x38\x8b\xee\x19\x82\x4f\x41\x85\xf1\x79\x06\x34\xaf\x81\xf5\x4b\x60\x30\xef\x25\x18\xea\xab\x98\x3a\x44\x4e\x47\xfe\x17\x52\xa8\xf2\x5f\x25\xde\x0f\x02\x9f\x97\xfa\xcc\x95\xfd\x7b\xc0\x73\x55\x5a\x26\x5d\xc7\xe6\x09\x36\xb2\x11\xca\x92\x71\xe0\x54\xb0\x46\xba\x4e\xd9\xe1\x2a\x1b\xac\x92\x6d\x9c\x66\x58\x25\xd9\xa6\x97\x7c\x40\xc2\xa3\xb0\x61\x27\x63\x08\x15\xc2\x84\xa8\xe7\xf8\x73\xb9\xbe\x8d\xb7\xb8\x98\x7d\x9a\x85\x98\xd9\xdc\x1c\x6a\x37\x0b\xf1\xf9\xd7\x2f\x21\x7e\xf9\xf9\xf7\x2f\x21\x7e\x0b\xf1\x69\x3e\x78\x45\x58\x68\x45\xde\x09\x96\x55\x84\x5d\xe3\xa6\x42\x77\x4d\x55\xc3\x8a\xbd\x12\x85\x20\x8b\xa6\xe6\x5e\x35\xa7\xbb\xb3\xa6\x46\x21\x75\xeb\x4d\x8b\x5c\x0a\x52\xee\x7f\xb2\xfd\xfc\x1f\x6c\x3d\x5d\x43\xd2\x53\x28\x79\xf1\xf1\xd8\x9d\x8f\x63\x93\x3a\x9b\xda\xb3\xd1\x39\xe9\x61\x00\x2c\xaf\xae\x4e\xa7\xe7\x04\x9c\x7e\xfd\x14\xe1\x7a\x93\xc6\xab\xef\x89\xf7\x30\x2e\x7a\x64\x8e\x34\xbe\x8e\xd3\x38\xb9\x8c\xb7\x98\x5c\x41\x15\x13\x72\x0e\xad\xc0\x49\x92\x23\xe4\xcc\xe6\x8c\xd3\x22\x78\x1f\x8b\x71\x8e\xcf\x19\x0c\x2a\x9e\x51\x38\x95\x77\x10\x67\xdc\x44\x9d\xdf\x9c\xf6\x7b\x00\x8a\xda\x61\x7a\x9f\xf4\xe6\xe8\xec\xa9\x47\xfd\x49\xd8\xc5\xcf\xb1\x8d\xd7\xf1\x65\x16\xe0\xcd\x4f\xfb\xc1\xa7\x17\x3c\x7c\x57\x6c\xa7\xe8\xfb\x42\x3d\xef\x37\x07\x5e\xa7\x9b\x9b\xa9\x9f\x6d\x2f\x24\x37\xba\x86\xd2\x6d\x24\x54\x54\xf2\x22\x1a\xe1\x5c\xcb\xa6\x52\xf6\xf5\xdd\xbc\xbe\xbd\x49\x70\x54\xe0\xf4\xd4\x13\xec\x6f\x98\xbe\x1a\x57\xba\x55\xdd\x49\x4b\x68\xb5\x9a\x39\xd0\xa3\xdf\xde\xe6\xe0\x3b\x68\xe8\xd1\x6f\x06\xd1\xb5\xd3\x3a\x1f\x50\x1b\xa1\x8d\xff\x3b\x2d\xec\x10\x56\xe3\xef\xc6\x3a\x54\xac\x14\x6a\x0f\xae\x5b\x85\x9a\xd9\x97\x88\xf6\xfe\x3b\xe1\xe9\x4d\x11\x9e\x03\x9d\x87\xfc\xbe\x7a\xe2\xe4\x17\x5d\xfc\xba\x83\xfb\x7b\x5e\x35\x70\x30\xac\x97\xa9\x17\xb0\xe4\x06\x82\x5f\x2f\x2c\x49\xca\x8f\x9b\xa9\x30\xba\x3a\x73\x71\x89\xf6\x81\x0c\x8d\x06\xfa\x5a\x7e\x18\xc6\x76\xf1\x7c\x5e\x5f\xdf\x94\xb5\x2b\xf6\x2d\x29\xcf\x3f\xab\x63\xc4\xe2\x9f\x00\x00\x00\xff\xff\x84\xeb\xa6\xe9\x0f\x08\x00\x00")

func migrations021_kdf_v2SqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations021_kdf_v2Sql,
		"migrations/021_kdf_v2.sql",
	)
}

func migrations021_kdf_v2Sql() (*asset, error) {
	bytes, err := migrations021_kdf_v2SqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/021_kdf_v2.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations022_referralsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\xd1\x6e\xd4\x30\x10\x7c\xf7\x57\xcc\xe3\x55\x5c\xfa\x03\xf7\x14\xee\x5c\x14\x51\xe5\x44\x9a\x93\xe0\x29\xf2\xc5\x9b\xd4\xaa\xb3\x0e\x8e\x4d\x9a\xbf\x47\xe1\x48\x53\xe0\x00\xa9\x6f\x6b\xef\xee\xcc\x78\x3c\x49\x82\x77\x9d\x69\xbd\x0a\x84\x53\x2f\x44\xed\x69\x2e\x83\x3a\x5b\x82\xa7\x86\xbc\x57\x76\xc0\x46\x00\x49\x02\x55\xd7\x2e\x72\x80\xd1\x70\x0d\x1c\x13\xc6\x47\xf7\x73\x8c\xb4\xc0\x52\x7a\x04\x7a\x0e\x60\x17\xc0\xd1\xda\xed\xbf\xb6\x1f\xd5\x37\xc2\x99\x88\xff\xc4\x51\xf6\x57\x1c\x71\xb3\x13\x22\x49\x10\xd9\x7c\x8d\x84\xda\xf1\x10\xbc\x32\x1c\xd0\x38\xbf\xc0\x57\x46\xff\x38\x36\xce\x93\x69\x19\x4f\x34\x0d\xb7\xf3\x96\x69\x30\xb9\x88\x73\xec\x7a\xd2\x30\x1c\x1c\x4c\x80\xe9\x7a\x4b\x1d\x71\x30\xdc\xa2\x8b\x36\x98\x64\x30\x2d\x6f\x31\x38\xef\xa7\x2d\x1a\xc3\x7a\xde\xf3\x18\xd5\x04\xe5\x5d\x64\x7d\x2b\xf6\x85\x4c\x4b\x89\x53\x9e\x7d\x3a\x49\x64\xf9\x41\x7e\xc6\xa8\xac\xa5\x30\x54\xab\x8e\xea\x22\x54\x00\xc7\x7c\x69\x63\xb3\xf6\xe7\xe7\xa4\xf7\xa5\x2c\x50\xa6\xef\xef\xe5\xea\xb7\x00\xd2\xc3\x01\xfb\x63\xfe\x50\x16\x69\x96\x97\x6b\xab\x5a\x2c\xae\x16\xbe\xe6\x89\x26\xdc\x1d\x0b\x99\x7d\xc8\xf1\x51\x7e\xc1\x66\x19\xb9\x41\x21\xef\x64\x21\xf3\xbd\x7c\xb8\xca\x0f\xc7\xd0\x64\x29\x10\x6a\x35\xd4\x4a\xd3\xdb\x15\x29\xfb\x5f\x45\xca\xbe\x4d\xd1\x35\xb7\xaf\xd0\xbf\x76\xfb\x55\x74\x5f\xb8\x2f\xe1\x79\x89\xfb\xc1\x8d\x2c\x84\xf6\xae\xff\x3d\xee\xbb\xcb\xad\x61\x4d\xcf\x7f\xff\xd6\x9d\xf8\x1e\x00\x00\xff\xff\xa9\x9d\x8b\x37\x3d\x03\x00\x00")

func migrations022_referralsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations022_referralsSql,
		"migrations/022_referrals.sql",
	)
}

func migrations022_referralsSql() (*asset, error) {
	bytes, err := migrations022_referralsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/022_referrals.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations023_master_blobsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcc\x21\x0e\x42\x31\x0c\x06\x60\xdf\x53\xfc\x9e\xbc\x13\x60\xb9\x02\x9a\x74\xac\x21\x24\x5d\xbb\xb4\x5d\x76\x7d\x04\x02\xec\xb3\x9f\xf8\x8e\x03\x97\xf1\x7e\x05\x97\xe0\x3e\x89\x58\x4b\x02\xc5\x4d\x05\x4d\xbd\x25\xbe\xf2\x74\x5d\xc3\xe0\xdb\x24\x1e\xdc\x7b\x48\x26\x7a\xf8\x84\x79\xc1\x96\xea\x95\xe8\x3f\xbb\xf9\xb6\x93\x5d\x4a\xfd\xb6\x4f\x00\x00\x00\xff\xff\x4a\x52\xf8\x66\x99\x00\x00\x00")

func migrations023_master_blobsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations023_master_blobsSql,
		"migrations/023_master_blobs.sql",
	)
}

func migrations023_master_blobsSql() (*asset, error) {
	bytes, err := migrations023_master_blobsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/023_master_blobs.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations024_user_statesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x52\xc1\x52\xc2\x30\x14\xbc\xe7\x2b\xf6\x08\xa3\x3d\x78\xe6\x14\x9b\x87\x76\x0c\x09\xb6\xc9\x88\x5e\x3a\xc5\x56\x87\x41\x01\x49\x3b\x0e\x7f\xef\x24\x05\x04\x11\x64\xec\xa9\x93\x6c\xf6\xed\xee\xdb\x28\xc2\xc5\xfb\xe4\x75\x59\xd4\x15\xec\x82\xb1\x38\x25\x6e\x08\x86\x5f\x4b\x42\xe3\xaa\x65\xee\xea\xa2\xae\x1c\x3a\x0c\x28\xca\x72\x59\x39\x07\x00\x86\x46\x06\x47\x3e\xa5\x0d\x94\x95\xf2\x92\x01\xcd\xa2\x2c\xea\xaa\xcc\x8b\x1a\x26\x19\x50\x66\xf8\x60\x88\x87\xc4\xdc\x6a\x6b\xc2\x09\x9e\xb4\xa2\xbd\x27\x61\x60\xcb\x94\xa8\xa3\x43\xb6\xf0\x7a\xb5\x58\xa3\xcf\x82\x4f\x57\xcf\xf9\xf8\x6d\x3e\xfe\xcb\x83\x95\x92\x75\x7b\x8c\x71\x69\x28\x3d\xcc\x83\x01\x5c\x08\xc4\x5a\x65\x26\xe5\x7e\xf0\xce\x65\xee\xff\x5d\xfe\x32\xad\x56\xe8\xeb\x94\x92\x1b\x85\x3b\x7a\x44\x67\x1d\x60\x17\x29\xf5\x29\x25\x15\x53\x16\xde\xb9\x9d\x2b\xad\x20\x48\x92\x21\xc4\x3c\x8b\xb9\xa0\xff\x8a\xf0\x2e\x7f\x13\xb1\x49\x60\x4f\x45\x00\xa3\x33\x29\xbd\xe7\x75\x09\xac\x4a\xee\x2d\x21\x51\x82\x46\x07\xf6\xf2\x66\x36\xf9\x68\x2a\x06\x2f\x78\xaf\x28\x1b\x27\x3d\xc6\xa2\x08\x3f\xa5\x3b\x7f\x08\x88\x54\x0f\x11\x6b\x69\x07\xaa\x5d\x78\xef\x4c\xb0\x5f\x77\xcb\xbc\xed\xad\x98\x7f\xce\x18\x0b\xa0\x83\x88\x4e\x8a\x68\xc3\xfb\xd6\x10\x0a\xb4\xa9\x22\x04\xf5\xb9\x95\x06\x57\xa7\xa4\xed\x50\x84\x22\x1e\x61\xf8\x0a\x00\x00\xff\xff\xc4\xb8\x71\xff\x67\x03\x00\x00")

func migrations024_user_statesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations024_user_statesSql,
		"migrations/024_user_states.sql",
	)
}

func migrations024_user_statesSql() (*asset, error) {
	bytes, err := migrations024_user_statesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/024_user_states.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations025_trackingSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\xcd\x31\x0e\xc2\x30\x0c\x46\xe1\xdd\xa7\xf8\x47\x10\xf4\x04\x5d\xb9\x02\x07\x70\x1a\x2b\x32\x4d\x93\xc8\xb6\x04\xbd\x3d\xea\x82\x50\xb7\xf7\xa6\x6f\x9a\x70\xdb\xb4\x18\x87\xe0\x39\x88\x16\x93\x23\x83\x53\x15\x84\xf1\xb2\x6a\x2b\xb8\x10\xa0\x19\x49\x8b\x8b\x29\x57\x0c\xd3\x8d\x6d\xc7\x2a\xfb\x9d\x00\xce\xd9\xc4\x1d\x21\x9f\x38\xde\xb5\x34\xb1\xdf\x66\x09\xd6\xea\x78\x79\x6f\x89\xae\x33\xd1\x3f\xfb\xe8\xef\x46\x94\xad\x8f\x13\x3b\x7f\x03\x00\x00\xff\xff\x53\x0e\xa9\x6f\x9d\x00\x00\x00")

func migrations025_trackingSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations025_trackingSql,
		"migrations/025_tracking.sql",
	)
}

func migrations025_trackingSql() (*asset, error) {
	bytes, err := migrations025_trackingSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/025_tracking.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations026_fix_user_statesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd2\xd5\x55\xd0\xce\xcd\x4c\x2f\x4a\x2c\x49\x55\x08\x2d\xe0\xe2\x4a\xcc\x29\x49\x2d\x52\x28\x49\x4c\xca\x49\x55\x28\x2d\x4e\x2d\x2a\x56\x80\x88\x24\xe7\xe7\x94\xe6\xe6\x29\x94\x54\x16\xa4\x2a\xa4\x14\xe5\x17\x28\xe4\xe5\x97\x28\xe4\x95\xe6\xe4\x58\x13\xd2\x52\x5c\x02\x32\x1b\x4d\x0f\x17\xb2\xbd\x2e\xf9\xe5\x79\xc4\xd9\x5c\x9c\x5a\x42\xaa\xc5\xa8\x5a\x00\x01\x00\x00\xff\xff\x58\x15\x40\x76\xef\x00\x00\x00")

func migrations026_fix_user_statesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations026_fix_user_statesSql,
		"migrations/026_fix_user_states.sql",
	)
}

func migrations026_fix_user_statesSql() (*asset, error) {
	bytes, err := migrations026_fix_user_statesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/026_fix_user_states.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesEmail_confirmHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xeb\x8e\xe3\xb6\x15\xfe\x3f\x4f\xc1\x55\x90\xa4\x05\x22\x4b\xf6\x5c\xb2\x23\xc9\x46\xd3\xd9\xa0\x2d\xb0\x69\x16\xd9\x49\xd3\xa0\xe8\x0f\x5a\xa4\x2d\x66\x28\x52\x25\x29\x5f\xb2\xd8\x07\xea\x6b\xf4\xc9\x0a\x92\x92\x2d\x59\xb6\xc7\x17\xcd\xee\xec\x42\x36\xb0\x2b\x89\xe4\xe1\xb9\x7c\xfc\x78\x48\xca\x13\xbd\x78\xf5\xe3\xdd\xfd\xaf\x6f\xbe\x07\x89\x4a\x29\x78\xf3\xf3\x9f\x5f\xff\xed\x0e\x38\xae\xe7\xfd\x72\x79\xe7\x79\xaf\xee\x5f\x81\x7f\xfe\xf5\xfe\x87\xd7\xa0\xdf\xf3\xc1\xbd\x80\x4c\x12\x45\x38\x83\xd4\xf3\xbe\xff\xbb\x03\x9c\x44\xa9\x2c\xf0\xbc\xf9\x7c\xde\x9b\x5f\xf6\xb8\x98\x7a\xf7\x3f\x79\x0b\x2d\xab\xaf\x1b\x17\x97\xae\xaa\xb4\xec\x21\x85\x9c\xd1\x45\x64\x3a\x5c\xa4\x94\xc9\xe1\x16\x31\xfd\xdb\xdb\x5b\xdb\xda\x01\x14\xb2\xe9\xd0\xc1\xcc\xd1\xd5\x83\xf5\x9d\x54\x4b\x8a\x87\xce\x18\xc6\x0f\x53\xc1\x73\x86\x82\x2f\x26\x97\xfa\xfb\x82\xa4\x19\x17\x0a\x32\xe5\x8c\x2e\x2e\xa2\x04\x43\x34\xba\x00\x00\x80\x28\xc5\x0a\x02\xdd\x9b\x8b\xff\x93\x93\xd9\xd0\xb9\xe3\x4c\x61\xa6\xdc\xfb\x65\x86\x1d\x10\xdb\xbb\xa1\xa3\xf0\x42\x79\xba\xf7\x10\xc4\x09\x14\x12\xab\x61\xae\x26\xee\x4b\xa7\x2a\x87\xc1\x14\x0f\x9d\x19\xc1\x73\xdd\x5b\xa5\xf5\x9c\x20\x95\x0c\x11\x9e\x91\x18\xbb\xe6\xa6\x6c\xa7\x88\xa2\x78\xf4\x76\x0e\x45\x0a\xfe\x81\x05\x99\x90\x18\x6a\xb7\x44\x9e\x2d\xb1\xb5\x8c\x61\xf6\x5a\x7f\xfe\x94\x62\x44\x20\xe0\x8c\x2e\x81\x8c\x05\xc6\x0c\xbc\x5b\x15\xea\x8f\x71\x65\xfd\x91\xfe\xa4\x84\xb9\x09\x26\xd3\x44\x05\xa0\xef\xfb\x5f\x86\x8d\x1a\x15\xd7\x81\xc2\x77\xb5\x3a\xef\x2f\x9a\x57\xfb\xd4\x82\x0c\x81\x3f\xa4\x70\x61\x8d\x0e\xae\x6f\x6f\xb2\xc5\x1f\x37\x34\x53\x70\x4c\x71\x6f\xcc\xd1\x12\x90\x74\xba\x45\x6d\xdb\x16\xc0\x5c\xf1\xa6\xc6\xa5\x3d\xba\x74\x87\xaa\x1b\x9d\xc4\x98\x29\x2c\x76\xb8\xa7\xe8\xcb\x5f\x23\xe6\x30\xa1\x3d\x1d\x6b\x48\xd8\x56\xc1\x85\xd0\xdb\xeb\x2f\x4f\x10\x4b\xf3\x94\xc9\x2d\x42\xab\x86\xaf\xc5\x36\x1d\xe4\xa6\xfc\x77\x77\xcc\x17\xae\x24\xbf\x13\x36\x0d\xc0\x98\x0b\x84\x85\x7e\xb4\xa5\xf2\x1c\x8f\x1f\x88\x3a\xb8\xfe\xa1\xf5\x32\x88\x10\x61\x53\x97\xe2\x89\xc6\xde\x4d\xb6\xd8\xa7\x72\x59\x5b\x14\x50\xad\x55\x3f\xd2\x71\x7b\x3c\x58\x57\xca\x3f\x42\xa3\x03\xe1\x91\xf4\x64\x0a\x29\x75\x6f\xb6\x74\x8e\x88\xcc\x28\x5c\x06\x80\x30\x4a\x18\x76\xc7\x94\xc7\x0f\xfb\x54\x28\x40\x74\xed\x1f\x08\xa2\xb2\xf3\xfe\xa0\xc5\xde\x35\x6b\x1c\xd4\xfd\xca\xed\x07\xea\xd1\xba\x02\x16\x0b\x29\x66\xf9\xee\x01\x79\x8a\x30\x85\xbe\xd9\x59\x94\xec\x27\xaf\x7d\xe6\x3d\x12\x90\x83\x74\xeb\xcd\xb0\x50\x24\x86\x74\x8f\x92\x95\x3a\xdb\xb4\xdd\x15\x8f\x83\xfa\xff\x17\xa4\x64\xca\x86\x96\x5f\xff\x7d\xa8\x2f\xf6\xce\x2f\x91\x57\x4c\x7d\x91\x67\x27\xed\x8b\xc8\x0c\xef\x62\xa6\xdf\xe4\xb6\x0a\x05\xb9\xa9\x74\xf5\xa4\xad\x8b\xb0\x0b\xd1\x6f\xb9\x54\x81\x99\xf4\xb6\x70\x5c\xb5\x5d\x51\xba\xbd\xed\x0f\x50\x4c\x09\x0b\xfc\x70\x5f\x8e\x11\x6e\x97\x1c\x73\xca\x45\xf0\x85\x0f\xf5\x37\x9c\x70\xa6\xdc\x09\x4c\x09\x5d\x06\x5f\xbf\xe5\xb9\x88\x31\x78\x0b\x99\x04\x6f\x04\xff\xfa\x1b\x09\x99\x74\xa5\xce\x07\x6c\x45\xad\x48\xa0\x79\xd0\xde\xce\x2d\xf7\x5f\xf9\x7e\x68\xd0\x52\xcc\x05\xfd\xde\x65\x98\x96\x1a\xae\x67\x33\xa3\x79\xc1\x60\x81\x1f\x1a\xcb\x4c\xa8\x02\xcd\x7c\xe1\xba\x52\x35\x4d\x8a\x64\x06\x19\x88\x29\x94\x72\xe8\x64\x02\x6b\xf7\x63\xb1\xca\xb1\x0a\x63\xac\xe9\x61\x09\x1b\xc6\x19\xae\xf8\xa1\xa2\x7a\xb6\xa8\x6b\x9a\x2d\x42\x9d\x16\x14\xb7\x7e\xb8\xce\x11\xfc\x30\x95\xdc\x4d\x08\xc2\x01\xa4\xb4\x22\x8d\x67\x30\x26\x6a\x19\xf8\x21\x9f\x61\x31\xa1\x7c\x1e\x24\x04\x21\xcc\xc2\x19\x91\x64\x4c\xa8\x2e\xb4\x4f\x9c\x51\xe4\x69\xfd\xcb\x24\x4b\x43\xb4\xb4\x45\xe3\x67\x65\xc6\xa1\xf1\x34\x41\x8c\x39\xa5\x30\x93\x38\x28\x2f\xca\x02\xa9\x35\x33\xbe\x7d\x9a\x18\x97\x4e\xd3\x71\xdc\x19\xef\xdd\x01\x2e\x87\x7c\xf1\x4c\xf1\xac\x12\x73\x67\x9d\x56\x46\x4a\x94\x7e\x39\x46\x58\x45\x82\x95\x82\x4a\x57\x5b\x26\x70\x80\xe5\x85\xd5\xed\xac\xb8\xd7\x6d\x6b\x23\x39\x59\x66\x09\x66\x32\x30\x99\x5e\x39\x10\x6b\x0f\xd7\xf1\xda\x11\x92\x4a\xd4\x9e\x28\x16\x55\x75\x5a\x0a\x06\x17\xc8\x9d\x0b\x98\x05\x63\x81\xe1\x83\xab\xef\x37\x9c\x6a\x1c\x5b\x24\xae\x08\x2a\xe8\x66\x7a\x0d\x82\x86\xce\xca\x81\xeb\xe1\x7e\xfd\xd2\xcf\x16\xdb\x23\x5c\x8f\x93\x19\x15\x1b\xb1\x29\x23\xb7\xca\x66\x27\x94\x43\xe5\x96\xc5\x1b\xc3\xc6\xe6\xe4\xb5\xb1\x83\xf5\xf7\x88\x11\x63\xe4\x1b\xe2\x58\x79\xcf\x4a\xdd\xea\x42\xab\xc7\x6e\x44\x1b\xdb\x77\x18\x6c\x8d\xd6\xc3\x7f\x77\x79\x7b\xc3\x60\xbb\x64\xd4\xe1\xfd\x60\xbc\xef\x01\x6d\x81\x52\xc1\xe7\x60\x63\x5e\x3a\x0b\x8b\xe5\x34\x66\x3a\xa9\xd8\x94\x71\xbb\x57\x11\x08\x4c\xa1\x22\x33\x7c\x32\xc5\x3e\x6e\xdf\xe3\xf8\x6c\xb6\x79\x2a\xbc\x36\x7b\x4a\x4a\xd7\x97\x0b\x1b\x0a\xc5\x14\xbb\x37\xa0\x4c\xf7\x27\x44\x48\x05\x28\x94\x6a\x07\x59\x7c\xd8\x2c\x68\x93\x4a\xca\x75\xdc\x98\x2b\xc5\xd3\xca\x03\xb3\x06\x34\xa2\xeb\x4b\x3d\xf3\x68\x7b\xc6\x34\xf8\xf6\x6a\x2f\xd7\xec\xf7\xa4\xc1\x71\x09\xda\x83\x11\x7a\xfe\x24\x7f\xbc\xa6\x1f\x0a\x5d\xf5\x5e\x93\x46\x8a\xf6\x81\xf3\xe7\x9d\xd6\x9e\x69\x1a\x68\xd0\x98\x0e\x6f\x95\xc2\x9e\x31\x1a\xea\x46\x1c\xcf\x55\xfb\xe5\x7d\x0c\xa4\x35\xb5\x40\xc5\xd6\xda\xd0\xe9\xeb\x64\xe2\x59\xcf\xd8\xfe\x51\x33\xb6\x6f\x56\x5d\xe5\xfa\x50\x72\xb7\x52\xea\x8a\x9c\xe2\x00\x2f\x60\xac\xe8\xb2\x8d\xf9\xfc\xab\x2f\x16\xdf\xf9\x61\xe4\x29\xd4\x22\x44\x3c\x25\x5a\x02\xaf\xd7\x12\x7a\x23\xcf\x8c\xe5\x51\x44\xd2\xe9\x0a\x38\xd7\x16\x38\x22\x5e\x9d\x64\x48\x05\xa7\x84\x4d\x7b\x30\x23\x3d\x99\xb3\x9e\x9c\x43\x91\xf6\x26\x39\x43\x1e\xe5\x53\xee\xd9\xfb\x8c\x4d\x2b\x78\x93\x2e\xd1\xd9\x6e\xc6\xa9\x39\x12\x70\x53\x8e\x70\x30\x26\x71\x3e\x26\x71\x18\x53\x0c\x45\x30\xe6\x2a\x59\xa5\x2d\x66\xcf\xa6\xb2\x92\x36\xeb\x45\x9e\x2b\x1d\xe5\x32\x92\x08\xc7\x5c\x18\x71\x36\xe7\xb6\x35\x35\x54\x3a\x5a\x2b\x8d\xf8\xdc\x69\xed\xf2\xb9\xd3\xda\xe5\x51\xb4\x76\xd9\xd1\x5a\x55\x52\xbb\xb4\x76\x5e\x16\xe7\xa9\xe4\x8c\xcc\xf3\x64\xaf\x9c\xac\xfc\xf1\x0a\x1f\xa7\xe4\x51\xe1\x39\xca\x8a\xc6\xc2\xf8\x04\xde\xed\x96\xbf\x8f\xf5\xb4\xb1\xfc\xed\x0f\x8a\xf5\x6f\x7f\xf0\x89\x2e\x80\x6b\x2b\xde\x13\xd6\xc0\xd7\x37\xdd\x1a\xb8\x5b\x03\x9f\x68\x5e\x97\x2c\x6e\x91\xf7\xdc\x92\x45\x0d\x98\x67\x9d\x2c\x1e\xb9\x6b\x7d\xd3\x25\x8b\x15\x49\xcf\x28\x59\x34\x82\x92\x41\x83\xf2\xec\xc5\x6a\xc2\xd2\xc9\x7e\x81\x99\xcb\xc9\xd5\xe0\xea\xaa\x86\x99\x9f\x20\xc5\x73\xb8\x3c\x70\x59\x71\xb9\xf7\xfc\xbc\xd9\xef\x9e\x33\xf4\x55\xf8\x19\x17\x29\xa4\xce\xe8\x17\x4c\x63\x9e\x62\xa0\x38\x30\x6f\xf7\xbd\x88\xbc\x64\xd0\xb1\x66\x61\x44\xc7\x9a\x1d\x6b\x76\xac\xd9\x16\x6b\x66\xe7\x91\xe6\xd3\xbc\x7e\x74\x04\x7d\x3a\xa3\x5f\x79\x0e\x12\x38\xc3\xe0\xb7\x5c\x2a\x20\xf0\x94\x48\x85\x05\x46\x00\x2a\x4b\x9f\x3d\xf0\xb3\xc4\x40\x25\x44\x82\x71\xae\x14\x67\x9a\x58\x63\xce\x26\x44\xa4\x60\xc9\x73\x01\x70\x0a\x09\x05\x10\x21\x81\xa5\xec\x45\x5e\xd6\x91\x6d\x61\x44\x47\xb6\x1d\xd9\x76\x64\xdb\x16\xd9\xd6\x5f\x26\xb4\x5c\x94\x62\x44\xf2\x14\x08\x88\x48\x2e\x9b\xfb\x3e\xbe\x79\x85\x1d\xec\x06\x5b\x93\x33\xd2\x46\xdb\x13\x58\xa4\xa5\x63\x1d\xf0\x2c\x46\x7d\xf7\xf2\xd4\xb9\x2f\x4f\x1d\xee\xe9\x4f\x65\x63\x6e\xb7\x05\x1f\x1b\xad\x75\x6d\x4e\x47\x6e\xf5\x75\xb6\xc9\x18\x0e\xbe\x2d\xdc\x6e\x4f\x6f\x0f\x00\x76\x51\xc5\x52\xd3\x7a\x07\xb1\x78\x37\xee\x93\x03\x7a\x04\x41\x22\xf0\x64\xe8\xbc\x7b\xd7\x7b\x4d\xd8\xc3\xfb\xf7\x5b\xde\xe5\xb6\x1e\xf2\x81\xe4\x94\x20\x50\x77\xdc\x2e\x4f\x94\x87\x1f\xd5\xdf\x5f\xb4\xe2\x1e\xaa\xff\xc5\xe2\x71\xaf\xbc\xcc\x16\x96\xeb\xcb\x8b\x86\x97\xb6\x9d\xe0\x3b\xa3\xbb\x22\x0b\xae\x25\xc0\x20\xf2\xe0\xa8\xdd\x59\x7d\x05\xe7\xd6\x66\xf7\x8a\xc4\x76\x26\xe7\x8a\xc0\x96\x0c\x6f\xc7\xd8\x16\x37\xc8\xce\xd4\xe6\xbc\x23\x59\x50\x3f\x05\xc3\x8b\x0c\x32\xb4\xe5\xbd\xf0\x8f\x76\x4e\x51\x21\xbe\x06\xc5\x6c\xfe\x48\xa4\x98\x82\x7c\x67\xd4\x9d\x53\x37\x6b\x77\xe7\xd4\x7b\xad\xe8\xce\xa9\xbb\x73\xea\x67\x97\x0e\x77\xe7\xd4\x4f\x71\x4e\x9d\x95\x83\x89\x71\x45\x62\xdc\x9c\xec\x9e\x64\xb3\x75\xf0\x74\x9b\xad\x6f\x28\x86\x12\x03\xc4\x01\xe3\x0a\x08\x9c\xd1\x25\x50\xdc\x6e\xae\x9a\x24\xb2\xa5\xdd\xd3\xcf\xce\x71\x77\x3c\x5b\x1a\xaa\x01\xff\xfb\x2f\x18\xf8\xfd\x97\xe5\xde\xf4\x77\x94\x02\x53\x20\x81\xc0\x12\x8b\x19\x46\xe7\xfb\xb0\x4b\xd5\xba\x54\xed\xa0\xda\x4f\x90\xaa\x3d\xbe\x80\xda\xaf\xe5\x5e\xad\x76\x6a\x11\x79\xf6\xf7\x9d\x1b\x3f\x28\xae\xe9\xb2\xee\xb7\x26\x26\x7a\xe1\xba\x20\x13\x78\x86\x99\x02\x7f\x31\x2b\x61\xce\x00\xf9\xf1\x2d\xd0\xc8\x04\x1a\xa8\x20\x85\x8c\x64\xb9\x7d\x99\x1e\xb8\x6e\xd1\x10\x91\x59\x39\x26\xaa\x3f\x63\x0f\xe7\x09\x51\xd8\x4c\xe7\x38\x60\x7c\x2e\x60\x66\x40\x1e\xf4\xaf\xb3\x05\x88\x79\x2e\xc8\xc6\xa2\xde\x77\x46\x5f\xb1\xb1\xcc\x42\xf0\xf9\xfc\x17\x79\x88\xcc\x46\x17\x91\x67\xa3\x79\x11\x99\xbf\x81\x34\xfa\x7f\x00\x00\x00\xff\xff\x3f\x82\xee\x42\x26\x4a\x00\x00")

func templatesEmail_confirmHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesEmail_confirmHtml,
		"templates/email_confirm.html",
	)
}

func templatesEmail_confirmHtml() (*asset, error) {
	bytes, err := templatesEmail_confirmHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/email_confirm.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesKyc_approveHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xef\x8e\xdb\x36\x12\xff\xbe\x4f\xc1\x28\x68\x7b\x07\x54\x96\x6c\xef\x6e\xb3\x92\x6c\x5c\x6f\x53\xb4\x07\xa4\xd7\xa0\xd9\xfb\x53\x1c\xee\x03\x2d\xd2\x16\xbb\x14\xa9\x23\x29\xff\x69\x90\x07\xba\xd7\xb8\x27\x3b\x90\x94\x6c\xc9\xb6\x5c\xd9\xde\xcd\x6e\x02\xd9\xc0\x46\x12\xc9\xe1\x70\xe6\xc7\x1f\x67\x48\x39\xd1\x8b\xd7\x3f\xdd\xde\xfd\xf2\xf6\x3b\x90\xa8\x94\x82\xb7\x7f\xfb\xf3\x9b\xbf\xdc\x02\xc7\xf5\xbc\x7f\x0c\x6f\x3d\xef\xf5\xdd\x6b\xf0\xcf\x1f\xee\x7e\x7c\x03\xfa\x3d\x1f\xdc\x09\xc8\x24\x51\x84\x33\x48\x3d\xef\xbb\xbf\x3a\xc0\x49\x94\xca\x02\xcf\x5b\x2c\x16\xbd\xc5\xb0\xc7\xc5\xcc\xbb\xfb\xd9\x5b\x6a\x59\x7d\xdd\xb8\xb8\x74\x55\xa5\x65\x0f\x29\xe4\x8c\x2f\x22\xd3\xe1\x32\xa5\x4c\x8e\xf6\x88\xe9\xdf\xdc\xdc\xd8\xd6\x0e\xa0\x90\xcd\x46\x0e\x66\x8e\xae\x1e\x6c\xee\xa4\x5a\x51\x3c\x72\x26\x30\xbe\x9f\x09\x9e\x33\x14\xbc\x9c\x0e\xf5\xf7\x05\x49\x33\x2e\x14\x64\xca\x19\x5f\x5c\x44\x09\x86\x68\x7c\x01\x00\x00\x51\x8a\x15\x04\xba\x37\x17\xff\x27\x27\xf3\x91\x73\xcb\x99\xc2\x4c\xb9\x77\xab\x0c\x3b\x20\xb6\x77\x23\x47\xe1\xa5\xf2\x74\xef\x21\x88\x13\x28\x24\x56\xa3\x5c\x4d\xdd\x57\x4e\x55\x0e\x83\x29\x1e\x39\x73\x82\x17\xba\xb7\x4a\xeb\x05\x41\x2a\x19\x21\x3c\x27\x31\x76\xcd\x4d\xd9\x4e\x11\x45\xf1\xf8\xdd\x02\x8a\x14\xfc\x1d\x0b\x32\x25\x31\xd4\x66\x89\x3c\x5b\x62\x6b\x99\x81\xd9\x6b\xfd\xf9\x53\x8a\x11\x81\x80\x33\xba\x02\x32\x16\x18\x33\xf0\x7e\x5d\xa8\x3f\xc6\x94\xf5\x47\xfa\x93\x12\xe6\x26\x98\xcc\x12\x15\x80\xbe\xef\x7f\x11\xee\xd4\xa8\x98\x0e\x14\xb6\xab\xd5\xf9\x70\xb1\xb9\x3a\xa4\x0e\x64\x08\xfc\x21\x85\x4b\x3b\xd8\xe0\xea\xe6\x3a\x5b\xfe\x71\x4b\x23\x05\x27\x14\xf7\x26\x1c\xad\x00\x49\x67\x7b\xd4\xb5\x6d\x01\xcc\x15\xdf\xd5\xb4\x1c\x87\x2e\x6d\x50\x71\xab\x93\x18\x33\x85\x45\x83\x59\x8a\xbe\xfc\x0d\x52\xda\x09\xed\x69\x1f\x43\xc2\xf6\x0a\x2e\x84\xde\x5c\x7d\x71\x82\x58\x9a\xa7\x4c\xee\x11\x5a\x1d\xf8\x46\xec\xae\x81\xdc\x94\xff\xe6\x4e\xf8\xd2\x95\xe4\x37\xc2\x66\x01\x98\x70\x81\xb0\xd0\x8f\xf6\x54\x5e\xe0\xc9\x3d\x51\xad\xeb\xb7\xad\x97\x41\x84\x08\x9b\xb9\x14\x4f\x35\xe6\xae\xb3\xe5\x21\x95\xcb\xda\xa2\x80\x68\xad\xfa\x91\x86\x3b\x60\xc1\xba\x52\xfe\x11\x1a\xb5\x84\x47\xd2\x93\x29\xa4\xd4\xbd\xde\xd3\x39\x22\x32\xa3\x70\x15\x00\xc2\x28\x61\xd8\x9d\x50\x1e\xdf\x1f\x52\xa1\x00\xd1\x95\xdf\x12\x44\x65\xe7\xfd\xc1\x03\xf6\xae\xd9\xa2\x55\xf7\x6b\xb3\xb7\xd4\xe3\xc1\x15\xb0\x58\x48\x31\xcb\x9b\x27\xe4\x29\xc2\x14\xfa\xba\xb1\x28\x39\x4c\x5e\x87\x86\xf7\x3b\x0e\x69\xa5\x5b\x6f\x8e\x85\x22\x31\xa4\x07\x94\xac\xd4\xd9\xa7\x6d\x93\x3f\x5a\xf5\xff\x2f\x48\xc9\x8c\x8d\x2c\xbf\xfe\xbb\xad\x2d\x1a\xd7\x15\xfd\x37\xf2\x8a\x25\x2f\xf2\xec\x62\x7d\x11\x99\xe9\x5d\xac\xf0\xdb\xdc\x56\xa1\x20\x37\x95\xae\x5e\xac\x75\x11\x76\x21\xfa\x35\x97\x2a\x30\x8b\xdd\x1e\x8e\xab\xb6\x2b\x4a\xf7\xb7\xfd\x11\x8a\x19\x61\x81\x1f\x1e\x8a\x2d\xc2\xfd\x92\x63\x4e\xb9\x08\x5e\xfa\x50\x7f\xc3\x29\x67\xca\x9d\xc2\x94\xd0\x55\xf0\xd5\x3b\x9e\x8b\x18\x83\x77\x90\x49\xf0\x56\xf0\xaf\xbe\x96\x90\x49\x57\xea\x38\xc0\x56\xd4\x8a\x04\x9a\x07\xed\xed\xc2\x72\xff\xa5\xef\x87\x06\x2d\xc5\x5a\xd0\xef\x0d\xc3\xb4\xd4\x70\xb3\x9a\x19\xcd\x0b\x06\x0b\xfc\xd0\x8c\xcc\xb8\x2a\xd0\xcc\x17\x6e\x2a\x55\xc3\xa3\x48\x66\x90\x81\x98\x42\x29\x47\x4e\x26\xb0\x36\x3f\x16\xeb\xd8\xaa\x18\x8c\x1d\x7a\x58\xc2\x86\x71\x86\x2b\x76\xa8\xa8\x9e\x2d\xeb\x9a\x66\xcb\x50\x87\x05\xc5\xad\x1f\x6e\x62\x04\x3f\x4c\x25\x77\x13\x82\x70\x00\x29\xad\x48\xe3\x19\x8c\x89\x5a\x05\x7e\xc8\xe7\x58\x4c\x29\x5f\x04\x09\x41\x08\xb3\x70\x4e\x24\x99\x10\xaa\x0b\xed\x13\x67\x1c\x79\x5a\xff\xf1\x45\x64\xe0\x59\x8e\x43\x63\x67\x3d\x84\xb6\xbe\x34\x0e\x8c\x39\xa5\x30\x93\x38\x28\x2f\xca\x02\xa9\xb5\x32\x76\x7d\x1c\xff\x96\x06\xd3\x3e\x6c\xf4\x75\xb3\x73\xcb\xe9\x5e\x3c\x53\x3c\xab\xf8\x7b\x1d\x7c\x8a\xd2\x26\xc7\x08\x72\x36\x81\x68\xa4\x50\x69\x62\x3b\xfb\x1d\x60\xb9\x60\x7d\x3b\x2f\xee\x75\xbb\xda\xec\x4d\x56\x59\x82\x99\x0c\x4c\x74\x57\x4e\xbe\xda\xc3\x8d\x9f\x1a\x5c\x51\xf1\xd6\x23\xf9\xa0\xaa\xce\x03\x39\x81\x0b\xe4\x2e\x04\xcc\x82\x89\xc0\xf0\xde\xd5\xf7\x15\x83\x1a\xa3\x16\x81\x2a\x82\x0a\xba\x99\xce\x35\xd0\xc8\x59\x1b\x6f\x33\xbd\xaf\x5e\xf9\xd9\x72\xd7\xab\x35\x51\x76\x16\x6c\xf9\xa4\xf4\xd8\x3a\x72\x9d\x52\x0e\x95\x5b\x16\x6f\x4d\x13\x1b\x7f\xd7\xe6\x0a\xd6\xdf\x23\x66\x88\x91\x6f\x48\x62\x6d\x35\x2b\x75\xaf\xe9\xac\x1e\xcd\x08\x36\xe3\xde\x33\x58\x3b\x60\x3d\xd5\x9b\xca\xce\x85\xfb\xae\x44\xd4\x61\xba\x15\xa6\x1b\x80\x59\x20\x51\xf0\x05\xd8\x5a\x67\xce\xc2\x5b\xb9\x2c\x99\x4e\x2a\x63\xc9\xb8\xdd\x73\x08\x04\xa6\x50\x91\x39\x3e\x89\x36\x0f\x8f\xab\x19\x7f\x8f\x8b\xc5\xba\xf4\xa4\x34\x6d\x99\x88\x50\x28\x66\xd8\xbd\x06\x65\x78\x3e\x25\x42\x2a\x40\xa1\x54\x0d\x13\xfe\xe3\x46\x2d\xdb\x74\x50\xe6\x5d\x13\xae\x14\x4f\x2b\x0f\x4c\xce\x66\x44\xd7\x53\x33\xf3\x68\x7f\x84\x33\xf8\xe6\xb2\x91\x2f\x0e\x60\xb3\x04\x62\x6b\xd4\x9d\xb7\x18\xb7\xd7\xee\x31\x91\xb3\x8d\xa2\xed\x90\xe9\x23\xc7\xb2\x8d\x23\x3c\x61\x38\x60\x87\x76\xb4\xeb\xaa\x94\xf3\xcc\x3c\x5d\x57\xbc\x1d\xaf\x34\xb7\xff\x58\xa8\xa9\xf7\x8a\x8a\xed\xaa\x91\xd3\xd7\x8b\xf6\xb3\x5e\x2d\xfd\xa3\x56\x4b\xdf\x64\x32\x65\xce\x25\xb9\x5b\x29\x75\x45\x4e\x71\x80\x97\x30\x56\x74\xf5\x10\x6b\xe9\x97\x2f\x97\xdf\xfa\x61\xe4\x29\x74\x06\x04\x3c\x25\xce\x6a\x7d\x3a\x02\x23\xcf\xcc\xbb\x71\x44\xd2\xd9\x1a\x10\x57\x16\x10\x22\x5e\xef\xf6\x4b\x05\x67\x84\xcd\x7a\x30\x23\x3d\x99\xb3\x9e\x5c\x40\x91\xf6\xa6\x39\x43\x1e\xe5\x33\xee\xd9\xfb\x8c\xcd\x2a\x38\x92\x2e\xd1\xd1\x62\xc6\xa9\xd9\x36\x77\x53\x8e\x70\x30\x21\x71\x3e\x21\x71\x18\x53\x0c\x45\x30\xe1\x2a\x59\x87\x04\x66\x7f\xa3\x92\x75\x9a\xfc\x8a\xe7\x4a\x7b\xaf\xf4\x10\xc2\x31\x17\x46\x9c\x8d\x59\x6d\x4d\x0d\x81\x8e\x76\x8e\x6d\xff\xd4\xb4\x33\x7c\xee\xb4\x33\x3c\x8a\x76\x86\x1d\xed\x1c\xd5\xd8\xd0\xce\xf1\x91\x8f\xa7\x92\x23\xa3\xb2\xa3\x46\x79\x94\x62\xed\x94\x69\xa7\x40\x2b\x73\xb6\xd2\x6e\x27\x81\x3b\x81\xcf\xba\x34\x6d\x2b\x4d\xeb\x0f\x8a\x3c\xad\x3f\xf8\x44\x13\xb5\x5a\x66\x76\x42\xae\x76\x75\xdd\xe5\x6a\x5d\xae\x56\x0c\xa9\x0b\x9a\x9e\x2a\x57\xbb\x7e\xe6\x41\xd3\x91\x3b\x9b\xd7\x5d\xd0\x74\x4c\xe3\xd3\x82\x26\xd3\x38\x19\xec\xd0\x90\xbd\x58\x2f\x10\x3a\x80\x2d\xfc\x3f\x9c\x5e\x0e\x2e\x2f\x6b\xfe\xff\x19\x52\xbc\x80\xab\x96\xa1\xf2\xf0\xe0\x39\xe8\x6e\xbf\x07\xce\x42\xd7\xae\x64\x5c\xa4\x90\x3a\xe3\x1f\xc8\x8b\xc8\x4b\x06\x1d\x77\x1d\xd9\xbe\xe3\xae\x8e\xbb\x3e\x4d\xee\xca\xce\xa3\xae\xc7\x79\x99\xe3\x08\x12\x73\xc6\xbf\xf0\x5c\x00\x18\xc7\x3c\x67\x0a\x2c\xa0\x04\xbf\xe6\x52\x01\x98\x65\x82\xcf\x31\xea\x45\x5e\xf6\x10\x74\x36\xc9\x95\xe2\x0c\xa4\x18\x91\x3c\x05\x02\x22\x92\xcb\xdd\xdc\xc4\x37\xaf\xef\x81\xe6\x39\xb5\x4b\x77\xe9\x4e\xdb\x13\x08\xf0\x8c\x6d\x3a\xf0\xa4\x04\xf6\xf9\x50\xd6\xc7\x3c\x48\x6e\x67\xdd\xe7\x9c\x24\x36\x6b\xfd\x14\x48\xac\x6b\x70\x3a\x2a\xab\xc7\xf7\xd3\x09\x1c\x7c\x53\x98\xd7\xee\xa8\xb7\x00\x6d\x51\xc5\xd2\xcb\x26\x9b\x2d\xde\x05\xf8\xe4\x40\x1c\x41\x90\x08\x3c\x1d\x39\xef\xdf\xf7\xde\x10\x76\xff\xe1\xc3\x9e\xf7\xd1\xac\x85\x7c\x20\x39\x25\x08\xd4\x0d\xd7\x64\x89\x72\x13\xad\xfa\xfe\xe8\x83\x98\x87\xea\xbf\x58\xfc\xbe\x55\x5e\x65\x4b\xcb\xd7\xe5\xc5\x8e\x95\xf6\x9d\xaa\x38\xe3\xef\x39\x50\x1c\x98\x9f\x3e\x44\x1e\x1c\x9f\x17\x75\xd4\x70\x7b\x56\x04\x52\x91\x72\x7a\x30\x51\x11\xf2\x24\xa1\xd4\x99\x59\xdc\x09\xbd\x1e\xbf\x67\x0e\xea\x5b\xa0\x78\x99\x41\x86\xf6\xbc\x80\xf6\x64\x1b\x59\x15\x36\xda\x99\xf7\xdb\x6f\x9e\x16\xfc\xef\x3b\xe3\xee\xf0\xa0\x3b\x3c\x28\xea\x75\x87\x07\xdd\xe1\x41\x77\x78\xf0\x24\x87\x07\x59\x39\x39\x18\x57\x24\xc6\xbb\x8b\xca\xa3\xe4\xf6\x83\xc7\xcb\xed\xdf\x52\x0c\x25\x06\x88\x03\xc6\x15\x10\x38\xa3\x2b\x1d\x3e\xa9\x84\x48\x80\x53\x48\xe8\x19\xe9\xfd\x67\x67\xac\x5b\x9e\xad\x0c\x5d\x80\xff\xfd\x17\x0c\xfc\xfe\x2b\x1b\x66\xf6\xc0\xb7\x94\x02\x53\x20\x81\xc0\x12\x8b\x93\xb7\x45\xba\x70\xa7\x0b\x77\xda\x68\xd7\x9c\x00\x34\x6b\xd1\xd8\xf3\xde\xde\x22\xcf\xfe\x60\xa2\xf2\xab\x9c\x75\x9f\xb6\x8f\x75\xb3\xe8\x85\xeb\x82\x4c\xe0\x39\x66\x0a\x7c\xaf\x49\x03\x70\x06\xc8\x4f\xef\x80\x46\x0b\xd0\xe0\x01\x29\x64\x24\xcb\xed\xdb\x74\xc0\x75\xc7\x17\x11\x22\xf3\x12\xa3\xd5\xdf\x7b\x85\x8b\x84\x28\x6c\x96\x45\x1c\x30\xae\x33\x5e\x03\xba\xa0\x7f\x95\x2d\x41\xcc\x73\x41\xb6\xb2\x47\xdf\x19\x7f\xc9\x26\x32\x0b\xc1\xe7\xf3\x4f\xe4\x21\x32\xd7\x26\xb6\x1e\xbb\x88\xcc\x7f\x12\x30\xfe\x7f\x00\x00\x00\xff\xff\xd9\xae\xa4\xbf\x47\x41\x00\x00")

func templatesKyc_approveHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesKyc_approveHtml,
		"templates/kyc_approve.html",
	)
}

func templatesKyc_approveHtml() (*asset, error) {
	bytes, err := templatesKyc_approveHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/kyc_approve.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesKyc_rejectHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xed\x8e\xdb\x36\xd6\xfe\x3f\x57\xc1\x28\x68\xfb\xbe\x40\x65\xc9\x9e\xcc\x34\x91\x64\x63\xbb\x93\xa2\x5d\x20\xdd\x06\xcd\xec\x47\xb1\xd8\x1f\xb4\x78\x6c\xb1\x43\x91\x2a\x49\xf9\xa3\x41\x2e\x68\x6f\x63\xaf\x6c\x41\x51\xb2\x25\xdb\x72\x65\x7b\x26\x33\x09\x6c\x03\x13\x49\x24\x0f\x0f\xcf\x79\xf8\xf0\x1c\x52\x4e\xf4\xec\xf5\x4f\x37\xb7\xbf\xbc\xfd\x0e\x25\x3a\x65\xe8\xed\xdf\xfe\xfc\xe6\x2f\x37\xc8\x71\x3d\xef\x1f\x97\x37\x9e\xf7\xfa\xf6\x35\xfa\xe7\x0f\xb7\x3f\xbe\x41\xfd\x9e\x8f\x6e\x25\xe6\x8a\x6a\x2a\x38\x66\x9e\xf7\xdd\x5f\x1d\xe4\x24\x5a\x67\x81\xe7\xcd\xe7\xf3\xde\xfc\xb2\x27\xe4\xd4\xbb\xfd\xd9\x5b\x18\x59\x7d\xd3\xb8\xbc\x74\x75\xad\x65\x8f\x68\xe2\x8c\x2e\xa2\xa2\xc3\x45\xca\xb8\x1a\xee\x10\xd3\x7f\xf5\xea\x95\x6d\xed\x20\x86\xf9\x74\xe8\x00\x77\x4c\xf5\x60\x7d\xa7\xf4\x92\xc1\xd0\x19\xe3\xf8\x6e\x2a\x45\xce\x49\xf0\x7c\x72\x69\xbe\xcf\x68\x9a\x09\xa9\x31\xd7\xce\xe8\xe2\x22\x4a\x00\x93\xd1\x05\x42\x08\x45\x29\x68\x8c\x4c\x6f\x2e\xfc\x96\xd3\xd9\xd0\xb9\x11\x5c\x03\xd7\xee\xed\x32\x03\x07\xc5\xf6\x6e\xe8\x68\x58\x68\xcf\xf4\x1e\xa2\x38\xc1\x52\x81\x1e\xe6\x7a\xe2\xbe\x74\xea\x72\x38\x4e\x61\xe8\xcc\x28\xcc\x4d\x6f\xb5\xd6\x73\x4a\x74\x32\x24\x30\xa3\x31\xb8\xc5\x4d\xd5\x4e\x53\xcd\x60\xf4\x6e\x8e\x65\x8a\xfe\x0e\x92\x4e\x68\x8c\x8d\x59\x22\xcf\x96\xd8\x5a\xc5\xc0\xec\xb5\xf9\xfc\x29\x05\x42\x31\x12\x9c\x2d\x91\x8a\x25\x00\x47\xef\x57\x85\xe6\x53\x98\xb2\xf9\xc8\x7c\x52\xca\xdd\x04\xe8\x34\xd1\x01\xea\xfb\xfe\x17\xe1\x56\x8d\x9a\xe9\x50\x69\xbb\x46\x9d\x0f\x17\xeb\xab\x7d\xea\x60\x4e\xd0\xff\xa5\x78\x61\x07\x1b\x5c\xbd\xba\xce\x16\xff\xbf\xa1\x91\xc6\x63\x06\xbd\xb1\x20\x4b\x44\xd3\xe9\x0e\x75\x6d\x5b\x84\x73\x2d\xb6\x35\xad\xc6\x61\x4a\x5b\x54\xdc\xe8\x24\x06\xae\x41\xb6\x98\xa5\xec\xcb\x5f\x23\xa5\x9b\xd0\x9e\xf1\x31\xa6\x7c\xa7\xe0\x52\xe8\xab\xab\x2f\x8e\x10\xcb\xf2\x94\xab\x1d\x42\xeb\x03\x5f\x8b\xdd\x36\x90\x9b\x8a\xdf\xdd\xb1\x58\xb8\x8a\xfe\x4e\xf9\x34\x40\x63\x21\x09\x48\xf3\x68\x47\xe5\x39\x8c\xef\xa8\xee\x5c\xbf\x6b\xbd\x0c\x13\x42\xf9\xd4\x65\x30\x31\x98\xbb\xce\x16\xfb\x54\xae\x6a\xcb\x12\xa2\x8d\xea\x07\x1a\x6e\x8f\x05\x9b\x4a\xf9\x07\x68\xd4\x11\x1e\x49\x4f\xa5\x98\x31\xf7\x7a\x47\xe7\x84\xaa\x8c\xe1\x65\x80\x28\x67\x94\x83\x3b\x66\x22\xbe\xdb\xa7\x42\x09\xa2\x2b\xbf\x23\x88\xaa\xce\xfb\x83\x7b\xec\xdd\xb0\x45\xa7\xee\x57\x66\xef\xa8\xc7\xbd\x2b\x60\xb1\x90\x02\xcf\xdb\x27\xe4\x31\xc2\x34\xf9\xba\xb5\x28\xd9\x4f\x5e\xfb\x86\xf7\x07\x0e\xe9\xa4\x5b\x6f\x06\x52\xd3\x18\xb3\x3d\x4a\xd6\xea\xec\xd2\xb6\xcd\x1f\x9d\xfa\xff\x17\x66\x74\xca\x87\x96\x5f\xff\xdd\xd5\x16\xad\xeb\x8a\xf9\x1b\x79\xe5\x92\x17\x79\x76\xb1\xbe\x88\x8a\xe9\x5d\xae\xf0\x9b\xdc\x56\xa3\x20\x37\x55\xae\x59\xac\x4d\x11\xb8\x98\xfc\x9a\x2b\x1d\x14\x8b\xdd\x0e\x8e\xab\xb7\x2b\x4b\x77\xb7\xfd\x11\xcb\x29\xe5\x81\x1f\xee\x8b\x2d\xc2\xdd\x92\x63\xc1\x84\x0c\x9e\xfb\xd8\x7c\xc3\x89\xe0\xda\x9d\xe0\x94\xb2\x65\xf0\xd5\x3b\x91\xcb\x18\xd0\x3b\xcc\x15\x7a\x2b\xc5\x57\x5f\x2b\xcc\x95\xab\x4c\x1c\x60\x2b\x1a\x45\x02\xc3\x83\xf6\x76\x6e\xb9\xff\x85\xef\x87\x05\x5a\xca\xb5\xa0\xdf\xbb\x0c\xd3\x4a\xc3\xf5\x6a\x56\x68\x5e\x32\x58\xe0\x87\xc5\xc8\x0a\x57\x05\x86\xf9\xc2\x75\xa5\x7a\x78\x14\xa9\x0c\x73\x14\x33\xac\xd4\xd0\xc9\x24\x18\xf3\x83\x5c\xc5\x56\xe5\x60\xec\xd0\xc3\x0a\x36\x5c\x70\xa8\xd9\xa1\xa6\x7a\xb6\x68\x6a\x9a\x2d\x42\x13\x16\x94\xb7\x7e\xb8\x8e\x11\xfc\x30\x55\xc2\x4d\x28\x81\x00\x33\x56\x93\x26\x32\x1c\x53\xbd\x0c\xfc\x50\xcc\x40\x4e\x98\x98\x07\x09\x25\x04\x78\x38\xa3\x8a\x8e\x29\x33\x85\xf6\x89\x33\x8a\x3c\xa3\xff\xe8\x22\x2a\xe0\x59\x8d\xc3\x60\x67\x35\x84\xae\xbe\x2c\x1c\x18\x0b\xc6\x70\xa6\x20\xa8\x2e\xaa\x02\x65\xb4\x2a\xec\xfa\x30\xfe\xad\x0c\x66\x7c\xd8\xea\xeb\x76\xe7\x56\xd3\xbd\x7c\xa6\x45\x56\xf3\xf7\x2a\xf8\x94\x95\x4d\x0e\x11\xe4\xac\x03\xd1\x48\x93\xca\xc4\x76\xf6\x3b\xc8\x72\xc1\xea\x76\x56\xde\x9b\x76\x8d\xd9\x9b\x2c\xb3\x04\xb8\x0a\x8a\xe8\xae\x9a\x7c\x8d\x87\x6b\x3f\xb5\xb8\xa2\xe6\xad\x07\xf2\x41\x5d\x9d\x7b\x72\x82\x90\xc4\x9d\x4b\x9c\x05\x63\x09\xf8\xce\x35\xf7\x35\x83\x16\x46\x2d\x03\x55\x82\x35\x76\x33\x93\x6b\x90\xa1\xb3\x32\xde\x7a\x7a\x5f\xbd\xf4\xb3\xc5\xb6\x57\x1b\xa2\xec\x2c\xd8\xf0\x49\xe5\xb1\x55\xe4\x3a\x61\x02\x6b\xb7\x2a\xde\x98\x26\x36\xfe\x6e\xcc\x15\x30\xdf\x03\x66\x48\x21\xbf\x20\x89\x95\xd5\xac\xd4\x9d\xa6\xb3\x7a\xb4\x23\xb8\x18\xf7\x8e\xc1\xda\x01\x9b\xa9\xde\x56\x76\x2a\xdc\xb7\x25\x92\x33\xa6\x3b\x61\xba\x05\x98\x25\x12\xa5\x98\xa3\x8d\x75\xe6\x24\xbc\x55\xcb\x52\xd1\x49\x6d\x2c\x99\xb0\x7b\x0e\x81\x04\x86\x35\x9d\xc1\x51\xb4\xb9\x7f\x5c\xed\xf8\x7b\x58\x2c\x36\xa5\x27\x95\x69\xab\x44\x84\x61\x39\x05\xf7\x1a\x55\xe1\xf9\x84\x4a\xa5\x11\xc3\x4a\xb7\x4c\xf8\x8f\x1b\xb5\x6c\xd2\x41\x95\x77\x8d\x85\xd6\x22\xad\x3d\x28\x72\xb6\x42\x74\x33\x35\x2b\x1e\xed\x8e\x70\x06\xdf\xbc\x68\xe5\x8b\x3d\xd8\xac\x80\xd8\x19\x75\xa7\x2d\xc6\xdd\xb5\x7b\x48\xe4\x6c\xa2\x68\x33\x64\xfa\xc8\xb1\x6c\xeb\x08\x8f\x18\x0e\xda\xa2\x1d\xe3\xba\x3a\xe5\x3c\x31\x4f\x37\x15\xef\xc6\x2b\xed\xed\x3f\x16\x6a\x9a\xbd\x92\x72\xbb\x6a\xe8\xf4\xcd\xa2\xfd\xa4\x57\x4b\xff\xa0\xd5\xd2\x2f\x32\x99\x2a\xe7\x52\xc2\xad\x95\xba\x32\x67\x10\xc0\x02\xc7\x9a\x2d\xef\x63\x2d\xfd\xf2\xf9\xe2\x5b\x3f\x8c\x3c\x4d\x4e\x80\x80\xa7\xe5\x49\xad\x8f\x47\x60\xe4\x15\xf3\x6e\x14\xd1\x74\xba\x02\xc4\x95\x05\x84\x8c\x57\xbb\xfd\x4a\xe3\x29\xe5\xd3\x1e\xce\x68\x4f\xe5\xbc\xa7\xe6\x58\xa6\xbd\x49\xce\x89\xc7\xc4\x54\x78\xf6\x3e\xe3\xd3\x1a\x8e\x94\x4b\x4d\xb4\x98\x09\x56\x6c\x9b\xbb\xa9\x20\x10\x8c\x69\x9c\x8f\x69\x1c\xc6\x0c\xb0\x0c\xc6\x42\x27\xab\x90\xa0\xd8\xdf\xa8\x65\x9d\x45\x7e\x25\x72\x6d\xbc\x57\x79\x88\x40\x2c\x64\x21\xce\xc6\xac\xb6\xa6\x81\xc0\x99\x76\x0e\x6d\xff\xd8\xb4\x73\xf9\xd4\x69\xe7\xf2\x20\xda\xb9\x3c\xd3\xce\x41\x8d\x0b\xda\x39\x3c\xf2\xf1\x74\x72\x60\x54\x76\xd0\x28\x0f\x52\xac\x9b\x32\xdd\x14\xe8\x64\xce\x4e\xda\x6d\x25\x70\x47\xf0\xd9\x39\x4d\xdb\x48\xd3\xfa\x83\x32\x4f\xeb\x0f\x3e\xd1\x44\xad\x91\x99\x1d\x91\xab\x5d\x5d\x9f\x73\xb5\x73\xae\x56\x0e\xe9\x1c\x34\x3d\x56\xae\x76\xfd\xc4\x83\xa6\x03\x77\x36\xaf\xcf\x41\xd3\x21\x8d\x8f\x0b\x9a\x8a\xc6\xc9\x60\x8b\x86\xec\xc5\x6a\x81\x30\x01\x6c\xe9\xff\xcb\xc9\x8b\xc1\x8b\x17\x0d\xff\xff\x8c\x19\xcc\xf1\xb2\x63\xa8\x7c\xb9\xf7\x1c\x74\xbb\xdf\x3d\x67\xa1\x2b\x57\x72\x21\x53\xcc\x9c\xd1\x0f\xf4\x59\xe4\x25\x83\x33\x77\x1d\xd8\xfe\xcc\x5d\x67\xee\xfa\x34\xb9\x2b\x3b\x8d\xba\x1e\xe6\x65\x8e\x03\x48\xcc\x19\xfd\x22\x72\x89\x66\xb5\xb7\x48\x91\x84\xdf\x72\x50\x1a\xcd\xb1\x42\x12\x7e\x85\x58\x03\xe9\xa1\x9b\x04\xe2\x3b\xb4\x34\xb5\xed\x9b\xa7\x38\x8e\x45\xce\x35\x9a\x08\x89\x52\x21\x01\x11\xd0\x98\x32\xd5\x8b\xbc\xec\x3e\x18\x70\x9c\x6b\x2d\x38\x4a\x81\xd0\x3c\x45\x12\x13\x9a\xab\xed\x74\xc6\x2f\xde\xf8\x43\xed\xd3\x70\x9b\x21\xd3\xad\xb6\x47\x70\xe6\x09\x3b\x7b\xe8\x51\x39\xef\xf3\x61\xb9\x8f\x79\xf6\xdc\xcd\xba\x4f\x39\xaf\x6c\xd7\xfa\x31\x90\xd8\xd4\xe0\x78\x54\xd6\x4f\xfc\x27\x63\x3c\xf8\xa6\x34\xaf\xdd\x84\xef\x00\xda\xb2\x8a\xa5\x97\x75\x02\x5c\xbe\x3e\xf0\xc9\x81\x38\xc2\x28\x91\x30\x19\x3a\xef\xdf\xf7\xde\x50\x7e\xf7\xe1\xc3\x8e\x57\xd8\xac\x85\x7c\xa4\x04\xa3\x04\x35\x0d\xd7\x66\x89\x6a\xdf\xad\xfe\xca\xe9\xbd\x98\x87\x99\xbf\x20\xff\xd8\x2a\x2f\xb3\x85\xe5\xeb\xea\x62\xcb\x4a\xbb\x0e\x62\x9c\xd1\xf7\x02\x69\x61\xd7\xac\xc8\xc3\xa3\xd3\x02\x95\x06\x6e\x4f\x0a\x5a\x6a\x52\x8e\x8f\x3f\x6a\x42\x1e\x25\xfa\x3a\x31\xf1\x3b\xa2\xd7\xc3\xb7\xd9\x51\x73\xd7\x14\x16\x19\xe6\x64\xc7\x3b\x6b\x8f\xb6\xf7\x55\x63\xa3\xad\x79\xbf\xf9\xb2\x6a\xc9\xff\xbe\x33\x3a\x9f\x37\x9c\xcf\x1b\xca\x7a\xe7\xf3\x86\xf3\x79\xc3\xf9\xbc\xe1\x51\xce\x1b\xb2\x6a\x72\x70\xa1\x69\x0c\xdb\x8b\xca\x83\x6c\x07\x0c\x1e\x6e\x3b\xe0\x2d\x03\xac\x00\x11\x81\xb8\xd0\x48\x42\xc6\x96\x26\x7c\xd2\x09\x55\x08\x52\x4c\xd9\x09\xe9\xfd\x67\x67\xac\x1b\x91\x2d\x0b\xba\x40\xff\xfd\x0f\x1a\xf8\xfd\x97\x36\xcc\xec\xa1\x6f\x19\x43\x45\x81\x42\x12\x14\xc8\x19\x90\xe3\xec\x76\x0e\x77\xce\xe1\x4e\x17\xed\xda\x13\x80\x76\x2d\x5a\x7b\xde\xd9\x5b\xe4\xd9\xdf\x58\xd4\x7e\xc8\xb3\xea\xd3\xf6\xb1\x6a\x16\x3d\x73\x5d\x94\x49\x98\x01\xd7\xe8\x7b\x43\x1a\x48\x70\x44\x7f\x7a\x87\x0c\x5a\x90\x01\x0f\x4a\x31\xa7\x59\x6e\x5f\xc0\x43\xae\x3b\xba\x88\x08\x9d\x55\x18\xad\xff\x44\x2c\x9c\x27\x54\x43\xb1\x2c\x42\xc0\x85\xc9\x78\x0b\xd0\x05\xfd\xab\x6c\x81\x62\x91\x4b\xba\x91\x3d\xfa\xce\xe8\x4b\x3e\x56\x59\x88\x3e\x9f\x7f\x22\x8f\xd0\x99\x31\xb1\xf5\xd8\x45\x54\xfc\xbf\x02\xa3\xff\x05\x00\x00\xff\xff\x07\xa1\xe6\x9d\x7a\x41\x00\x00")

func templatesKyc_rejectHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesKyc_rejectHtml,
		"templates/kyc_reject.html",
	)
}

func templatesKyc_rejectHtml() (*asset, error) {
	bytes, err := templatesKyc_rejectHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/kyc_reject.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"enums/business_type.json":                    enumsBusiness_typeJson,
	"enums/countries.json":                        enumsCountriesJson,
	"enums/education.json":                        enumsEducationJson,
	"enums/employment_status.json":                enumsEmployment_statusJson,
	"enums/entity_type.json":                      enumsEntity_typeJson,
	"enums/gender.json":                           enumsGenderJson,
	"enums/id_document.json":                      enumsId_documentJson,
	"enums/industry.json":                         enumsIndustryJson,
	"enums/marital_status.json":                   enumsMarital_statusJson,
	"enums/nationalities.json":                    enumsNationalitiesJson,
	"migrations/001_squashed.sql":                 migrations001_squashedSql,
	"migrations/003_email_tokens.sql":             migrations003_email_tokensSql,
	"migrations/004_wallets_refactor.sql":         migrations004_wallets_refactorSql,
	"migrations/005_tfa_backends_refactor.sql":    migrations005_tfa_backends_refactorSql,
	"migrations/006_totp_constraint.sql":          migrations006_totp_constraintSql,
	"migrations/007_cascade_wallet_id_update.sql": migrations007_cascade_wallet_id_updateSql,
	"migrations/008_password_constraint.sql":      migrations008_password_constraintSql,
	"migrations/009_drop_tfa_keychain.sql":        migrations009_drop_tfa_keychainSql,
	"migrations/010_users_refactoring.sql":        migrations010_users_refactoringSql,
	"migrations/011_kyc_entities.sql":             migrations011_kyc_entitiesSql,
	"migrations/012_blobs.sql":                    migrations012_blobsSql,
	"migrations/013_rm_org_wallets.sql":           migrations013_rm_org_walletsSql,
	"migrations/014_blob_relationships.sql":       migrations014_blob_relationshipsSql,
	"migrations/015_rm_recovery_requests.sql":     migrations015_rm_recovery_requestsSql,
	"migrations/016_recoveries.sql":               migrations016_recoveriesSql,
	"migrations/017_rm_pending_transactions.sql":  migrations017_rm_pending_transactionsSql,
	"migrations/018_user_kyc.sql":                 migrations018_user_kycSql,
	"migrations/019_airdrops.sql":                 migrations019_airdropsSql,
	"migrations/020_favorites.sql":                migrations020_favoritesSql,
	"migrations/021_kdf_v2.sql":                   migrations021_kdf_v2Sql,
	"migrations/022_referrals.sql":                migrations022_referralsSql,
	"migrations/023_master_blobs.sql":             migrations023_master_blobsSql,
	"migrations/024_user_states.sql":              migrations024_user_statesSql,
	"migrations/025_tracking.sql":                 migrations025_trackingSql,
	"migrations/026_fix_user_states.sql":          migrations026_fix_user_statesSql,
	"templates/email_confirm.html":                templatesEmail_confirmHtml,
	"templates/kyc_approve.html":                  templatesKyc_approveHtml,
	"templates/kyc_reject.html":                   templatesKyc_rejectHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"enums": &bintree{nil, map[string]*bintree{
		"business_type.json":     &bintree{enumsBusiness_typeJson, map[string]*bintree{}},
		"countries.json":         &bintree{enumsCountriesJson, map[string]*bintree{}},
		"education.json":         &bintree{enumsEducationJson, map[string]*bintree{}},
		"employment_status.json": &bintree{enumsEmployment_statusJson, map[string]*bintree{}},
		"entity_type.json":       &bintree{enumsEntity_typeJson, map[string]*bintree{}},
		"gender.json":            &bintree{enumsGenderJson, map[string]*bintree{}},
		"id_document.json":       &bintree{enumsId_documentJson, map[string]*bintree{}},
		"industry.json":          &bintree{enumsIndustryJson, map[string]*bintree{}},
		"marital_status.json":    &bintree{enumsMarital_statusJson, map[string]*bintree{}},
		"nationalities.json":     &bintree{enumsNationalitiesJson, map[string]*bintree{}},
	}},
	"migrations": &bintree{nil, map[string]*bintree{
		"001_squashed.sql":                 &bintree{migrations001_squashedSql, map[string]*bintree{}},
		"003_email_tokens.sql":             &bintree{migrations003_email_tokensSql, map[string]*bintree{}},
		"004_wallets_refactor.sql":         &bintree{migrations004_wallets_refactorSql, map[string]*bintree{}},
		"005_tfa_backends_refactor.sql":    &bintree{migrations005_tfa_backends_refactorSql, map[string]*bintree{}},
		"006_totp_constraint.sql":          &bintree{migrations006_totp_constraintSql, map[string]*bintree{}},
		"007_cascade_wallet_id_update.sql": &bintree{migrations007_cascade_wallet_id_updateSql, map[string]*bintree{}},
		"008_password_constraint.sql":      &bintree{migrations008_password_constraintSql, map[string]*bintree{}},
		"009_drop_tfa_keychain.sql":        &bintree{migrations009_drop_tfa_keychainSql, map[string]*bintree{}},
		"010_users_refactoring.sql":        &bintree{migrations010_users_refactoringSql, map[string]*bintree{}},
		"011_kyc_entities.sql":             &bintree{migrations011_kyc_entitiesSql, map[string]*bintree{}},
		"012_blobs.sql":                    &bintree{migrations012_blobsSql, map[string]*bintree{}},
		"013_rm_org_wallets.sql":           &bintree{migrations013_rm_org_walletsSql, map[string]*bintree{}},
		"014_blob_relationships.sql":       &bintree{migrations014_blob_relationshipsSql, map[string]*bintree{}},
		"015_rm_recovery_requests.sql":     &bintree{migrations015_rm_recovery_requestsSql, map[string]*bintree{}},
		"016_recoveries.sql":               &bintree{migrations016_recoveriesSql, map[string]*bintree{}},
		"017_rm_pending_transactions.sql":  &bintree{migrations017_rm_pending_transactionsSql, map[string]*bintree{}},
		"018_user_kyc.sql":                 &bintree{migrations018_user_kycSql, map[string]*bintree{}},
		"019_airdrops.sql":                 &bintree{migrations019_airdropsSql, map[string]*bintree{}},
		"020_favorites.sql":                &bintree{migrations020_favoritesSql, map[string]*bintree{}},
		"021_kdf_v2.sql":                   &bintree{migrations021_kdf_v2Sql, map[string]*bintree{}},
		"022_referrals.sql":                &bintree{migrations022_referralsSql, map[string]*bintree{}},
		"023_master_blobs.sql":             &bintree{migrations023_master_blobsSql, map[string]*bintree{}},
		"024_user_states.sql":              &bintree{migrations024_user_statesSql, map[string]*bintree{}},
		"025_tracking.sql":                 &bintree{migrations025_trackingSql, map[string]*bintree{}},
		"026_fix_user_states.sql":          &bintree{migrations026_fix_user_statesSql, map[string]*bintree{}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"email_confirm.html": &bintree{templatesEmail_confirmHtml, map[string]*bintree{}},
		"kyc_approve.html":   &bintree{templatesKyc_approveHtml, map[string]*bintree{}},
		"kyc_reject.html":    &bintree{templatesKyc_rejectHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
