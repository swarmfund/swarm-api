// Code generated by go-bindata.
// sources:
// enums/business_type.json
// enums/countries.json
// enums/education.json
// enums/employment_status.json
// enums/entity_type.json
// enums/gender.json
// enums/id_document.json
// enums/industry.json
// enums/marital_status.json
// enums/nationalities.json
// migrations/001_squashed.sql
// migrations/003_email_tokens.sql
// migrations/004_wallets_refactor.sql
// migrations/005_tfa_backends_refactor.sql
// migrations/006_totp_constraint.sql
// migrations/007_cascade_wallet_id_update.sql
// migrations/008_password_constraint.sql
// migrations/009_drop_tfa_keychain.sql
// migrations/010_users_refactoring.sql
// migrations/011_kyc_entities.sql
// migrations/012_blobs.sql
// migrations/013_rm_org_wallets.sql
// migrations/014_blob_relationships.sql
// migrations/015_rm_recovery_requests.sql
// migrations/016_recoveries.sql
// migrations/017_rm_pending_transactions.sql
// migrations/018_user_kyc.sql
// templates/email_confirm.html
// templates/kyc_approve.html
// templates/kyc_reject.html
// DO NOT EDIT!

package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _enumsBusiness_typeJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\x50\x72\x4f\xcd\x4b\x2d\x4a\xcc\x51\x08\x29\x4a\x4c\xc9\xcc\x4b\x57\xd2\x01\x09\xfa\x97\x64\xa4\x16\x29\x71\xc5\x02\x02\x00\x00\xff\xff\xeb\x54\xff\x06\x22\x00\x00\x00")

func enumsBusiness_typeJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsBusiness_typeJson,
		"enums/business_type.json",
	)
}

func enumsBusiness_typeJson() (*asset, error) {
	bytes, err := enumsBusiness_typeJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/business_type.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsCountriesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x57\x4d\x72\xdb\x4a\x0e\xde\xe7\x14\x5d\xd9\xc4\xa9\xca\x1c\xc2\xbf\xb2\x23\xc9\xa3\xb1\x64\x57\x25\x53\xb3\x00\x49\x98\x84\xd5\x04\x14\xb0\x5b\x8a\xb4\x9a\x6b\xcc\x3d\xe6\x06\xef\x26\xef\x24\xaf\x28\xd9\x04\xe8\xe4\xed\xf8\xa1\x01\x34\xfe\x1b\xfc\xf7\x87\x10\x42\xf8\x78\xfe\x5c\x37\xc0\xd4\x25\xe0\x8f\x5f\x5e\x49\xb1\x00\x26\x30\x58\xa3\x3a\xc8\x95\xa8\x3a\x58\x4b\x74\x28\x51\x9d\x21\x00\x57\xe1\x02\xb4\xc8\x95\x1d\x69\x8d\x9c\x88\x1d\xa1\x45\x7f\x4d\xee\x92\x42\x7c\x47\x70\xf0\x80\x5a\x00\xbd\x98\x9d\x17\xd0\x40\x0b\x9d\x83\x0a\xe4\x4e\xb9\x8e\x50\x61\xd7\x18\x45\x0b\xa8\xc4\x04\x30\x82\x66\x0f\x6b\xca\xad\x83\x74\x40\x43\xec\x54\x37\xd9\x85\xeb\x42\x22\x6d\x09\xc2\xd9\x22\x66\x25\x86\x44\xc2\x10\xc3\x32\x41\xc2\x20\xcf\x9f\x8d\xaf\x63\x3a\x85\xe6\x16\xf5\x80\xb5\x6c\x5d\x34\x2e\x24\x75\x3b\x70\x58\xe1\x40\xd1\x50\x66\xa4\x70\xd5\xdb\xdb\x41\x04\xb3\x32\xc7\x1a\x5c\x94\x2e\xb2\xae\x89\x21\xdc\x40\x27\x8e\x96\xb9\xa2\x37\x78\x09\x85\x84\x27\xd4\x0a\x8d\xd2\x16\x52\x99\x92\x4b\x68\x51\x45\xd8\x30\x83\x25\xf2\x12\xb9\x4f\x54\x38\x7f\x56\x2a\x81\xc3\x03\x6e\x72\x11\xa9\x1c\xce\x1b\xa8\xec\x9b\x22\x3a\x60\xfe\x5d\x4a\x94\xb6\x70\x77\x4a\x2b\x6a\xb9\xb9\x14\xae\xc5\x40\x97\x20\x3c\x50\x69\xdc\x7f\xfc\x3f\x61\xb8\xfa\x74\xb7\x15\x52\xbb\x40\x05\x92\x53\x99\x0b\xfb\xde\x6f\x5c\xaa\x2f\x0f\x58\x36\xbf\x18\x7e\x85\xad\x94\x0a\x89\xca\xb0\x40\xd9\x44\xfc\xd4\x0d\x3c\x41\x9e\xc3\x54\x14\xe1\x37\xcc\x9e\x27\x35\x18\x46\xb6\x5f\x21\xb7\xa0\xeb\x01\xbe\x50\x21\x39\x0d\xc9\xb8\x92\x96\xd8\x39\xf6\x86\x7f\x0d\xeb\x75\x99\xa1\x12\x1d\x60\xbd\xdf\xa4\x01\xc4\xb0\x84\xb8\x1d\x9d\xff\xc8\x90\x44\x09\x62\x98\x64\x62\x33\xfc\x5a\x29\x39\x3f\xae\xbb\x24\xae\x0b\xaf\x53\x43\xb2\x31\x7c\x43\x2f\x64\xdf\x1c\x81\x87\xdc\xde\x28\x70\x39\xc4\x7e\x02\x85\x15\xcc\x04\xfa\xd4\x86\x33\x1f\x99\x55\x83\x43\x2b\x4c\x50\xb4\xb6\x4b\x26\xa8\x2d\xf0\x7e\x80\x8d\xeb\x83\x89\x22\xba\x5b\x14\x7d\x29\x4e\x32\x24\x6c\x21\x3a\x82\x77\xf5\x84\xc2\x05\x75\x1d\x64\x23\xee\x9d\xfa\x5b\x20\x4b\xc6\xad\x70\x95\xd5\x26\xca\x6d\xe6\x1a\x74\xb0\xeb\xae\x44\xef\xff\x1d\xbb\x96\xb9\xe3\x4a\x18\x3b\x47\x50\xe0\x70\x76\xd7\x45\x68\xc7\x25\xf2\xd9\x71\xfc\xb0\xef\xb1\xea\x4e\x01\x87\xe6\xbf\x4b\x10\x07\x23\xbe\x42\x0b\xae\x5e\xbe\xc2\xc6\x26\xd1\x57\xd1\xca\xd0\x14\x0e\xb0\x6e\xfc\x60\x9f\x22\xef\x07\xc9\x29\x29\x15\x60\xce\x4f\xf3\x0e\x68\xa8\xa8\xe9\x5e\xeb\xfd\xc1\x0b\xcf\x40\x5e\xdb\xe2\xcf\xff\xfe\xaf\x0b\xbf\xa9\x7f\xe3\x4c\x5b\x0b\xc4\x0c\x0b\x60\x2b\x8d\x19\x76\x92\x9a\xa1\x3d\x66\x54\xf8\xc7\x65\x46\xc5\xde\x01\x2c\x9b\x84\xdc\x25\xb4\xd9\x3b\xa3\xd4\x64\xff\x3c\xcd\xf2\x4f\x6c\x0b\xc9\x5a\xbf\x51\xe6\x50\x41\x0d\x5d\x09\x6a\x94\x08\x3b\xf2\x68\xef\x52\x35\x87\x58\xd1\x16\x3b\x87\x3d\x6f\x72\x8c\xda\x35\x10\x63\xe8\xd3\xca\x95\x13\xc8\x4a\xc9\x1b\x75\xa2\x90\x4d\x9c\x39\xfe\xa4\x72\xf0\x7a\x4e\xa5\x9e\xca\x25\x9c\xdd\x60\x85\x0a\x09\xab\xd3\x8b\xd1\xf9\x12\x99\x0b\x83\x93\xea\xe7\x8a\x7b\x20\xe7\xc2\x09\x19\x6b\x75\x1c\x2a\xa5\x17\x38\xf4\x8d\xf8\x23\x0f\xfd\x33\xdf\x43\x3f\x8e\xde\xe0\x3d\xb4\xe4\x66\xf0\x3d\x64\x1d\xfa\xe4\x1e\x37\x10\x0d\xa4\x06\x75\xe4\xf4\x3d\xee\xc2\x77\x04\x5f\xb6\xf7\x54\x82\x42\x9d\x4d\x21\xd5\xa8\x23\xe0\x2e\x13\xdd\xc1\x50\xd6\xff\x6c\xad\xd2\x16\xb0\x1e\xed\x23\x0b\x88\xd6\xbe\x0b\x60\x68\xc1\xd0\x26\x43\xe8\x4d\x19\x77\xfe\xe2\x64\xc7\xa0\x7e\x81\xe6\xd8\xa2\xa1\x48\x9b\x0d\xb1\x65\x7c\x21\xde\x8d\x85\x68\xca\xb5\x39\xff\x2f\x48\x16\xb2\xbf\x7d\x10\xfc\xc1\x5c\x62\x25\x5b\x3b\x92\xd6\x17\xc7\x43\xee\x3a\x02\x0e\xaf\x99\x27\x6b\x8e\x87\x1d\xb0\x4d\xb7\x25\x10\xa7\x30\xa5\x94\xba\xe3\xd6\x70\x8f\x5b\xea\xc6\x87\xb3\x5c\xd2\x3b\xfe\x27\xe2\x12\x39\x1d\x25\xfa\xd7\xe8\x34\x32\xbd\xb7\x4b\x68\xc5\x09\x71\x98\x83\x12\x8b\x51\x24\xac\xa4\xc5\xa3\x86\x85\x12\x97\xb4\x41\x3b\xcc\x15\x85\x73\x05\x57\x36\xcb\xbe\x08\x2d\x5c\x4b\xd4\xd1\xe1\xbe\x6c\x30\x46\x77\x3d\xa1\x2a\x84\x19\x0a\x9b\x5a\xe2\x1a\x36\x62\x4f\xf9\x32\xca\x16\xd6\x4e\x4d\x94\xad\xdf\x16\x97\xfd\xfa\x20\xfc\xbe\x13\x97\xd2\xfa\x15\x72\x29\x39\x35\xaf\x8b\xca\x98\xb6\xcc\x6e\x52\x2e\x37\x6e\x6f\x5c\x2a\x85\x19\xf0\xda\x04\x46\xac\xc7\x15\xaf\x35\x3b\x77\xfd\x9a\xe6\x8a\x67\xb9\xc3\x0a\x8d\x7d\x47\xe9\x70\x6a\x9c\x81\xb4\xd7\x3e\xf9\x7d\x08\x7f\x99\x9c\x2b\x78\xa1\x71\xed\xaf\x1a\x18\xa9\x5f\x35\x18\x9e\x45\x5b\xd4\xf0\x2d\xd7\xd2\x45\xd8\x8e\xf6\x8f\x39\x94\x58\xf9\x07\x7d\x45\xad\xe8\x3f\x66\xd8\xa5\xc1\xe6\x95\xd8\x7a\xb2\x12\xae\x8d\x57\x89\xa9\x82\xea\x98\xf9\x95\x14\xe0\xf8\x32\x93\x1b\x99\xab\xac\x6b\xdc\x7b\xd4\xef\xf2\x23\xc3\xf3\x16\xe2\xd0\x73\x8f\xb5\x2f\xec\xc7\x75\xbf\xa8\x0f\xf6\x3c\x32\xf5\xe3\xef\x18\x91\xeb\x96\xfa\x61\xd8\xbd\x3b\x9b\x12\xd7\x95\xb4\xbd\x87\x13\x45\x48\xe1\xa2\x1f\xb8\xc4\xa7\xbe\x10\xed\xa7\x13\x87\x77\xaf\xe8\xab\xec\x68\x09\x01\x3e\xf8\x56\x7c\x65\x19\x26\x6f\x38\x6f\xd1\x17\xcb\xa3\x66\x3f\x46\x1e\x0f\x05\x8e\xf3\xf3\x04\x9c\x21\x0d\x7e\x3e\x21\xe3\x21\x63\x84\x2f\xe1\xf8\x5b\x00\xc7\x5c\x3b\x0b\x06\x46\xc2\x14\xee\x6d\x8f\xff\x86\xad\x55\xcd\x77\xf0\x9b\xf1\x77\x6a\x0b\x28\x76\xf8\xf1\xc3\x7f\xfe\x0a\x00\x00\xff\xff\xc6\x15\xfd\x59\xb4\x0d\x00\x00")

func enumsCountriesJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsCountriesJson,
		"enums/countries.json",
	)
}

func enumsCountriesJson() (*asset, error) {
	bytes, err := enumsCountriesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/countries.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsEducationJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\x50\x0a\x4e\x4d\xce\xcf\x4b\x49\x2c\xaa\x54\x70\x4d\x29\x4d\x4e\x2c\xc9\xcc\xcf\x53\xd2\x01\x49\x38\x25\x26\x67\xa4\xe6\xe4\x17\x41\x78\xbe\x89\xc5\x25\xa9\x50\xb6\x63\x71\x71\x66\x71\x49\x62\x5e\x89\x42\x41\x51\x7e\x5a\x6a\x71\x71\x3e\x42\x22\x3f\x39\x33\xb1\x24\x15\x5d\x22\x00\x95\xeb\x5f\x92\x91\x5a\xa4\xc4\x15\x0b\x08\x00\x00\xff\xff\x8b\x8f\x40\x08\x81\x00\x00\x00")

func enumsEducationJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsEducationJson,
		"enums/education.json",
	)
}

func enumsEducationJson() (*asset, error) {
	bytes, err := enumsEducationJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/education.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsEmployment_statusJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcd\xbd\x0a\xc2\x40\x10\x04\xe0\x3e\x4f\x31\xa4\x36\x0f\x61\xa1\x58\x49\x30\x76\x62\x11\xc9\x9c\x1c\xf7\xb3\xb2\xee\x11\x7c\x7b\x91\x33\xa0\xa0\xe5\x7c\x3b\xec\x9c\x1a\xa0\xdd\xa4\x5b\x94\x07\x27\x6c\x4b\x8c\xdd\xd1\x27\xb6\xab\x2f\xef\x47\xb5\x0f\x1f\x18\x5d\xc7\xf7\xb1\xd2\x5e\x0c\x8b\xe0\x52\x0c\x51\x24\xf8\x7c\x85\x13\xc5\x2c\x1a\x7e\xd4\xc6\x3c\x21\xcb\xbf\xea\x4e\x12\xd3\x18\xa8\x35\x1e\x68\x5e\x97\xb5\xc1\xca\xc4\x6c\x35\xf4\x4a\x47\xc5\xeb\xb5\x09\xd6\xf9\x3e\x53\xdb\xe6\xfc\x0c\x00\x00\xff\xff\x63\xec\xf6\xf5\xda\x00\x00\x00")

func enumsEmployment_statusJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsEmployment_statusJson,
		"enums/employment_status.json",
	)
}

func enumsEmployment_statusJson() (*asset, error) {
	bytes, err := enumsEmployment_statusJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/employment_status.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsEntity_typeJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\x50\xf2\xc9\xcc\xcd\x2c\x49\x4d\x51\xf0\xc9\x4c\x4c\xca\xcc\xc9\x2c\xa9\x54\xd2\x01\x09\xfb\x97\x64\xa4\x16\x29\x71\xc5\x02\x02\x00\x00\xff\xff\xdc\x91\xdd\x6c\x24\x00\x00\x00")

func enumsEntity_typeJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsEntity_typeJson,
		"enums/entity_type.json",
	)
}

func enumsEntity_typeJson() (*asset, error) {
	bytes, err := enumsEntity_typeJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/entity_type.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsGenderJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\x50\xf2\x4d\xcc\x49\x55\xd2\x01\xb1\xdc\x52\x73\xe1\x6c\xbf\xfc\x12\x85\xe2\xd2\xa2\x54\x25\xae\x58\x40\x00\x00\x00\xff\xff\x52\x2f\x0e\x38\x26\x00\x00\x00")

func enumsGenderJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsGenderJson,
		"enums/gender.json",
	)
}

func enumsGenderJson() (*asset, error) {
	bytes, err := enumsGenderJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/gender.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsId_documentJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\x50\x0a\x48\x2c\x2e\x2e\xc8\x2f\x2a\x51\xd2\x01\xf1\x82\x52\x8b\x33\x53\x52\xf3\x92\x53\x15\x3c\x5d\x20\x22\xce\x99\x25\x99\x55\xa9\x79\x20\x3e\x57\x2c\x20\x00\x00\xff\xff\xac\x89\x09\xfe\x32\x00\x00\x00")

func enumsId_documentJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsId_documentJson,
		"enums/id_document.json",
	)
}

func enumsId_documentJson() (*asset, error) {
	bytes, err := enumsId_documentJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/id_document.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsIndustryJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x5c\x92\xcd\x72\xdb\x3a\x0c\x85\xf7\x79\x0a\x4e\xd6\xf7\x0e\x9f\xc1\x49\x95\x9f\x8e\xdd\x24\x76\xda\x4d\xa7\x0b\x04\x86\x25\x4c\x28\xc0\x03\x82\x6a\xfd\xf6\x1d\x49\x94\xe3\x74\xc9\x73\x40\x00\xfc\x0e\x7f\x5e\x85\x70\xbd\x42\xd4\x22\xce\xd2\xc6\x3b\x16\x10\xa4\xeb\xff\x26\x7d\x3f\x90\x39\xe7\xd1\x78\x2e\x6f\x89\x31\x6c\x29\x81\xb3\x4a\xae\x15\x64\x9a\x8f\x80\x14\x57\x03\x4f\x46\xd5\xcd\x73\x6c\xc4\xc9\x1c\x58\x7a\x12\x9f\x1b\xe4\x8e\xa5\xad\x25\xc5\xb5\x57\xe7\xa1\x0e\xbb\x01\x79\x1f\x07\x6d\xd4\xbc\x85\x76\x51\x4b\x66\xa1\x9c\xc3\x17\x1a\x28\xe9\x71\x6c\xf5\x8f\xf3\x74\x3c\xaa\x79\x11\xf6\xd3\xec\xdc\x26\x32\x46\x48\x71\xb5\xef\x59\x38\xbb\xc1\xc7\x98\x5b\x95\xec\x56\x70\xdc\x35\xde\x01\x72\x62\x67\xca\x1f\x66\xe9\xc9\xc2\xbd\xea\x7e\xd1\x4a\x76\x1d\xb5\x1d\xd9\xc0\x0b\x9a\x66\x5f\x70\x7a\x6f\x7c\x35\x60\x39\xbf\xaa\x11\xb2\xf6\x14\xbf\xfb\xa7\xbe\x8d\xb4\x2c\x44\x76\x2e\xbb\xd7\x81\x6c\xe6\xb2\x19\x2b\xc1\xea\xee\xf7\x46\x54\x19\x3e\x10\x24\xef\x10\xac\x8e\x7c\xd0\x7c\x64\x87\xc4\x7e\x1a\x87\x0e\x94\xaa\x5e\x7a\x90\xb0\xa5\xac\xc5\x70\x99\xf8\x28\xd9\x21\xcd\x59\xc5\x0d\xb0\x38\x5d\x04\xfb\x28\xb9\xd8\xe5\xd1\xc9\x84\x2a\xd8\xaf\xfa\x16\x76\x04\x86\x5d\x58\xf1\x42\x61\x0d\xbf\x43\x23\x07\x35\xa4\x69\xeb\x1d\x61\xb1\x33\xf1\x35\xb5\x50\xb7\xd9\x80\x40\x3b\xd7\x34\x7f\x08\xcb\x07\xf9\x0d\x48\x39\x00\x7a\x19\x31\xc4\xa7\x23\xd9\xe5\x4f\xda\x80\xbd\x93\x9f\x01\x7d\x53\xf9\xff\xd9\xf4\xc0\x1e\x7f\x68\x2a\xe2\x44\x36\x3b\xcf\x1d\x58\x0f\x48\xc5\xa7\x8c\x6f\x58\x9d\xb0\xab\x9e\xe9\x81\x72\x66\x15\x48\x4b\x5e\xb5\xff\xcb\x2a\xbe\x94\x09\x5e\xb8\x55\x71\xd3\xba\xef\x96\x20\x85\x26\x3b\x38\x2d\x42\x76\x18\xe9\x78\xbc\x53\xdd\x7f\x8e\x7d\x4b\x0e\x5c\x6f\xee\x20\x2d\xcd\x77\xc8\x24\x48\x71\x4b\x79\x02\x57\xd5\x77\x4e\x89\xf6\x61\x0d\x6f\x5a\xea\xf6\xaf\x84\x9d\x68\xd2\xf6\xb4\x9c\x13\xa1\xf6\x7d\x11\xc6\x4b\x1c\xaf\x06\x92\xc7\x7f\x3d\x27\xb8\xd6\x96\xb3\x33\x56\xf7\xc9\x3b\xb2\xeb\xab\x5f\x7f\x03\x00\x00\xff\xff\x89\x06\xd9\x1d\xbe\x03\x00\x00")

func enumsIndustryJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsIndustryJson,
		"enums/industry.json",
	)
}

func enumsIndustryJson() (*asset, error) {
	bytes, err := enumsIndustryJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/industry.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsMarital_statusJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8a\xe6\x52\x50\x50\x0a\xce\xcc\x4b\xcf\x49\x55\xd2\x01\xb1\x7d\x13\x8b\x8a\x32\x53\x53\x20\x1c\x97\xcc\xb2\xfc\xa2\x64\x18\x2f\x3c\x33\x25\xbf\x3c\x35\x45\x89\x2b\x16\x10\x00\x00\xff\xff\x1b\xdc\x53\x3a\x36\x00\x00\x00")

func enumsMarital_statusJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsMarital_statusJson,
		"enums/marital_status.json",
	)
}

func enumsMarital_statusJson() (*asset, error) {
	bytes, err := enumsMarital_statusJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/marital_status.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _enumsNationalitiesJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x56\xcd\x72\xe3\x36\x0c\xbe\xef\x53\x68\xf6\xbc\x79\x88\x78\x93\x75\x1c\xff\xd4\x8d\x9d\xcc\x34\x9d\x1e\x20\x09\x2b\x21\xa6\x00\x07\x24\xed\xb5\x9e\xbe\xa3\xa6\x91\x00\xef\xf1\xfb\x08\x92\x00\xf8\x01\xc4\xdf\x5f\x8a\xa2\x28\xbe\xde\xfe\x6c\x5a\xe0\xaf\xdf\xfe\x47\xa1\x04\x26\x8b\x1b\x54\x8b\xb9\x16\x55\x8b\x1b\x09\x16\x26\x6a\x32\xf0\xb7\x62\x06\x5a\xe6\xda\xac\x68\x83\x9c\x88\xd1\x52\x1d\xba\xbb\x72\x4c\x0a\xe1\x9a\xb1\xb8\x47\x2d\x81\xde\x80\xe9\x93\x9a\x41\x0b\x9d\x31\x99\x41\xab\x40\x76\x9d\x9b\x00\x35\xc6\xd6\x50\x5a\x42\x6d\xf7\x60\x00\xcd\xd1\x33\x8d\x87\xd4\xa3\xc5\x4c\x8c\x11\x47\xdc\xe6\x04\x8e\xa0\x18\x21\xdf\xcc\xb3\x0b\x78\x26\x81\x4e\xf6\x58\x89\x43\xfc\xdf\x8a\x07\xd4\x1e\x1b\x39\x91\x4d\xc7\x5a\x52\x3c\x03\xc3\x68\xad\xd0\x93\xcd\xce\x4c\x33\xa3\xc5\x39\x34\xa0\x8e\xd0\x03\x31\x94\x68\x88\xcc\x36\xf2\xef\xd0\x95\x72\x45\xa0\x8a\xb0\xa3\x18\xbc\xc9\x11\x8b\x17\x54\xc7\x21\x0f\x4f\x57\xdc\xfe\x54\xaa\x0c\xdd\xfa\x9d\x2d\x05\x74\xd0\xe6\xec\xbb\x04\xe9\x4a\x6b\x2e\x9d\xa8\x85\x83\xd6\xdc\x86\x98\xa0\x78\x72\x17\xaa\x40\xb2\x47\xe4\xd2\x80\xcb\x51\x49\xd2\x08\x7b\xac\xda\x4f\x70\x07\x4c\x71\x42\x6f\x54\x4a\x4e\xa3\x62\xee\xa4\x23\xb6\xf7\xfc\x46\xdc\x57\x19\x6a\x51\x13\xdd\x7d\x73\x39\x5a\x57\x76\x10\x4e\x83\x89\xb1\x78\xcf\x90\x44\x09\x42\x71\x25\x94\x7b\xa5\xe4\xce\x8a\xc9\x3d\xc9\x7d\x6a\x49\x8e\x86\xf8\x41\x6f\x0e\xb1\x8d\xe6\x87\x22\x4f\x91\xce\xc1\x25\x79\x0e\xa5\xd8\x57\x98\xa3\xa8\x95\xfe\x1c\xb5\x33\xa8\x05\x06\xbb\xaa\x88\x07\x03\xbc\x52\xe6\x19\x12\x76\x10\x2c\xe3\xe2\x9c\xe7\x8b\x2b\x9b\x07\x20\x9b\xb2\x07\xe1\x3a\x9b\x84\x3d\x64\xf6\x02\x5f\x54\x18\x80\x6b\xd4\x91\x70\xea\x5e\x70\x3d\xc4\x66\x19\x75\xdd\x6d\xa1\xf0\x4e\x13\x30\x39\x5b\x44\x05\x0c\xd3\x5a\x72\x7d\x69\x71\x12\xeb\xc6\x23\x74\x60\xc5\xf0\x08\x47\x17\xd6\xa3\x68\xed\xee\x5d\x42\x0f\x87\x36\x26\xd3\xc7\x96\xc8\x17\x73\xc1\xcd\x92\x94\x4a\x98\x24\xb8\xcc\xe7\x21\x39\x23\x24\x6d\x5a\xea\x3f\xe1\x0a\x92\x6d\x2c\x2b\x2c\x9d\x03\x6b\x89\x92\x5a\x99\xac\xc5\xa6\x79\x45\xa5\xeb\xf1\x2b\x2a\x2f\x16\x61\xd5\x26\xe4\x98\x90\x78\xca\xf4\x8a\x52\x9b\x5d\x50\xab\xfc\x0b\xbb\x52\xb2\x36\x93\xd5\x1a\x2a\xac\x9d\x74\xd7\x10\xa0\x81\x78\xb1\xf8\x7c\xb5\x7e\x89\x9e\xa8\xe9\xe4\xb0\x5f\x4d\x36\x50\xd0\xd8\x42\x08\x8e\xca\x4a\x09\xbc\x0f\x03\x65\x09\xfc\x65\xdf\x6f\x4d\x95\x5e\x09\x67\x2d\xa1\x16\xeb\x85\x30\x36\x10\xdf\xb3\xc9\xf1\xd0\x9e\xdc\x16\x4e\xc8\xd8\x28\x19\x4a\xa5\xb2\x17\x49\x3f\x54\x63\xe5\x5a\x76\x67\x9c\xdf\x40\x47\xb6\x5a\x37\x90\x35\x1b\x88\x47\xb0\xb1\xde\xe5\x34\x15\xfa\x06\xcf\xc5\x2b\x82\x2f\x90\x0d\x55\xa0\xd0\xd8\x33\x68\xf8\xe1\xf1\x0a\x9b\x75\xd1\x33\x36\x9e\x48\x6d\xb1\x74\xcd\xee\x8f\xce\x48\x79\x0b\x07\x72\xda\xde\x42\x00\x73\xe3\x16\x18\x3a\xf7\x20\x5b\x38\x66\x28\x06\x87\xaf\x1a\xc4\xf6\xc3\x59\x23\xc7\x2d\x6a\x3e\xb9\x5e\x17\xe8\x48\x3c\x6a\x7b\x2b\xc1\x94\xf1\x56\x34\xe5\x26\x9b\x14\xfd\x09\x09\x74\xf4\xec\x49\xbc\x23\x4f\x39\xda\x57\x7f\x3a\x03\x9b\x19\x66\x49\x69\x50\x4d\x01\x5c\x17\x1b\x3c\x51\x74\xed\x9d\x38\x15\xab\x5c\xfd\xc6\xbd\x10\x57\xc3\xe8\x63\xf9\x4e\x1c\xea\x40\xdd\x57\xb8\x03\x29\xf6\xd2\xa1\x35\xca\x35\x15\xb7\x0a\x56\x0d\xbb\x41\x5e\x4e\x00\x3b\x54\x6f\x70\xa9\x5a\x0c\x41\x28\x8e\x14\xa1\x2a\x14\x2b\x14\x9b\xe7\x1d\x71\x03\x47\xf7\xa4\xbb\x20\x27\x38\x58\x84\x3c\xdd\x33\xfc\xd5\xc2\xc5\x22\x7a\x79\xed\xa4\x83\xa9\x6b\xee\x24\xa7\xf6\x7a\x26\xf8\x20\xbd\x7c\x3e\xb8\xdd\x30\x2f\xda\x60\x8e\xee\x53\xde\x29\x15\x2b\xe0\x83\xd9\x76\xbd\x21\x2b\xf1\x30\xc0\x8c\xc4\x19\xfa\xc9\x9b\x33\xd6\xf6\xb8\x33\xc5\x29\x2b\x17\x2b\xf9\x3d\x70\xef\x64\xb1\x87\xba\x6f\x69\x4c\xc6\xbe\x85\xf1\xd4\x7b\x88\xa9\xd8\x53\x27\x6a\x1c\xd9\x8b\x9f\x54\xf6\xc2\x8d\x39\x4d\x89\xa9\x76\x3f\xe5\x3e\xb3\x53\xd3\x7e\x98\xdc\x26\x5f\x07\xd8\xa1\x59\x3d\x41\x30\x05\xf5\xdc\x38\x99\x3e\x1f\xfe\x9b\x80\xcd\xb8\xd0\x91\x9a\xaf\x64\x36\x34\xbf\xe9\xf0\xdb\x0e\xdd\x03\x3d\x6b\xf6\x25\xf7\xdc\x97\x78\x55\xd1\x1b\xba\x79\x01\xce\x90\xf2\x27\xf3\x82\x8c\x7d\x46\xf3\xd7\xbf\x10\xa6\xe1\x35\xa6\x34\xfc\x85\xc3\xc0\xff\x89\x5e\xfd\x20\xf2\x4a\x5d\x09\xe5\x79\x50\xc5\x97\x7f\xfe\x0d\x00\x00\xff\xff\x66\xc9\xfc\xd2\x9c\x0c\x00\x00")

func enumsNationalitiesJsonBytes() ([]byte, error) {
	return bindataRead(
		_enumsNationalitiesJson,
		"enums/nationalities.json",
	)
}

func enumsNationalitiesJson() (*asset, error) {
	bytes, err := enumsNationalitiesJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "enums/nationalities.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations001_squashedSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x58\xdd\x72\xe2\x36\x14\xbe\xe7\x29\x74\x17\x32\x4d\x3a\x49\xba\x61\x5b\xf6\x8a\x06\x67\x87\x29\x35\x2d\x81\x99\xe6\x4a\x23\xec\x03\xa8\x18\xc9\x2b\xcb\x10\xd2\xe9\xbb\x77\x2c\xdb\xf8\xef\x60\x0c\x29\xcb\x1d\xd2\xe7\x73\x3e\x9d\x7f\xe9\xf6\x96\xfc\xb0\xe6\x0b\xc5\x34\x90\xa9\xdf\x6a\x3d\x8d\xad\xde\xc4\x22\x93\xde\xaf\x43\x8b\xb0\x50\x2f\xa5\xe2\xef\xe0\x52\x17\x36\xdc\x01\xd2\x6e\x11\x42\x08\x77\xc9\x8c\x2f\x02\x50\x9c\x79\xe4\x8f\xf1\xe0\xf7\xde\xf8\x95\xfc\x66\xbd\xde\x98\xdd\x2d\xf3\x3c\xd0\x94\xbb\x84\x0b\x0d\x0b\x50\xf1\xf2\x9c\x8b\x05\x28\x5f\x71\xa1\xc9\x86\x29\x67\xc9\x54\xbb\xf3\xe9\x9a\xd8\xa3\x09\xb1\xa7\xc3\x61\x8c\x72\x41\x33\xee\x05\xe4\xef\x40\x8a\x19\xe9\x5b\xcf\xbd\xe9\x70\x42\xae\xfe\xf9\xf7\xaa\xdb\x8d\xd7\x8a\x78\x47\x01\xd3\xe0\x52\xa6\x89\xe6\x6b\x08\x34\x5b\xfb\x64\xcb\xf5\x52\x86\xf1\x0a\x79\x97\x02\x32\x41\x0f\x77\xf7\x9f\x6f\xef\xef\x6f\xef\x7f\x22\xf7\x77\xdd\x4f\x9d\xee\xe3\xcf\x3f\x76\x1e\x3a\xbf\x74\x3e\x5f\x75\xbb\x35\x12\x62\x6d\x1e\x0b\x34\xf5\xe4\x82\x8b\x8b\x2b\x6c\x5d\x7f\x29\x79\x63\xb9\x66\x0e\x5d\xc1\x2e\x38\xe2\x05\x12\x73\xf5\xc3\x99\xc7\x9d\xbc\xa9\xe3\xf5\x00\x1c\x05\x05\x17\x54\x55\xad\x76\x0e\x05\xa1\xb9\xe6\x80\x6a\xf3\x15\x5f\x33\xb5\x23\x2b\xd8\xc5\x42\xc3\x00\x14\x8d\x21\x91\x7f\x4b\x3e\x65\x9a\x11\xcc\x79\x7a\xe7\x43\x1a\x24\x1f\xf3\x6b\xb4\x12\x2d\xb4\xaf\x42\xed\x44\x86\x85\x37\x7d\x43\x84\xdc\xb6\xaf\xcb\x11\x16\xfa\xee\xff\x25\x19\x37\x9c\x56\xcc\x59\x81\xfa\xb8\xdd\x4c\xb4\x05\x3a\x4a\x4d\x2c\x61\xaa\xda\x85\xd4\x7c\xce\x1d\xa6\xb9\x14\xcd\xfc\xc6\x5c\x57\x41\x10\xd4\x24\x24\xac\x19\xf7\xf6\xfb\x0f\x8f\x8f\xd7\x35\xbe\xab\x52\x92\x6a\xc1\x04\x7f\x37\x94\x68\x5c\x19\x9a\x31\xcb\xaa\x08\x6a\x9b\x82\x5c\xe4\x14\x09\xca\x07\x65\x20\xd9\x01\xee\xae\xb3\xdc\xbc\xbb\xea\x76\x93\x8d\x9a\x23\xf8\x20\x5c\x2e\x16\x91\x5f\x45\xc0\x1c\xa3\x31\xe0\x0b\x01\x2a\x3d\x09\x86\x38\x44\x3c\xfe\x92\x72\xd7\xe4\xd7\xae\x16\x14\xa7\x70\x94\xf3\x35\x0e\x4a\xb0\x82\xad\x81\x44\xc1\x99\x1d\x2f\x89\xd6\x12\x3e\xab\xcb\xa7\x9d\xb9\x99\xdb\xf4\x1b\x5d\xb2\x60\x59\xc3\x57\xbf\x51\x10\x1b\xf0\xa4\x9f\xf0\x2d\x39\x36\x75\x19\xad\xa9\x0e\x71\x52\x7c\xa4\x72\x9c\x52\x0b\x12\x9d\x32\x54\x4e\xd3\x4c\x54\xe0\xc8\x0d\xa8\x1d\x55\xf0\x2d\x84\xe0\xe4\x98\x2f\x74\x4e\xe6\x38\x32\x14\x66\xfd\x48\x9e\x52\x2d\x57\x20\x6a\x50\x8e\x74\xf1\x23\xa4\xbd\x41\xe8\x46\xc6\x88\xe4\xd0\x60\x29\xb7\xc7\x1a\xe1\x59\xd5\xdc\x54\xd7\xac\x40\x9a\xd0\xae\x56\xa0\xbd\x8d\x33\xb3\x55\x41\xa1\xef\x49\xe6\x1e\x55\x5d\xf5\xa0\x9e\xb3\x66\x01\x7f\xc4\xe2\x1b\x50\x7c\xce\xc1\x25\x33\x29\x3d\x60\x62\x7f\xc8\x39\xf3\x02\x28\x07\xbf\xf6\xe9\xc1\x6e\x39\x8b\xda\x8a\x48\xcb\x0a\xca\x98\x26\x98\xf3\x4a\x6c\x51\x0d\x9e\x5d\xbe\xe2\x52\x45\x75\xab\x10\xa1\xcd\xa7\xb6\x2a\xed\xc8\xc3\x97\x69\x56\xd5\x7d\xd3\x6e\x4d\x5d\xa9\x8e\x45\x07\xfb\x6c\x29\xda\x8a\xb5\x27\x3d\xeb\x5d\xb9\x77\xf3\x35\xd7\x54\xc1\x86\xc3\xb6\xe1\x27\xae\x74\xc2\x35\x08\x5d\x63\xc6\xf3\xb3\xe9\x63\x43\x10\x26\xc2\x05\x0f\x9a\xd6\xce\xfd\xd1\xe8\x06\x54\x10\xf5\xe3\xa4\xed\x55\x6d\x51\x0d\x90\xf3\xa6\x86\xac\x14\x74\xb0\x28\x28\xd5\x94\x0a\x26\x60\x9e\xae\xdb\x5f\xb9\x73\xea\x33\xc5\xd6\x01\xd6\xc4\x56\xb0\x73\x96\x8c\x8b\x38\x99\xcd\xc8\x98\x2b\x06\x4e\xd2\xdf\x0a\x95\x23\x2a\x59\x85\xd6\x5d\x1e\x4c\xce\x28\x27\x8d\x1a\x87\x13\x2a\x65\xca\x7e\x13\x70\x54\x63\x1a\x4d\x25\x11\xb0\x6a\x05\x04\x54\x30\x74\xa5\xa9\xf6\x86\x13\x6b\x9c\xc4\xc1\xc8\x1e\xbe\x56\xaf\xa4\x46\x50\xaf\xdf\x27\x4f\x23\xfb\x65\x32\xee\x0d\xec\x49\x15\x44\x73\x97\x4f\x43\x7c\x6a\x0f\xfe\x9c\x5a\xa4\x9d\x5b\x47\xd5\xe5\xe6\x79\x4c\x51\x6e\x9b\x26\xa3\x3c\x0d\x05\xff\x16\xc2\x5e\x43\xb2\x8c\x4a\x2f\xcc\xeb\x98\xfc\x02\x20\x1d\x73\x4d\x01\x2b\xab\x49\xf6\x6e\xcc\x5c\x8e\x2a\xab\x8c\x24\x98\xc2\x0a\x28\x6b\xae\x05\xbb\xed\x57\x51\x55\x7a\xce\x30\xe1\x91\xbb\x4d\xd0\x97\xc9\x9b\x45\x54\x92\x69\x0e\x98\xac\x58\xc2\x7e\xf2\x2f\x99\xe1\x44\x59\xd1\x46\xc2\x89\xc6\x2d\x24\x95\x67\xfe\xa1\xd2\x92\xaa\x84\xc9\x4b\xb6\x9a\x98\x2e\x29\x74\x03\xbb\x6f\xfd\x95\xf0\x98\xed\x12\x0e\x23\x3b\xe9\x8d\xd3\x97\x81\xfd\x95\xcc\xb4\x02\xa8\x63\x74\x66\x6a\x64\x2c\xe7\x11\xcd\xe7\xd1\xd8\x1a\x7c\xb5\xcd\x43\x42\x8e\x2b\x19\x5b\xcf\xd6\xd8\xb2\x9f\xac\x97\xf4\x7c\xed\x68\x79\x64\x93\xbe\x35\xb4\x26\x16\x79\xea\xbd\x3c\xf5\xfa\xd6\xa1\x2c\x4a\x9f\x13\x0e\xa5\x51\xba\xbf\xcf\xa3\x2a\x9b\x34\x95\xf2\x5c\x8c\x85\x4e\x63\x72\x62\x3e\x5f\x84\x07\x76\x2d\xc6\x08\x61\x38\x8a\xdd\x7d\x11\x9a\x18\x0c\xe1\xbc\xdf\xb9\x3c\xf1\xef\x10\x6a\x35\x97\x75\x8c\x66\x0d\x9c\xe2\xb7\x7a\x84\x3a\x0e\x2c\x9c\x03\xbb\x4f\x37\x3f\xd4\x87\x4b\xf7\xc5\xcc\x5d\x53\xe9\x93\x7b\x04\xa2\x3b\xd9\x29\x68\xce\x5f\x5e\x4e\x52\xbf\xff\xea\x08\x8f\x4b\x98\x23\xff\x78\xde\x97\x5b\xd1\x6a\xb9\x4a\xfa\x44\xb3\x99\x07\xc8\xe3\x79\xf6\xfb\x92\x07\x66\xef\xba\xd5\x5f\x01\x58\x78\x95\x3d\x06\x4c\x5f\x21\x6b\x81\xc5\x07\xc3\x1a\x20\xfa\x8c\x87\x01\xeb\x1e\xcb\x8e\x01\x71\x89\xd5\xa7\x94\x03\x1c\xa3\x1b\xfb\xa1\x5f\x19\x98\x5d\x94\xeb\x80\x71\xfb\x6d\x20\xb1\x64\x91\x22\xf0\xbf\x00\x00\x00\xff\xff\x10\x92\x58\xab\x63\x19\x00\x00")

func migrations001_squashedSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations001_squashedSql,
		"migrations/001_squashed.sql",
	)
}

func migrations001_squashedSql() (*asset, error) {
	bytes, err := migrations001_squashedSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/001_squashed.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations003_email_tokensSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x91\xc1\x6e\xf2\x30\x10\x84\xef\x7e\x8a\x39\x12\xfd\x3f\x97\xaa\xe5\xc2\xb5\xaf\xd0\xb3\xb5\xc4\x1b\x58\xb1\xb1\xd3\xf5\x06\x44\x9f\xbe\x0a\xa1\x88\xa8\xdc\x7a\x4a\xb4\x3b\x1e\x7f\xe3\x59\xaf\xf1\xaf\x97\xbd\x91\x33\x3e\x86\x10\x5a\xe3\xe9\xd7\x69\xa7\x0c\xee\x49\x34\x7a\x39\x72\xae\x58\x05\x40\x12\x76\xb2\xaf\x6c\x42\x8a\xc1\xa4\x27\xbb\xe0\xc8\x97\xff\x01\x38\x93\x2a\x7b\x94\x84\x13\x59\x7b\x20\x5b\xbd\xbc\x6d\x1a\xe4\xe2\xc8\xa3\xea\x24\xb9\x3a\xdd\xd7\x9b\xd7\x66\x1a\x2a\x55\x8f\x95\xb3\x47\x72\xb8\xf4\x5c\x9d\xfa\x01\x67\xf1\x43\x19\xe7\x09\xbe\x4a\xe6\x49\xdb\x96\xdc\x89\xf5\x9c\xb0\x2b\x45\x91\xb8\xa3\x51\x1d\x1d\x69\xe5\xd0\x6c\x03\xa9\xb3\x3d\x83\xa7\x94\xa6\xc3\xd5\x8d\x24\xfb\x62\x17\x67\xf0\x1a\xbb\x23\x5f\xd0\x15\x63\xd9\xe7\x29\x14\x56\xf7\x48\x0d\x8c\x3b\x36\xce\x2d\xd7\x5b\xd0\xfa\xb8\x2d\x19\x89\x95\x9d\xd1\x52\x6d\x29\xf1\x9f\x50\xa2\xa4\x38\x66\xf9\x1c\x19\xf3\xe7\xe1\xaa\xa5\xf1\x0d\x05\xc9\xca\x80\xb6\xe8\xd8\x67\x9c\xd8\xa4\x13\x4e\xdb\x10\x1e\xcb\x7d\x2f\xe7\x1c\xc2\x55\xf8\x1b\xea\xb9\xeb\x4c\xba\x30\x9d\xdf\xfd\xa7\xd3\x65\x01\xdb\xf0\x1d\x00\x00\xff\xff\xf0\x49\xb2\xd1\x4d\x02\x00\x00")

func migrations003_email_tokensSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations003_email_tokensSql,
		"migrations/003_email_tokens.sql",
	)
}

func migrations003_email_tokensSql() (*asset, error) {
	bytes, err := migrations003_email_tokensSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/003_email_tokens.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations004_wallets_refactorSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x4f\x6f\xdb\x30\x0c\xc5\xef\xfa\x14\xef\x56\x1b\x53\x81\xb5\x58\x8a\x0d\xbe\xee\x2b\xec\x1c\xb0\x16\x9d\x12\xd6\x1f\x83\x62\xd2\xe5\xdb\x0f\x4a\x9c\xad\x45\x83\x35\x37\x9b\x7a\xef\x89\xfc\x89\xf7\xf7\xf8\x92\x64\xa7\x64\x8c\x5f\x8b\x73\xa3\x72\xfb\x34\x7a\x8e\x8c\x39\x4c\xe8\x1c\x20\x01\x92\x0d\x8b\x4a\x22\x3d\x62\xe6\xa3\x77\x00\xc5\x5d\x51\xb1\x97\x84\x03\xe9\xf8\x42\xda\x3d\x6e\x36\x3d\x72\x31\xe4\x7d\x8c\x4d\xf2\x2c\x56\x9b\x95\x77\xac\xef\x0e\x32\x02\x8f\x92\x28\xbe\xab\xea\x55\xed\xf2\xa1\xea\xfa\xc1\x49\xae\xac\xd6\x8e\xca\xb9\x4f\x09\xfe\x5f\x4b\xfe\x74\xb5\x47\xf6\x50\x8f\xa5\xc7\x81\xe2\x9e\x2b\xba\x07\x8f\xbb\x3a\xea\x71\xb1\x3b\x8f\xc7\xcd\x93\xc7\xb7\xaf\x3f\x9e\x3c\xbe\x7b\x3c\xf4\x83\x73\x14\x8d\x75\x1d\xff\x95\x62\x64\xab\x50\xce\x94\x18\x63\x89\xfb\x94\xb1\xaf\xac\xa7\x7f\x2b\xe0\x44\x12\x87\xab\xa6\xa0\x65\xb9\x58\xe6\x30\x6d\x17\x52\x4a\xf5\xba\x96\x42\x78\x2b\x5d\x71\x5f\xa6\xfd\x9f\x27\x57\x53\x6a\xe2\xb5\xbc\x6d\xfe\x69\xe6\x23\xa6\xa2\x2c\xbb\xdc\x1e\x0b\xdd\x39\xb5\x87\xf2\xc4\xca\x79\xe4\xda\x2e\xea\x24\xf4\x9f\x37\x7f\x60\x95\x49\x46\x32\x29\x79\x6b\x65\xe6\x3c\x38\xf7\x76\x6d\x7e\x96\xd7\x7c\x0b\xb8\x13\xac\x46\xed\x42\xf0\x26\x18\x67\x6e\x30\xfe\x6d\xb7\x81\x96\xf0\x69\xee\xc7\x91\xd6\xfc\x53\xd6\xdf\xdd\x1f\xdc\x9f\x00\x00\x00\xff\xff\xcb\xf6\x05\x04\x1e\x03\x00\x00")

func migrations004_wallets_refactorSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations004_wallets_refactorSql,
		"migrations/004_wallets_refactor.sql",
	)
}

func migrations004_wallets_refactorSql() (*asset, error) {
	bytes, err := migrations004_wallets_refactorSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/004_wallets_refactor.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations005_tfa_backends_refactorSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x92\xc1\x4e\xc3\x30\x10\x44\xef\xfe\x8a\x3d\x36\x42\xbd\x20\x95\x4b\xaf\xfc\x02\xe7\x68\x63\x4f\x82\x15\x77\x1d\xad\x37\x54\xfd\x7b\x54\x1a\x45\x46\x20\x08\x17\xd4\x63\x76\x46\x3b\x99\xb7\xde\xef\xe9\xe1\x14\x07\x65\x03\xbd\x4c\xce\x99\xce\xe2\xaf\x1f\xc6\x5d\x02\x59\xcf\x6d\xc7\x7e\x84\x84\x42\x9e\x8b\xe7\x80\xa3\xe3\x64\xd0\xef\x1c\x41\xf3\x44\x3e\xa7\xf9\x24\x74\xe6\x94\x60\x6d\x0c\x3f\xf8\x39\x84\x2f\x76\x7a\x63\xf5\xaf\xac\xbb\xc7\xc3\x53\x43\x92\x8d\x64\x4e\xe9\xd7\x25\x52\x4c\x39\x8a\x7d\xd2\xda\xdb\xd6\xd2\xf6\x23\x8c\xfa\xac\x88\x83\xd0\x88\x0b\xed\xd6\xbc\x86\x14\x3d\x14\xe2\x51\x96\xbf\x28\xb5\x9a\x85\x02\x12\x0c\x1b\xfa\xdf\x84\xa5\xd1\xa4\x31\x6b\xb4\x0b\x15\xd8\x96\x1e\x35\xbc\x65\xb8\x0d\xdd\x32\xab\xc0\x1d\x9a\xa3\x73\xf5\x69\x9f\xf3\x59\xee\xe2\xb8\x5d\x1c\xa2\xd8\x9f\x11\x7e\x64\xff\x07\xc3\xeb\x0b\x5a\x73\xde\x03\x00\x00\xff\xff\x67\xa6\x62\x13\x1d\x03\x00\x00")

func migrations005_tfa_backends_refactorSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations005_tfa_backends_refactorSql,
		"migrations/005_tfa_backends_refactor.sql",
	)
}

func migrations005_tfa_backends_refactorSql() (*asset, error) {
	bytes, err := migrations005_tfa_backends_refactorSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/005_tfa_backends_refactor.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations006_totp_constraintSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8d\x3d\x8e\xc2\x40\x0c\x46\x7b\x9f\xc2\x5d\x12\xed\xe6\x04\x11\x1d\x57\xa0\x1e\x99\x19\x03\x16\xc1\x1e\x1c\x47\xc3\xf1\x51\xa4\x14\xd0\xd1\x7d\x3f\xd2\x7b\xe3\x88\x7f\x0f\xb9\x3a\x05\xe3\xa9\x02\x64\xe7\x2d\xae\x2a\xcf\x95\x51\xb4\xf0\x0b\xe3\x42\xe9\x4c\xf9\xce\x5a\x96\x14\x16\x35\x65\xd3\x25\x9c\x44\x03\x4d\xbf\xfe\xbe\xd1\x3c\x73\x24\x29\xff\xb8\x6f\x03\xb6\x1b\x3b\x63\xbf\xf7\x43\xb7\x31\xba\x61\x02\xf8\xb4\x1f\xad\x29\x40\x71\xab\x3f\x68\xa7\x77\x00\x00\x00\xff\xff\x28\x9b\x77\x33\xb8\x00\x00\x00")

func migrations006_totp_constraintSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations006_totp_constraintSql,
		"migrations/006_totp_constraint.sql",
	)
}

func migrations006_totp_constraintSql() (*asset, error) {
	bytes, err := migrations006_totp_constraintSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/006_totp_constraint.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations007_cascade_wallet_id_updateSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x91\x41\x4a\xc0\x30\x10\x45\xf7\x3d\xc5\x2c\x15\xe9\x09\xba\xf5\x0a\xae\xc3\x34\xf3\x53\x42\xd3\x49\x49\x46\x4a\x6f\x2f\x45\xc1\x54\x29\x08\xd6\x8d\xbb\xf0\x7f\xf8\xcc\xe3\xf5\x3d\x3d\x2d\x71\x2a\x6c\xa0\x97\xb5\xeb\x38\x19\x0a\x19\x8f\x09\x84\x85\x63\x72\x96\x67\x68\x25\x29\x79\x25\x9f\xb5\x5a\xe1\xa8\x76\x2a\xdd\xc6\x29\xc1\xaa\x0b\x33\xf6\xe1\x7a\x83\x45\x7e\x34\x41\x21\x17\xc4\x49\xe9\x78\x3f\xbc\x37\x2e\xca\x23\x15\x04\x14\xa8\x47\xa5\x8f\xff\x6d\x9b\x95\x04\x09\x06\xf2\x5c\x3d\x0b\x8e\xe4\x75\x15\xfe\x4c\x86\x33\xa1\x05\x76\x23\xfb\x19\x2a\xdf\x09\xdb\xb2\x3d\xcf\x86\xeb\x8d\x2f\x84\x57\x13\x7f\x4b\xd8\x3a\x7d\xce\x9b\xfe\x33\xab\x77\x38\xdc\x7f\xef\xd0\xee\xe3\x79\x0b\x00\x00\xff\xff\xde\x24\x4e\x77\x85\x03\x00\x00")

func migrations007_cascade_wallet_id_updateSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations007_cascade_wallet_id_updateSql,
		"migrations/007_cascade_wallet_id_update.sql",
	)
}

func migrations007_cascade_wallet_id_updateSql() (*asset, error) {
	bytes, err := migrations007_cascade_wallet_id_updateSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/007_cascade_wallet_id_update.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations008_password_constraintSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8e\xb1\x0e\xc2\x30\x0c\x44\x77\x7f\x85\xb7\xb6\x82\x7e\x41\xc5\xc6\x2f\x30\x47\x26\x31\x10\x51\xec\xe0\xb8\x0a\x9f\x8f\x90\x8a\x04\x5b\xb7\xbb\xd3\xe9\xee\x8d\x23\xee\x1e\xf9\x6a\xe4\x8c\xa7\x02\x10\x8d\x3f\x72\x91\xfc\x5c\x18\xb3\x24\x7e\xa1\x5f\x28\x9c\x29\xde\x59\x52\x0d\x85\x6a\x6d\x6a\x29\x44\x95\xea\x46\x59\x1c\x55\xfe\x3a\x7d\xa3\x79\x66\x0f\x39\xed\x71\xcd\x06\x6c\x37\x36\xc6\x7e\xf5\x87\xee\xbb\xd3\x0d\x13\xc0\x2f\xc5\x51\x9b\x00\x24\xd3\xb2\xf1\x7e\x7a\x07\x00\x00\xff\xff\x1f\x2f\x94\xdd\xc4\x00\x00\x00")

func migrations008_password_constraintSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations008_password_constraintSql,
		"migrations/008_password_constraint.sql",
	)
}

func migrations008_password_constraintSql() (*asset, error) {
	bytes, err := migrations008_password_constraintSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/008_password_constraint.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations009_drop_tfa_keychainSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcf\xc1\xae\x82\x30\x10\x85\xe1\x7d\x9f\x62\x76\xdc\x1b\xc3\xce\xb8\x61\xeb\x2b\xb8\x26\x87\x76\x10\xc2\xd0\x36\x65\x2a\xf2\xf6\xc6\x9d\x9a\x26\x12\xf7\x33\x7f\xbe\x53\xd7\x74\x98\xc7\x6b\x82\x32\x5d\xa2\x31\x10\xe5\x44\x8a\x4e\x98\x56\x88\xb0\x2e\xe4\x52\x88\x64\x83\xe4\xd9\x93\xf6\x68\x63\xee\x64\xb4\xed\xc4\x5b\xb3\xeb\x7e\xe2\xcd\x0e\x18\x7d\xeb\xa0\xd8\xf7\xb2\x40\xb4\x31\xe6\x55\x77\x0e\xab\x2f\xfb\xe0\x5c\x99\x47\x37\x24\x3b\x20\xfd\x9d\x8e\xff\xe4\x83\x92\xcf\x22\xe4\xb8\x47\x16\xa5\xaa\x2a\x5b\x3e\x72\x6f\x7a\x52\xbe\xeb\xcf\xa9\xe7\xaa\xef\xa6\x47\x00\x00\x00\xff\xff\x9a\x2c\xea\xda\x93\x01\x00\x00")

func migrations009_drop_tfa_keychainSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations009_drop_tfa_keychainSql,
		"migrations/009_drop_tfa_keychain.sql",
	)
}

func migrations009_drop_tfa_keychainSql() (*asset, error) {
	bytes, err := migrations009_drop_tfa_keychainSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/009_drop_tfa_keychain.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations010_users_refactoringSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\xb1\x0a\x02\x31\x0c\x86\xf7\x3e\x45\x46\x45\x6e\x13\x17\x57\x5f\xc1\x59\x62\x1a\xf4\x20\x97\x96\x34\x55\x7c\x7b\xb9\x03\x45\xe5\xa0\x88\x8e\x49\xbe\xff\x87\x2f\x5d\x07\xab\xa1\x3f\x19\x3a\xc3\x3e\x87\xe0\x56\x95\xc6\xc1\xf1\x28\x0c\xb5\xb0\x15\x20\x2c\x84\x91\xb7\x01\xc5\xd9\xde\x4e\xd1\x52\x06\x4a\x52\x07\x9d\x36\x07\xbf\xe5\x26\x58\x1c\x7d\x16\xc2\x18\x1f\xcc\xd8\x03\xbd\x3a\x68\x72\xd0\x2a\xd2\xe0\xa7\xce\x8f\x40\x78\xb5\xdb\xa5\xab\xfe\xe6\xf7\x2f\xb5\xe7\x9f\xe0\x82\x46\x67\xb4\xc5\x66\xbd\xfc\xce\x73\x3e\x78\x0f\x00\x00\xff\xff\xd8\xc8\x27\x17\xcd\x01\x00\x00")

func migrations010_users_refactoringSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations010_users_refactoringSql,
		"migrations/010_users_refactoring.sql",
	)
}

func migrations010_users_refactoringSql() (*asset, error) {
	bytes, err := migrations010_users_refactoringSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/010_users_refactoring.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations011_kyc_entitiesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\xd0\x41\x4b\xc3\x40\x10\x05\xe0\xfb\xfc\x8a\x77\x4c\xd0\x1e\xf4\xe0\x25\x78\xd8\x66\x17\xbb\x98\x6e\xea\x98\x45\x7b\x0a\xa1\x59\x64\x50\xb7\x25\xd9\x2a\xfd\xf7\x52\x2f\x36\x0a\xe2\xc5\xe3\x30\x8f\xc7\xcc\x37\x9b\xe1\xec\x55\x9e\x86\x2e\x05\xf8\x1d\x51\xc3\xde\x95\xaa\x31\x78\x3e\x6c\xda\x10\x93\x24\x09\x63\x41\xa4\xaa\xc6\x30\x1a\x35\xaf\xa6\x2b\x02\x34\xd7\x2b\x94\x75\xe5\x97\x0e\xd2\xff\x9e\x55\x5a\x7f\x45\x51\x2e\x14\x67\x97\x57\x39\x56\x6c\x97\x8a\xd7\xb8\x35\xeb\x82\xa8\x64\x73\xbc\xc0\x3b\x7b\xe7\x0d\xac\xd3\xe6\x71\xd2\xd3\x4a\xec\xe5\x4d\xfa\x7d\xf7\xd2\x6e\xb6\x71\x4c\x43\x27\x31\x11\x50\xbb\x49\x0e\xd9\x7e\x0c\x43\x2b\xfd\x39\xd2\x61\x17\x72\x02\x1e\x16\x86\x0d\xb2\xe3\x88\x6b\x5c\xe4\x05\x11\x9d\x12\xe8\xed\x7b\x3c\x41\xf8\xf9\xc3\x7f\x51\xcc\xed\xcd\xbd\x61\xab\xaa\x6f\x16\x9f\x8d\x7f\x25\x28\xe8\x23\x00\x00\xff\xff\xc5\x92\x81\x2a\xcf\x01\x00\x00")

func migrations011_kyc_entitiesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations011_kyc_entitiesSql,
		"migrations/011_kyc_entities.sql",
	)
}

func migrations011_kyc_entitiesSql() (*asset, error) {
	bytes, err := migrations011_kyc_entitiesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/011_kyc_entities.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations012_blobsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x90\x31\x4f\xc3\x30\x10\x85\xf7\xfb\x15\x6f\x4c\x04\x5d\x10\xb0\x74\x32\xf6\x21\x2a\x82\x13\x39\x8e\x44\xa7\x28\x55\x0c\xaa\x28\x4d\x65\xb7\x54\xfd\xf7\xc8\x0e\x28\xe9\x8d\xf7\x3e\x9f\x3f\xbd\xc5\x02\x37\xdf\xdb\x4f\xdf\x1d\x1d\x9a\x03\x91\x34\x2c\x2c\xc3\x8a\xa7\x82\xb1\xd9\x0d\x9b\x80\x8c\x80\x6d\x8f\xd9\xc8\x17\x61\xb2\x87\xbb\x1c\x95\x59\xbd\x09\xb3\xc6\x2b\xaf\x6f\x09\x18\xce\x7b\xe7\xdb\xae\xef\xbd\x0b\x61\xa4\x1e\xef\x73\xe8\xd2\x42\x37\x45\x41\xe9\x6d\xa9\x6b\x6b\xc4\x4a\xdb\xf1\x7c\x7b\x0a\xce\x87\xf6\xe3\xcb\x5d\x52\x6e\xf8\x99\x0d\x6b\xc9\x35\x52\x82\xec\xef\x5e\x9e\xe2\x52\xa3\xa9\x54\x54\x94\xa2\x96\x42\x71\xdc\x28\x2e\x78\xda\x44\x93\xe3\xe5\xe0\x26\xdf\xf8\x59\x9a\x7f\x93\x88\xfc\x74\xbb\xd3\xc4\x58\x7e\xb7\x57\x08\xe5\x4b\xa2\x79\x3b\x6a\x38\xef\x89\x94\x29\xab\x79\x3b\xcb\xdf\x00\x00\x00\xff\xff\x2d\xbd\x1e\x9c\x41\x01\x00\x00")

func migrations012_blobsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations012_blobsSql,
		"migrations/012_blobs.sql",
	)
}

func migrations012_blobsSql() (*asset, error) {
	bytes, err := migrations012_blobsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/012_blobs.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations013_rm_org_walletsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x90\x51\x4b\xc3\x30\x14\x85\xdf\xef\xaf\xb8\x6f\x5b\xd1\xc1\x10\xf1\x61\x7b\xca\xd2\xbb\x19\x8c\x99\xa4\x99\xd0\xa7\x12\x69\x1c\xc5\xda\x96\xb4\x32\xf4\xd7\x4b\xa6\xd5\x8d\x15\x99\xe7\x2d\xb9\xe7\x9e\xfb\x71\x26\x13\xbc\x78\x2d\xb6\xde\x76\x0e\x37\x0d\x40\xee\xeb\x06\x3b\xfb\x54\x3a\xac\xfd\xd6\x56\xc5\x87\xed\x8a\xba\xca\x76\xb6\x2c\x5d\xd7\xce\x01\xe0\x70\x25\xae\x77\x15\x00\xd7\xc4\x0c\xa1\x61\x0b\x49\x83\x6b\x30\x06\xc4\x22\xc7\x53\x2d\xc4\x2a\x21\x2d\x98\x1c\x98\x9d\x48\xad\x0d\xaa\x8d\x94\x10\x1e\x7c\xad\x12\xa3\x99\x50\x66\xf0\x64\xd6\xbc\xb8\xf7\xbd\xf1\x41\x8b\x7b\xa6\x53\xbc\xa3\xf4\x12\x10\xbf\xe6\xd9\x31\xcd\x42\xac\x42\xd0\x79\xfa\x17\xc6\xcf\xb9\xec\xb9\x07\xd2\xb4\x24\x4d\x8a\x53\x82\x7d\x3f\xe1\x7b\xad\x30\x26\x49\x86\x90\xb3\x84\xb3\x98\x02\xed\x51\xa6\xcd\x73\xef\xda\x16\x1f\x99\xe6\xb7\x4c\x8f\x6f\xae\xa3\xb3\x18\x86\x42\x06\x71\xde\x5a\xe7\x5b\x1c\x7f\x5b\xa2\x3f\xb0\x1a\xe7\xf7\x71\x87\xbd\xf4\x58\x57\xd3\x08\x63\x5a\xb2\x8d\x34\x38\x9a\x8e\x70\x36\xc3\xf0\xcf\xb8\x21\x1d\x4c\xa9\x50\xab\xdf\x12\xa3\x39\xc0\x67\x00\x00\x00\xff\xff\xb5\xdc\x1d\xd2\x86\x02\x00\x00")

func migrations013_rm_org_walletsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations013_rm_org_walletsSql,
		"migrations/013_rm_org_wallets.sql",
	)
}

func migrations013_rm_org_walletsSql() (*asset, error) {
	bytes, err := migrations013_rm_org_walletsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/013_rm_org_wallets.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations014_blob_relationshipsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcc\xb1\x11\xc2\x30\x0c\x05\xd0\x5e\x53\xfc\x2e\x05\x97\x09\xd2\xb2\x02\x03\xc8\x58\x80\x39\x45\xf2\x59\xf2\x51\x70\xec\x4e\x9b\x22\x0b\xbc\x75\xc5\x65\x6f\xcf\xc1\x29\xb8\x75\x22\xd6\x94\x81\xe4\xa2\x82\xa2\x5e\x02\x5c\x2b\xee\xae\x73\x37\x0c\x51\xce\xe6\x16\xaf\xd6\x03\xef\x70\x2b\x30\x4f\xd8\x54\x45\x95\x07\x4f\x4d\x2c\xdf\xdf\xb2\x11\x1d\xe1\xab\x7f\xec\x8c\xae\xc3\xfb\xa9\xbd\xd1\x3f\x00\x00\xff\xff\xef\x60\x21\xd4\x98\x00\x00\x00")

func migrations014_blob_relationshipsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations014_blob_relationshipsSql,
		"migrations/014_blob_relationships.sql",
	)
}

func migrations014_blob_relationshipsSql() (*asset, error) {
	bytes, err := migrations014_blob_relationshipsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/014_blob_relationships.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations015_rm_recovery_requestsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcd\x31\xaa\x02\x41\x10\x84\xe1\xbc\x4f\x51\xe1\x7b\xc8\x82\xf9\xa4\x5e\xc1\x58\xda\x9d\x52\x16\x7a\x67\xd6\x9e\x1e\xc5\xdb\x8b\x0a\x62\xb0\xc6\x7f\xf1\xd5\x30\x60\x33\x4f\x67\xd7\x20\xf6\x8b\x88\x5a\xd0\x11\x7a\x34\xa2\x37\x7a\x43\xf6\xba\x60\xac\xd6\xe7\x02\xe7\x58\xaf\xf4\xfb\xa1\x85\x06\x93\xbc\xda\x7b\xfc\x49\xce\x4b\x67\x8b\x96\x44\xbe\xf1\x5d\xbd\x95\x35\x5e\x73\x5e\xd7\x31\x95\x40\xa9\x81\xd2\xcd\x90\x79\xd2\x6e\x81\x6d\x92\xd1\xf9\xcc\x3f\x6e\xf1\xf7\x9f\xe4\x11\x00\x00\xff\xff\x1c\xdb\xaf\x59\xd6\x00\x00\x00")

func migrations015_rm_recovery_requestsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations015_rm_recovery_requestsSql,
		"migrations/015_rm_recovery_requests.sql",
	)
}

func migrations015_rm_recovery_requestsSql() (*asset, error) {
	bytes, err := migrations015_rm_recovery_requestsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/015_rm_recovery_requests.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations016_recoveriesSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x92\x41\x6e\xab\x30\x10\x86\xf7\x3e\xc5\x2c\xf3\xf4\x9a\x13\xb0\xa2\x30\x95\x90\x90\x51\xc1\x48\xd9\x59\x2e\x9e\xb6\x56\x88\x49\x6d\xa7\x69\x6e\x5f\x41\x80\xd2\x12\xa9\x65\xc9\x7c\xff\x7c\x9e\xb1\xb7\x5b\xf8\x7f\x30\x2f\x4e\x05\x82\xfa\xc8\x58\x52\x62\x2c\x10\x6a\x9e\x3d\xd6\x08\x19\x4f\x71\x07\x67\xd5\xb6\x14\xbc\xa4\x83\x32\xad\x3c\x59\xf3\x76\x22\xd9\x74\xd6\x07\xa7\x8c\x0d\x50\xf0\x09\xd9\x0c\xc8\xbf\x68\xee\x23\xe2\xfb\x1c\xc1\x51\xd3\xbd\x93\x33\xe4\xd9\x86\xc1\x08\xc3\xf8\x09\xdc\x09\xe0\x85\x00\x5e\xe7\x39\xeb\xff\x24\x05\xaf\x44\x19\x67\x5c\x2c\x92\x72\x3a\xc5\xf3\x9e\x2e\x03\x56\xe2\x03\x96\xc8\x13\xac\x26\x3d\x8c\xfe\xa1\x5c\x70\x48\x31\x47\x81\x90\xc4\x55\x12\xa7\x78\xc7\x00\xbc\x6a\x67\xf1\x0f\x75\x5f\xde\xd3\xa5\x79\x55\xc6\x4a\xad\x82\x5a\x97\xaf\x1a\x69\xf4\xed\xb4\xd2\xda\x91\xf7\x37\xe7\x5a\xec\xe4\xdb\x6e\x57\x03\x4a\xa3\xd7\x2b\x66\xc3\x38\x5f\x2c\x6c\x66\xb8\x6f\xcc\x96\xb7\x98\x76\x67\xcb\x98\x76\xdd\x11\x8c\xd5\xf4\xf1\x47\x45\x74\x8d\x04\xf5\xd4\xd2\x22\x12\x2d\x3b\xfd\xf2\x10\xa2\xcf\x00\x00\x00\xff\xff\x97\x9b\x2d\x0b\x4d\x02\x00\x00")

func migrations016_recoveriesSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations016_recoveriesSql,
		"migrations/016_recoveries.sql",
	)
}

func migrations016_recoveriesSql() (*asset, error) {
	bytes, err := migrations016_recoveriesSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/016_recoveries.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations017_rm_pending_transactionsSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x52\xc1\x8e\xda\x30\x14\xbc\xfb\x2b\xde\x0d\x50\xcb\xad\xea\x01\x4e\x26\x79\xd0\xa8\x21\x41\x8e\xa9\xca\xc9\x72\x13\x17\x2c\xc0\xb1\x12\xd3\x36\x7f\x5f\x39\xbb\x61\xa3\x25\x80\xf6\x1d\xf3\x66\xe6\xc5\x33\x33\x9d\xc2\xa7\xb3\xde\x57\xd2\x29\xd8\x5a\x42\x42\x96\x6e\x80\xd3\x45\x8c\x60\x95\x29\xb4\xd9\x0b\x57\x49\x53\xcb\xdc\xe9\xd2\x88\x5a\xef\x8d\xaa\xea\xf9\x13\x5c\x3d\x27\xa4\xaf\x1c\x96\x7f\x0d\x21\x01\x43\xca\xf1\x01\x8b\x8c\x09\x80\x2e\xa0\x3f\x8b\x68\x95\x21\x8b\x68\x0c\x00\x49\xca\x21\xd9\xc6\x31\xf1\x8b\x20\x4d\x32\xce\x68\x94\xf0\x41\x2d\x61\x8f\xaa\x69\x81\x1b\x16\xad\x29\xdb\xc1\x77\xdc\x7d\x26\x00\xee\x9f\x38\xc8\xfa\xd0\xe9\xff\xa0\x2c\xf8\x46\xd9\xf8\xeb\x97\xc9\x55\xff\x15\xa6\xcc\x1f\x75\x2a\xad\xf2\x30\x8e\x3f\x79\x47\xe9\xc3\x4a\xab\x2a\xd9\x5a\xe3\x1a\xab\x20\x4a\x38\xae\x90\xdd\xc0\x6a\xe7\x6d\xb8\xce\x3d\x58\x5e\x29\xe9\x54\x21\xa4\x6b\x57\x3c\x5a\x63\xc6\xe9\x7a\xe3\x77\x17\x5b\xdc\xdd\xd5\xe5\xa5\xca\xdf\xf4\x87\xde\x44\x26\x73\xf2\x3c\x82\x2e\xe0\x36\x89\xa1\xbd\x2e\x7c\x22\xde\xf4\x9b\xf9\x40\x3a\xdd\x19\x31\x7c\x42\xfc\xee\xb2\x63\xb8\x44\x86\x49\x80\xd9\x70\x61\x3c\x26\x4d\x20\xc4\x18\x39\x42\x40\xb3\x80\x86\xd8\x3a\xd2\x1e\x10\xba\x50\xc6\x69\xd7\xf4\xda\xf4\xf0\xdf\x7b\x54\x7b\xf9\x75\xd2\xb9\x38\xaa\xe6\xd6\xd4\x27\x54\x23\xcf\xaa\x0f\x69\xcb\x13\xe2\x92\x6e\x63\x0e\xa3\x11\xcc\x66\x2f\x9f\xfa\xd4\x77\xb5\x1f\x6a\xca\xa0\xd9\x3e\xd6\xff\x01\x00\x00\xff\xff\x33\x7c\xb9\x5b\xc5\x03\x00\x00")

func migrations017_rm_pending_transactionsSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations017_rm_pending_transactionsSql,
		"migrations/017_rm_pending_transactions.sql",
	)
}

func migrations017_rm_pending_transactionsSql() (*asset, error) {
	bytes, err := migrations017_rm_pending_transactionsSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/017_rm_pending_transactions.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _migrations018_user_kycSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\x31\x0e\xc2\x30\x10\x44\xd1\xde\xa7\x98\x2e\x05\x8a\x44\x9f\x96\x2b\x50\x47\xc6\x1e\x50\x60\xb3\x0e\xeb\xb5\x80\xdb\xd3\x06\xc9\xa2\xff\xfa\x7a\xe3\x88\xc3\xba\xdc\x2c\x3a\x71\xde\x42\x88\xe2\x34\x78\xbc\x08\xd1\x2a\xad\x22\xe6\x8c\x54\xa4\xad\x8a\xc7\x27\xcd\x95\xcf\x46\x4d\xc4\xa2\x0e\x2d\x0e\x6d\x22\xc8\xbc\xc6\x26\x8e\xe3\xf4\xff\x60\xbc\x33\xf9\x6c\x8c\xb5\x28\x9c\xef\xce\x63\x18\xa6\x10\xf6\xae\x53\x79\x69\x4f\x96\xad\x6c\x3d\x5a\xcf\xb0\x6f\x7f\x10\x53\xf8\x06\x00\x00\xff\xff\xb2\x19\xdc\xf2\x03\x01\x00\x00")

func migrations018_user_kycSqlBytes() ([]byte, error) {
	return bindataRead(
		_migrations018_user_kycSql,
		"migrations/018_user_kyc.sql",
	)
}

func migrations018_user_kycSql() (*asset, error) {
	bytes, err := migrations018_user_kycSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "migrations/018_user_kyc.sql", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesEmail_confirmHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x7d\x8f\xdb\xb6\x19\xff\xff\x3e\x05\xa3\xa0\xed\x06\x54\x96\xec\xcb\x5d\x72\x92\x6c\xac\xbb\x14\xdb\x80\x74\x0d\x9a\xeb\xba\x62\xd8\x1f\xb4\x48\x5b\xec\x51\xa4\x46\x52\x7e\x69\x90\x0f\xb4\xaf\xb1\x4f\x36\x90\x94\x6c\xc9\xb2\x7d\x7e\xd1\x25\x97\x40\x36\x90\x48\x22\xf9\xf0\x79\xf9\xf1\xc7\x87\xa4\x7c\xd1\xb3\xd7\x3f\xde\xde\xfd\xfa\xf6\x7b\x90\xa8\x94\x82\xb7\x3f\xff\xf9\xcd\xdf\x6e\x81\xe3\x7a\xde\x2f\x97\xb7\x9e\xf7\xfa\xee\x35\xf8\xe7\x5f\xef\x7e\x78\x03\xfa\x3d\x1f\xdc\x09\xc8\x24\x51\x84\x33\x48\x3d\xef\xfb\xbf\x3b\xc0\x49\x94\xca\x02\xcf\x9b\xcf\xe7\xbd\xf9\x65\x8f\x8b\xa9\x77\xf7\x93\xb7\xd0\xb2\xfa\xba\x71\x71\xe9\xaa\x4a\xcb\x1e\x52\xc8\x19\x5d\x44\xa6\xc3\x45\x4a\x99\x1c\x6e\x11\xd3\xbf\xb9\xb9\xb1\xad\x1d\x40\x21\x9b\x0e\x1d\xcc\x1c\x5d\x3d\x58\xdf\x49\xb5\xa4\x78\xe8\x8c\x61\x7c\x3f\x15\x3c\x67\x28\x78\x3e\xb9\xd4\xdf\x67\x24\xcd\xb8\x50\x90\x29\x67\x74\x71\x11\x25\x18\xa2\xd1\x05\x00\x00\x44\x29\x56\x10\xe8\xde\x5c\xfc\x9f\x9c\xcc\x86\xce\x2d\x67\x0a\x33\xe5\xde\x2d\x33\xec\x80\xd8\xde\x0d\x1d\x85\x17\xca\xd3\xbd\x87\x20\x4e\xa0\x90\x58\x0d\x73\x35\x71\x5f\x39\x55\x39\x0c\xa6\x78\xe8\xcc\x08\x9e\xeb\xde\x2a\xad\xe7\x04\xa9\x64\x88\xf0\x8c\xc4\xd8\x35\x37\x65\x3b\x45\x14\xc5\xa3\x77\x73\x28\x52\xf0\x0f\x2c\xc8\x84\xc4\x50\xbb\x25\xf2\x6c\x89\xad\x65\x0c\xb3\xd7\xfa\xf3\xa7\x14\x23\x02\x01\x67\x74\x09\x64\x2c\x30\x66\xe0\xfd\xaa\x50\x7f\x8c\x2b\xeb\x8f\xf4\x27\x25\xcc\x4d\x30\x99\x26\x2a\x00\x7d\xdf\xff\x2a\x6c\xd4\xa8\xb8\x0e\x14\xbe\xab\xd5\xf9\x70\xd1\xbc\xda\xa7\x16\x64\x08\xfc\x21\x85\x0b\x6b\x74\x70\x75\x73\x9d\x2d\xfe\xb8\xa1\x99\x82\x63\x8a\x7b\x63\x8e\x96\x80\xa4\xd3\x2d\x6a\xdb\xb6\x00\xe6\x8a\x37\x35\x2e\xed\xd1\xa5\x3b\x54\xdd\xe8\x24\xc6\x4c\x61\xb1\xc3\x3d\x45\x5f\xfe\x1a\x31\x87\x09\xed\xe9\x58\x43\xc2\xb6\x0a\x2e\x84\xde\x5c\x7d\x75\x82\x58\x9a\xa7\x4c\x6e\x11\x5a\x35\x7c\x2d\xb6\xe9\x20\x37\xe5\xbf\xbb\x63\xbe\x70\x25\xf9\x9d\xb0\x69\x00\xc6\x5c\x20\x2c\xf4\xa3\x2d\x95\xe7\x78\x7c\x4f\xd4\xc1\xf5\x0f\xad\x97\x41\x84\x08\x9b\xba\x14\x4f\x34\xf6\xae\xb3\xc5\x3e\x95\xcb\xda\xa2\x80\x6a\xad\xfa\x91\x8e\xdb\xe3\xc1\xba\x52\xfe\x11\x1a\x1d\x08\x8f\xa4\x27\x53\x48\xa9\x7b\xbd\xa5\x73\x44\x64\x46\xe1\x32\x00\x84\x51\xc2\xb0\x3b\xa6\x3c\xbe\xdf\xa7\x42\x01\xa2\x2b\xff\x40\x10\x95\x9d\xf7\x07\x2d\xf6\xae\x59\xe3\xa0\xee\x57\x6e\x3f\x50\x8f\xd6\x15\xb0\x58\x48\x31\xcb\x77\x0f\xc8\x53\x84\x29\xf4\xed\xce\xa2\x64\x3f\x79\xed\x33\xef\x81\x80\x1c\xa4\x5b\x6f\x86\x85\x22\x31\xa4\x7b\x94\xac\xd4\xd9\xa6\xed\xae\x78\x1c\xd4\xff\xbf\x20\x25\x53\x36\xb4\xfc\xfa\xef\x43\x7d\xb1\x77\x7e\x89\xbc\x62\xea\x8b\x3c\x3b\x69\x5f\x44\x66\x78\x17\x33\xfd\x26\xb7\x55\x28\xc8\x4d\xa5\xab\x27\x6d\x5d\x84\x5d\x88\x7e\xcb\xa5\x0a\xcc\xa4\xb7\x85\xe3\xaa\xed\x8a\xd2\xed\x6d\x7f\x80\x62\x4a\x58\xe0\x87\xfb\x72\x8c\x70\xbb\xe4\x98\x53\x2e\x82\xe7\x3e\xd4\xdf\x70\xc2\x99\x72\x27\x30\x25\x74\x19\x7c\xf3\x8e\xe7\x22\xc6\xe0\x1d\x64\x12\xbc\x15\xfc\x9b\x6f\x25\x64\xd2\x95\x3a\x1f\xb0\x15\xb5\x22\x81\xe6\x41\x7b\x3b\xb7\xdc\xff\xc2\xf7\x43\x83\x96\x62\x2e\xe8\xf7\x2e\xc3\xb4\xd4\x70\x3d\x9b\x19\xcd\x0b\x06\x0b\xfc\xd0\x58\x66\x42\x15\x68\xe6\x0b\xd7\x95\xaa\x69\x52\x24\x33\xc8\x40\x4c\xa1\x94\x43\x27\x13\x58\xbb\x1f\x8b\x55\x8e\x55\x18\x63\x4d\x0f\x4b\xd8\x30\xce\x70\xc5\x0f\x15\xd5\xb3\x45\x5d\xd3\x6c\x11\xea\xb4\xa0\xb8\xf5\xc3\x75\x8e\xe0\x87\xa9\xe4\x6e\x42\x10\x0e\x20\xa5\x15\x69\x3c\x83\x31\x51\xcb\xc0\x0f\xf9\x0c\x8b\x09\xe5\xf3\x20\x21\x08\x61\x16\xce\x88\x24\x63\x42\x75\xa1\x7d\xe2\x8c\x22\x4f\xeb\x5f\x26\x59\x1a\xa2\xa5\x2d\x1a\x3f\x2b\x33\x0e\x8d\xa7\x09\x62\xcc\x29\x85\x99\xc4\x41\x79\x51\x16\x48\xad\x99\xf1\xed\xe3\xc4\xb8\x74\x9a\x8e\xe3\xce\x78\xef\x0e\x70\x39\xe4\x8b\x67\x8a\x67\x95\x98\x3b\xeb\xb4\x32\x52\xa2\xf4\xcb\x31\xc2\x2a\x12\xac\x14\x54\xba\xda\x32\x81\x03\x2c\x2f\xac\x6e\x67\xc5\xbd\x6e\x5b\x1b\xc9\xc9\x32\x4b\x30\x93\x81\xc9\xf4\xca\x81\x58\x7b\xb8\x8e\xd7\x8e\x90\x54\xa2\xf6\x48\xb1\xa8\xaa\xd3\x52\x30\xb8\x40\xee\x5c\xc0\x2c\x18\x0b\x0c\xef\x5d\x7d\xbf\xe1\x54\xe3\xd8\x22\x71\x45\x50\x41\x37\xd3\x6b\x10\x34\x74\x56\x0e\x5c\x0f\xf7\xab\x57\x7e\xb6\xd8\x1e\xe1\x7a\x9c\xcc\xa8\xd8\x88\x4d\x19\xb9\x55\x36\x3b\xa1\x1c\x2a\xb7\x2c\xde\x18\x36\x36\x27\xaf\x8d\x1d\xac\xbf\x47\x8c\x18\x23\xdf\x10\xc7\xca\x7b\x56\xea\x56\x17\x5a\x3d\x76\x23\xda\xd8\xbe\xc3\x60\x6b\xb4\x1e\xfe\xbb\xcb\xdb\x1b\x06\xdb\x25\xa3\x0e\xef\x07\xe3\x7d\x0f\x68\x0b\x94\x0a\x3e\x07\x1b\xf3\xd2\x59\x58\x2c\xa7\x31\xd3\x49\xc5\xa6\x8c\xdb\xbd\x8a\x40\x60\x0a\x15\x99\xe1\x93\x29\xf6\x61\xfb\x1e\xc6\x67\xb3\xcd\x63\xe1\xb5\xd9\x53\x52\xba\xbe\x5c\xd8\x50\x28\xa6\xd8\xbd\x06\x65\xba\x3f\x21\x42\x2a\x40\xa1\x54\x3b\xc8\xe2\xe3\x66\x41\x9b\x54\x52\xae\xe3\xc6\x5c\x29\x9e\x56\x1e\x98\x35\xa0\x11\x5d\x5f\xea\x99\x47\xdb\x33\xa6\xc1\xcb\x17\x7b\xb9\x66\xbf\x27\x0d\x8e\x4b\xd0\x1e\x8c\xd0\xf3\x27\xf9\xe3\x35\xfd\x58\xe8\xaa\xf7\x9a\x34\x52\xb4\x8f\x9c\x3f\xef\xb4\xf6\x4c\xd3\x40\x83\xc6\x74\x78\xab\x14\xf6\x84\xd1\x50\x37\xe2\x78\xae\xda\x2f\xef\x53\x20\xad\xa9\x05\x2a\xb6\xd6\x86\x4e\x5f\x27\x13\x4f\x7a\xc6\xf6\x8f\x9a\xb1\x7d\xb3\xea\x2a\xd7\x87\x92\xbb\x95\x52\x57\xe4\x14\x07\x78\x01\x63\x45\x97\x6d\xcc\xe7\x5f\x3f\x5f\x7c\xe7\x87\x91\xa7\x50\x8b\x10\xf1\x94\x68\x09\xbc\x5e\x4b\xe8\x8d\x3c\x33\x96\x47\x11\x49\xa7\x2b\xe0\x5c\x59\xe0\x88\x78\x75\x92\x21\x15\x9c\x12\x36\xed\xc1\x8c\xf4\x64\xce\x7a\x72\x0e\x45\xda\x9b\xe4\x0c\x79\x94\x4f\xb9\x67\xef\x33\x36\xad\xe0\x4d\xba\x44\x67\xbb\x19\xa7\xe6\x48\xc0\x4d\x39\xc2\xc1\x98\xc4\xf9\x98\xc4\x61\x4c\x31\x14\xc1\x98\xab\x64\x95\xb6\x98\x3d\x9b\xca\x4a\xda\xac\x17\x79\xae\x74\x94\xcb\x48\x22\x1c\x73\x61\xc4\xd9\x9c\xdb\xd6\xd4\x50\xe9\x68\xad\x34\xe2\x4b\xa7\xb5\xcb\xa7\x4e\x6b\x97\x47\xd1\xda\x65\x47\x6b\x55\x49\xed\xd2\xda\x79\x59\x9c\xa7\x92\x33\x32\xcf\x93\xbd\x72\xb2\xf2\xc7\x2b\x7c\x9c\x92\x47\x85\xe7\x28\x2b\x1a\x0b\xe3\x13\x78\xb7\x5b\xfe\x3e\xd4\xd3\xc6\xf2\xb7\x3f\x28\xd6\xbf\xfd\xc1\x67\xba\x00\xae\xad\x78\x4f\x58\x03\x5f\x5d\x77\x6b\xe0\x6e\x0d\x7c\xa2\x79\x5d\xb2\xb8\x45\xde\x53\x4b\x16\x35\x60\x9e\x74\xb2\x78\xe4\xae\xf5\x75\x97\x2c\x56\x24\x3d\xa1\x64\xd1\x08\x4a\x06\x0d\xca\xb3\x17\xab\x09\x4b\x27\xfb\x05\x66\x2e\x27\x2f\x06\x2f\x5e\xd4\x30\xf3\x13\xa4\x78\x0e\x97\x07\x2e\x2b\x2e\xf7\x9e\x9f\x37\xfb\xdd\x73\x86\xbe\x0a\x3f\xe3\x22\x85\xd4\x19\xfd\x82\x69\xcc\x53\x0c\x14\x07\xe6\xed\xbe\x67\x91\x97\x0c\x3a\xd6\x2c\x8c\xe8\x58\xb3\x63\xcd\x8e\x35\xdb\x62\xcd\xec\x3c\xd2\x7c\x9c\xd7\x8f\x8e\xa0\x4f\x67\xf4\x2b\xcf\x41\x02\x67\x18\xfc\x96\x4b\x05\x04\x9e\x12\xa9\xb0\xc0\x08\x40\x65\xe9\xb3\x07\x7e\x96\x18\xa8\x84\x48\x30\xce\x95\xe2\x4c\x13\x6b\xcc\xd9\x84\x88\x14\x2c\x79\x2e\x00\x4e\x21\xa1\x00\x22\x24\xb0\x94\xbd\xc8\xcb\x3a\xb2\x2d\x8c\xe8\xc8\xb6\x23\xdb\x8e\x6c\xdb\x22\xdb\xfa\xcb\x84\x96\x8b\x52\x8c\x48\x9e\x02\x01\x11\xc9\x65\x73\xdf\xc7\x37\xaf\xb0\x83\xdd\x60\x6b\x72\x46\xda\x68\x7b\x02\x8b\xb4\x74\xac\x03\x9e\xc4\xa8\xef\x5e\x9e\x3a\xf7\xe5\xa9\xc3\x3d\xfd\xb9\x6c\xcc\xed\xb6\xe0\x53\xa3\xb5\xae\xcd\xe9\xc8\xad\xbe\xce\x36\x19\xc3\xc1\xcb\xc2\xed\xf6\xf4\xf6\x00\x60\x17\x55\x2c\x35\xad\x77\x10\x8b\x77\xe3\x3e\x3b\xa0\x47\x10\x24\x02\x4f\x86\xce\xfb\xf7\xbd\x37\x84\xdd\x7f\xf8\xb0\xe5\x5d\x6e\xeb\x21\x1f\x48\x4e\x09\x02\x75\xc7\xed\xf2\x44\x79\xf8\x51\xfd\xfd\x45\x2b\xee\xa1\xfa\x5f\x2c\x1e\xf6\xca\xab\x6c\x61\xb9\xbe\xbc\x68\x78\x69\xdb\x09\xbe\x33\xba\x2d\xb2\xe0\x5a\x02\x0c\x22\x0f\x8e\xda\x9d\xd5\x57\x70\x6e\x6d\x76\xaf\x48\x6c\x67\x72\xae\x08\x6c\xc9\xf0\x76\x8c\x6d\x71\x83\xec\x4c\x6d\xce\x3b\x92\x05\xf5\x53\x30\xbc\xc8\x20\x43\x5b\xde\x0b\xff\x64\xe7\x14\x15\xe2\x6b\x50\xcc\xe6\x8f\x44\x8a\x29\xc8\x77\x46\xdd\x39\x75\xb3\x76\x77\x4e\xbd\xd7\x8a\xee\x9c\xba\x3b\xa7\x7e\x72\xe9\x70\x77\x4e\xfd\x18\xe7\xd4\x59\x39\x98\x18\x57\x24\xc6\xcd\xc9\xee\x51\x36\x5b\x07\x8f\xb7\xd9\xfa\x96\x62\x28\x31\x40\x1c\x30\xae\x80\xc0\x19\x5d\x02\xc5\xed\xe6\xaa\x49\x22\x5b\xda\x3d\xfd\xe2\x1c\x77\xcb\xb3\xa5\xa1\x1a\xf0\xbf\xff\x82\x81\xdf\x7f\x59\xee\x4d\x7f\x47\x29\x30\x05\x12\x08\x2c\xb1\x98\x61\x74\xbe\x0f\xbb\x54\xad\x4b\xd5\x0e\xaa\xfd\x08\xa9\xda\xc3\x0b\xa8\xfd\x5a\xee\xd5\x6a\xa7\x16\x91\x67\x7f\xdf\xb9\xf1\x83\xe2\x9a\x2e\xeb\x7e\x6b\x62\xa2\x67\xae\x0b\x32\x81\x67\x98\x29\xf0\x17\xb3\x12\xe6\x0c\x90\x1f\xdf\x01\x8d\x4c\xa0\x81\x0a\x52\xc8\x48\x96\xdb\x97\xe9\x81\xeb\x16\x0d\x11\x99\x95\x63\xa2\xfa\x33\xf6\x70\x9e\x10\x85\xcd\x74\x8e\x03\xc6\xe7\x02\x66\x06\xe4\x41\xff\x2a\x5b\x80\x98\xe7\x82\x6c\x2c\xea\x7d\x67\xf4\x35\x1b\xcb\x2c\x04\x5f\xce\x7f\x91\x87\xc8\x6c\x74\x11\x79\x36\x9a\x17\x91\xf9\x1b\x48\xa3\xff\x07\x00\x00\xff\xff\xf3\xbf\x6f\x57\x26\x4a\x00\x00")

func templatesEmail_confirmHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesEmail_confirmHtml,
		"templates/email_confirm.html",
	)
}

func templatesEmail_confirmHtml() (*asset, error) {
	bytes, err := templatesEmail_confirmHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/email_confirm.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesKyc_approveHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xef\x8e\xdb\x36\x12\xff\xbe\x4f\xc1\x28\x68\x7b\x07\x54\x96\x6c\x67\x37\x59\x49\x36\xae\xb7\xe9\xb5\x07\xa4\xd7\xa0\xd9\xfb\x53\x1c\xee\x03\x2d\xd2\x16\xbb\x14\xa9\x23\x29\xff\x69\x90\x07\xba\xd7\xb8\x27\x2b\x48\x4a\xb6\x64\x5b\xae\x6c\xef\x66\x37\x81\x6c\x60\x23\x89\xe4\x70\x38\xf3\xe3\x8f\x33\xa4\x9c\xe8\xd9\xeb\x1f\x6f\x6e\x7f\x7e\xfb\x2d\x48\x54\x4a\xc1\xdb\xbf\xff\xf9\xcd\x5f\x6f\x80\xe3\x7a\xde\x3f\x87\x37\x9e\xf7\xfa\xf6\x35\xf8\xd7\xf7\xb7\x3f\xbc\x01\xfd\x9e\x0f\x6e\x05\x64\x92\x28\xc2\x19\xa4\x9e\xf7\xed\xdf\x1c\xe0\x24\x4a\x65\x81\xe7\x2d\x16\x8b\xde\x62\xd8\xe3\x62\xe6\xdd\xfe\xe4\x2d\xb5\xac\xbe\x6e\x5c\x5c\xba\xaa\xd2\xb2\x87\x14\x72\xc6\x17\x91\xe9\x70\x99\x52\x26\x47\x7b\xc4\xf4\xaf\xaf\xaf\x6d\x6b\x07\x50\xc8\x66\x23\x07\x33\x47\x57\x0f\x36\x77\x52\xad\x28\x1e\x39\x13\x18\xdf\xcd\x04\xcf\x19\x0a\x9e\x4f\x87\xfa\xfb\x8c\xa4\x19\x17\x0a\x32\xe5\x8c\x2f\x2e\xa2\x04\x43\x34\xbe\x00\x00\x80\x28\xc5\x0a\x02\xdd\x9b\x8b\xff\x9b\x93\xf9\xc8\xb9\xe1\x4c\x61\xa6\xdc\xdb\x55\x86\x1d\x10\xdb\xbb\x91\xa3\xf0\x52\x79\xba\xf7\x10\xc4\x09\x14\x12\xab\x51\xae\xa6\xee\x2b\xa7\x2a\x87\xc1\x14\x8f\x9c\x39\xc1\x0b\xdd\x5b\xa5\xf5\x82\x20\x95\x8c\x10\x9e\x93\x18\xbb\xe6\xa6\x6c\xa7\x88\xa2\x78\xfc\x6e\x01\x45\x0a\xfe\x81\x05\x99\x92\x18\x6a\xb3\x44\x9e\x2d\xb1\xb5\xcc\xc0\xec\xb5\xfe\xfc\x29\xc5\x88\x40\xc0\x19\x5d\x01\x19\x0b\x8c\x19\x78\xbf\x2e\xd4\x1f\x63\xca\xfa\x23\xfd\x49\x09\x73\x13\x4c\x66\x89\x0a\x40\xdf\xf7\xbf\x08\x77\x6a\x54\x4c\x07\x0a\xdb\xd5\xea\x7c\xb8\xd8\x5c\x1d\x52\x07\x32\x04\xfe\x90\xc2\xa5\x1d\x6c\x70\x79\x7d\x95\x2d\xff\xb8\xa5\x91\x82\x13\x8a\x7b\x13\x8e\x56\x80\xa4\xb3\x3d\xea\xda\xb6\x00\xe6\x8a\xef\x6a\x5a\x8e\x43\x97\x36\xa8\xb8\xd5\x49\x8c\x99\xc2\xa2\xc1\x2c\x45\x5f\xfe\x06\x29\xed\x84\xf6\xb4\x8f\x21\x61\x7b\x05\x17\x42\xaf\x2f\xbf\x38\x41\x2c\xcd\x53\x26\xf7\x08\xad\x0e\x7c\x23\x76\xd7\x40\x6e\xca\x7f\x75\x27\x7c\xe9\x4a\xf2\x2b\x61\xb3\x00\x4c\xb8\x40\x58\xe8\x47\x7b\x2a\x2f\xf0\xe4\x8e\xa8\xd6\xf5\xdb\xd6\xcb\x20\x42\x84\xcd\x5c\x8a\xa7\x1a\x73\x57\xd9\xf2\x90\xca\x65\x6d\x51\x40\xb4\x56\xfd\x48\xc3\x1d\xb0\x60\x5d\x29\xff\x08\x8d\x5a\xc2\x23\xe9\xc9\x14\x52\xea\x5e\xed\xe9\x1c\x11\x99\x51\xb8\x0a\x00\x61\x94\x30\xec\x4e\x28\x8f\xef\x0e\xa9\x50\x80\xe8\xd2\x6f\x09\xa2\xb2\xf3\xfe\xe0\x1e\x7b\xd7\x6c\xd1\xaa\xfb\xb5\xd9\x5b\xea\x71\xef\x0a\x58\x2c\xa4\x98\xe5\xcd\x13\xf2\x14\x61\x0a\x7d\xdd\x58\x94\x1c\x26\xaf\x43\xc3\xfb\x1d\x87\xb4\xd2\xad\x37\xc7\x42\x91\x18\xd2\x03\x4a\x56\xea\xec\xd3\xb6\xc9\x1f\xad\xfa\xff\x37\xa4\x64\xc6\x46\x96\x5f\xff\xd3\xd6\x16\x8d\xeb\x8a\xfe\x1b\x79\xc5\x92\x17\x79\x76\xb1\xbe\x88\xcc\xf4\x2e\x56\xf8\x6d\x6e\xab\x50\x90\x9b\x4a\x57\x2f\xd6\xba\x08\xbb\x10\xfd\x92\x4b\x15\x98\xc5\x6e\x0f\xc7\x55\xdb\x15\xa5\xfb\xdb\xfe\x00\xc5\x8c\xb0\xc0\x0f\x0f\xc5\x16\xe1\x7e\xc9\x31\xa7\x5c\x04\xcf\x7d\xa8\xbf\xe1\x94\x33\xe5\x4e\x61\x4a\xe8\x2a\xf8\xea\x1d\xcf\x45\x8c\xc1\x3b\xc8\x24\x78\x2b\xf8\x57\x5f\x4b\xc8\xa4\x2b\x75\x1c\x60\x2b\x6a\x45\x02\xcd\x83\xf6\x76\x61\xb9\xff\x85\xef\x87\x06\x2d\xc5\x5a\xd0\xef\x0d\xc3\xb4\xd4\x70\xb3\x9a\x19\xcd\x0b\x06\x0b\xfc\xd0\x8c\xcc\xb8\x2a\xd0\xcc\x17\x6e\x2a\x55\xc3\xa3\x48\x66\x90\x81\x98\x42\x29\x47\x4e\x26\xb0\x36\x3f\x16\xeb\xd8\xaa\x18\x8c\x1d\x7a\x58\xc2\x86\x71\x86\x2b\x76\xa8\xa8\x9e\x2d\xeb\x9a\x66\xcb\x50\x87\x05\xc5\xad\x1f\x6e\x62\x04\x3f\x4c\x25\x77\x13\x82\x70\x00\x29\xad\x48\xe3\x19\x8c\x89\x5a\x05\x7e\xc8\xe7\x58\x4c\x29\x5f\x04\x09\x41\x08\xb3\x70\x4e\x24\x99\x10\xaa\x0b\xed\x13\x67\x1c\x79\x5a\xff\xf1\x45\x64\xe0\x59\x8e\x43\x63\x67\x3d\x84\xb6\xbe\x34\x0e\x8c\x39\xa5\x30\x93\x38\x28\x2f\xca\x02\xa9\xb5\x32\x76\x7d\x18\xff\x96\x06\xd3\x3e\x6c\xf4\x75\xb3\x73\xcb\xe9\x5e\x3c\x53\x3c\xab\xf8\x7b\x1d\x7c\x8a\xd2\x26\xc7\x08\x72\x36\x81\x68\xa4\x50\x69\x62\x3b\xfb\x1d\x60\xb9\x60\x7d\x3b\x2f\xee\x75\xbb\xda\xec\x4d\x56\x59\x82\x99\x0c\x4c\x74\x57\x4e\xbe\xda\xc3\x8d\x9f\x1a\x5c\x51\xf1\xd6\x03\xf9\xa0\xaa\xce\x3d\x39\x81\x0b\xe4\x2e\x04\xcc\x82\x89\xc0\xf0\xce\xd5\xf7\x15\x83\x1a\xa3\x16\x81\x2a\x82\x0a\xba\x99\xce\x35\xd0\xc8\x59\x1b\x6f\x33\xbd\x2f\x5f\xf9\xd9\x72\xd7\xab\x35\x51\x76\x16\x6c\xf9\xa4\xf4\xd8\x3a\x72\x9d\x52\x0e\x95\x5b\x16\x6f\x4d\x13\x1b\x7f\xd7\xe6\x0a\xd6\xdf\x23\x66\x88\x91\x6f\x48\x62\x6d\x35\x2b\x75\xaf\xe9\xac\x1e\xcd\x08\x36\xe3\xde\x33\x58\x3b\x60\x3d\xd5\x9b\xca\xce\x85\xfb\xae\x44\xd4\x61\xba\x15\xa6\x1b\x80\x59\x20\x51\xf0\x05\xd8\x5a\x67\xce\xc2\x5b\xb9\x2c\x99\x4e\x2a\x63\xc9\xb8\xdd\x73\x08\x04\xa6\x50\x91\x39\x3e\x89\x36\x0f\x8f\xab\x19\x7f\x0f\x8b\xc5\xba\xf4\xa4\x34\x6d\x99\x88\x50\x28\x66\xd8\xbd\x02\x65\x78\x3e\x25\x42\x2a\x40\xa1\x54\x0d\x13\xfe\xe3\x46\x2d\xdb\x74\x50\xe6\x5d\x13\xae\x14\x4f\x2b\x0f\x4c\xce\x66\x44\xd7\x53\x33\xf3\x68\x7f\x84\x33\x78\xf9\xa2\x91\x2f\x0e\x60\xb3\x04\x62\x6b\xd4\x9d\xb7\x18\xb7\xd7\xee\x21\x91\xb3\x8d\xa2\xed\x90\xe9\x23\xc7\xb2\x8d\x23\x3c\x61\x38\x60\x87\x76\xb4\xeb\xaa\x94\xf3\xc4\x3c\x5d\x57\xbc\x1d\xaf\x34\xb7\xff\x58\xa8\xa9\xf7\x8a\x8a\xed\xaa\x91\xd3\xd7\x8b\xf6\x93\x5e\x2d\xfd\xa3\x56\x4b\xdf\x64\x32\x65\xce\x25\xb9\x5b\x29\x75\x45\x4e\x71\x80\x97\x30\x56\x74\x75\x1f\x6b\xe9\x97\xcf\x97\xdf\xf8\x61\xe4\x29\x74\x06\x04\x3c\x25\xce\x6a\x7d\x3a\x02\x23\xcf\xcc\xbb\x71\x44\xd2\xd9\x1a\x10\x97\x16\x10\x22\x5e\xef\xf6\x4b\x05\x67\x84\xcd\x7a\x30\x23\x3d\x99\xb3\x9e\x5c\x40\x91\xf6\xa6\x39\x43\x1e\xe5\x33\xee\xd9\xfb\x8c\xcd\x2a\x38\x92\x2e\xd1\xd1\x62\xc6\xa9\xd9\x36\x77\x53\x8e\x70\x30\x21\x71\x3e\x21\x71\x18\x53\x0c\x45\x30\xe1\x2a\x59\x87\x04\x66\x7f\xa3\x92\x75\x9a\xfc\x8a\xe7\x4a\x7b\xaf\xf4\x10\xc2\x31\x17\x46\x9c\x8d\x59\x6d\x4d\x0d\x81\x8e\x76\x8e\x6d\xff\xd8\xb4\x33\x7c\xea\xb4\x33\x3c\x8a\x76\x86\x1d\xed\x1c\xd5\xd8\xd0\xce\xf1\x91\x8f\xa7\x92\x23\xa3\xb2\xa3\x46\x79\x94\x62\xed\x94\x69\xa7\x40\x2b\x73\xb6\xd2\x6e\x27\x81\x3b\x81\xcf\xba\x34\x6d\x2b\x4d\xeb\x0f\x8a\x3c\xad\x3f\xf8\x44\x13\xb5\x5a\x66\x76\x42\xae\x76\x79\xd5\xe5\x6a\x5d\xae\x56\x0c\xa9\x0b\x9a\x1e\x2b\x57\xbb\x7a\xe2\x41\xd3\x91\x3b\x9b\x57\x5d\xd0\x74\x4c\xe3\xd3\x82\x26\xd3\x38\x19\xec\xd0\x90\xbd\x58\x2f\x10\x3a\x80\x2d\xfc\x3f\x9c\xbe\x18\xbc\x78\x51\xf3\xff\x4f\x90\xe2\x05\x5c\xb5\x0c\x95\x87\x07\xcf\x41\x77\xfb\x3d\x70\x16\xba\x76\x25\xe3\x22\x85\xd4\x19\x7f\x4f\x9e\x45\x5e\x32\xe8\xb8\xeb\xc8\xf6\x1d\x77\x75\xdc\xf5\x69\x72\x57\x76\x1e\x75\x3d\xcc\xcb\x1c\x47\x90\x98\x33\xfe\x99\xe7\x02\xc0\x38\xe6\x39\x53\x60\x01\x25\xf8\x25\x97\x0a\xc0\x2c\x13\x7c\x8e\x51\x2f\xf2\xb2\xfb\xa0\xb3\x49\xae\x14\x67\x20\xc5\x88\xe4\x29\x10\x10\x91\x5c\xee\xe6\x26\xbe\x79\x7d\x0f\x34\xcf\xa9\x5d\xba\x4b\x77\xda\x9e\x40\x80\x67\x6c\xd3\x81\x47\x25\xb0\xcf\x87\xb2\x3e\xe6\x41\x72\x3b\xeb\x3e\xe5\x24\xb1\x59\xeb\xc7\x40\x62\x5d\x83\xd3\x51\x59\x3d\xbe\x9f\x4e\xe0\xe0\x65\x61\x5e\xbb\xa3\xde\x02\xb4\x45\x15\x4b\x2f\x9b\x6c\xb6\x78\x17\xe0\x93\x03\x71\x04\x41\x22\xf0\x74\xe4\xbc\x7f\xdf\x7b\x43\xd8\xdd\x87\x0f\x7b\xde\x47\xb3\x16\xf2\x81\xe4\x94\x20\x50\x37\x5c\x93\x25\xca\x4d\xb4\xea\xfb\xa3\xf7\x62\x1e\xaa\xff\x62\xf1\xfb\x56\x79\x95\x2d\x2d\x5f\x97\x17\x3b\x56\xda\x77\xaa\xe2\x8c\xbf\xe3\x40\x71\x60\x7f\xfa\xf0\x97\x9c\xa1\xc8\x83\xe3\xf3\x42\x8f\x1a\x78\xcf\x0a\x43\x2a\x52\x4e\x8f\x28\x2a\x42\x1e\x25\x9e\x3a\x33\x95\x3b\xa1\xd7\xe3\x37\xce\x41\x7d\x1f\x14\x2f\x33\xc8\xd0\x9e\xb7\xd0\x1e\x6d\x37\xab\x42\x49\x3b\x93\x7f\xfb\xf5\xd3\x62\x11\xf0\x9d\x71\x77\x82\xd0\x9d\x20\x14\xf5\xba\x13\x84\xee\x04\xa1\x3b\x41\x78\x94\x13\x84\xac\x9c\x1c\x8c\x2b\x12\xe3\xdd\x45\xe5\x41\x12\xfc\xc1\xc3\x25\xf8\x6f\x29\x86\x12\x03\xc4\x01\xe3\x0a\x08\x9c\xd1\x95\x8e\xa1\x54\x42\x24\xc0\x29\x24\xf4\x8c\x1c\xff\xb3\x33\xd6\x0d\xcf\x56\x86\x2e\xc0\xff\xff\x07\x06\x7e\xff\xa5\x8d\x35\x7b\xe0\x1b\x4a\x81\x29\x90\x40\x60\x89\xc5\xc9\x7b\x23\x5d\xb8\xd3\x85\x3b\x6d\xb4\x6b\x4e\x00\x9a\xb5\x68\xec\x79\x6f\x6f\x91\x67\x7f\x35\x51\xf9\x69\xce\xba\x4f\xdb\xc7\xba\x59\xf4\xcc\x75\x41\x26\xf0\x1c\x33\x05\xbe\xd3\xa4\x01\x38\x03\xe4\xc7\x77\x40\xa3\x05\x68\xf0\x80\x14\x32\x92\xe5\xf6\x95\x3a\xe0\xba\xe3\x8b\x08\x91\x79\x89\xd1\xea\x8f\xbe\xc2\x45\x42\x14\x36\xcb\x22\x0e\x18\xd7\x69\xaf\x01\x5d\xd0\xbf\xcc\x96\x20\xe6\xb9\x20\x5b\x29\xa4\xef\x8c\xbf\x64\x13\x99\x85\xe0\xf3\xf9\x27\xf2\x10\x99\x6b\x13\x5b\x8f\x5d\x44\xe6\x7f\x0a\x18\xff\x16\x00\x00\xff\xff\xa0\x5e\x28\xbb\x4c\x41\x00\x00")

func templatesKyc_approveHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesKyc_approveHtml,
		"templates/kyc_approve.html",
	)
}

func templatesKyc_approveHtml() (*asset, error) {
	bytes, err := templatesKyc_approveHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/kyc_approve.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesKyc_rejectHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\xef\x8e\xdb\x36\x12\xff\xbe\x4f\xc1\x28\x68\x7b\x07\x54\x96\xec\xcd\x6e\x12\x49\x36\xae\xb7\xe9\xb5\x07\xa4\xd7\xa0\xd9\xfb\x53\x1c\xee\x03\x2d\x8e\x2d\x76\x29\x52\x25\x29\xff\x69\x90\x07\xba\xd7\xb8\x27\x3b\x50\x94\x6c\xc9\xb6\x5c\xd9\xde\xcd\x26\x81\x6d\x60\x23\x89\xe4\x70\x38\xf3\xe3\x8f\x33\xa4\x9c\xe8\xc9\xab\x1f\x6f\x6e\x7f\x7e\xf3\x2d\x4a\x74\xca\xd0\x9b\xbf\xff\xf9\xf5\x5f\x6f\x90\xe3\x7a\xde\x3f\x2f\x6f\x3c\xef\xd5\xed\x2b\xf4\xaf\xef\x6f\x7f\x78\x8d\xfa\x3d\x1f\xdd\x4a\xcc\x15\xd5\x54\x70\xcc\x3c\xef\xdb\xbf\x39\xc8\x49\xb4\xce\x02\xcf\x9b\xcf\xe7\xbd\xf9\x65\x4f\xc8\xa9\x77\xfb\x93\xb7\x30\xb2\xfa\xa6\x71\x79\xe9\xea\x5a\xcb\x1e\xd1\xc4\x19\x5d\x44\x45\x87\x8b\x94\x71\x35\xdc\x21\xa6\xff\xf2\xe5\x4b\xdb\xda\x41\x0c\xf3\xe9\xd0\x01\xee\x98\xea\xc1\xfa\x4e\xe9\x25\x83\xa1\x33\xc6\xf1\xdd\x54\x8a\x9c\x93\xe0\xe9\xe4\xd2\x7c\x9f\xd0\x34\x13\x52\x63\xae\x9d\xd1\xc5\x45\x94\x00\x26\xa3\x0b\x84\x10\x8a\x52\xd0\x18\x99\xde\x5c\xf8\x35\xa7\xb3\xa1\x73\x23\xb8\x06\xae\xdd\xdb\x65\x06\x0e\x8a\xed\xdd\xd0\xd1\xb0\xd0\x9e\xe9\x3d\x44\x71\x82\xa5\x02\x3d\xcc\xf5\xc4\x7d\xe1\xd4\xe5\x70\x9c\xc2\xd0\x99\x51\x98\x9b\xde\x6a\xad\xe7\x94\xe8\x64\x48\x60\x46\x63\x70\x8b\x9b\xaa\x9d\xa6\x9a\xc1\xe8\xed\x1c\xcb\x14\xfd\x03\x24\x9d\xd0\x18\x1b\xb3\x44\x9e\x2d\xb1\xb5\x8a\x81\xd9\x6b\xf3\xf9\x53\x0a\x84\x62\x24\x38\x5b\x22\x15\x4b\x00\x8e\xde\xad\x0a\xcd\xa7\x30\x65\xf3\x91\xf9\xa4\x94\xbb\x09\xd0\x69\xa2\x03\xd4\xf7\xfd\x2f\xc2\xad\x1a\x35\xd3\xa1\xd2\x76\x8d\x3a\xef\x2f\xd6\x57\xfb\xd4\xc1\x9c\xa0\x3f\xa4\x78\x61\x07\x1b\x5c\xbd\xbc\xce\x16\x7f\xdc\xd0\x48\xe3\x31\x83\xde\x58\x90\x25\xa2\xe9\x74\x87\xba\xb6\x2d\xc2\xb9\x16\xdb\x9a\x56\xe3\x30\xa5\x2d\x2a\x6e\x74\x12\x03\xd7\x20\x5b\xcc\x52\xf6\xe5\xaf\x91\xd2\x4d\x68\xcf\xf8\x18\x53\xbe\x53\x70\x29\xf4\xe5\xd5\x17\x47\x88\x65\x79\xca\xd5\x0e\xa1\xf5\x81\xaf\xc5\x6e\x1b\xc8\x4d\xc5\x6f\xee\x58\x2c\x5c\x45\x7f\xa3\x7c\x1a\xa0\xb1\x90\x04\xa4\x79\xb4\xa3\xf2\x1c\xc6\x77\x54\x77\xae\xdf\xb5\x5e\x86\x09\xa1\x7c\xea\x32\x98\x18\xcc\x5d\x67\x8b\x7d\x2a\x57\xb5\x65\x09\xd1\x46\xf5\x03\x0d\xb7\xc7\x82\x4d\xa5\xfc\x03\x34\xea\x08\x8f\xa4\xa7\x52\xcc\x98\x7b\xbd\xa3\x73\x42\x55\xc6\xf0\x32\x40\x94\x33\xca\xc1\x1d\x33\x11\xdf\xed\x53\xa1\x04\xd1\x95\xdf\x11\x44\x55\xe7\xfd\xc1\x3d\xf6\x6e\xd8\xa2\x53\xf7\x2b\xb3\x77\xd4\xe3\xde\x15\xb0\x58\x48\x81\xe7\xed\x13\xf2\x18\x61\x9a\x7c\xdd\x5a\x94\xec\x27\xaf\x7d\xc3\xfb\x1d\x87\x74\xd2\xad\x37\x03\xa9\x69\x8c\xd9\x1e\x25\x6b\x75\x76\x69\xdb\xe6\x8f\x4e\xfd\xff\x1b\x33\x3a\xe5\x43\xcb\xaf\xff\xe9\x6a\x8b\xd6\x75\xc5\xfc\x8d\xbc\x72\xc9\x8b\x3c\xbb\x58\x5f\x44\xc5\xf4\x2e\x57\xf8\x4d\x6e\xab\x51\x90\x9b\x2a\xd7\x2c\xd6\xa6\x08\x5c\x4c\x7e\xc9\x95\x0e\x8a\xc5\x6e\x07\xc7\xd5\xdb\x95\xa5\xbb\xdb\xfe\x80\xe5\x94\xf2\xc0\x0f\xf7\xc5\x16\xe1\x6e\xc9\xb1\x60\x42\x06\x4f\x7d\x6c\xbe\xe1\x44\x70\xed\x4e\x70\x4a\xd9\x32\xf8\xea\xad\xc8\x65\x0c\xe8\x2d\xe6\x0a\xbd\x91\xe2\xab\xaf\x15\xe6\xca\x55\x26\x0e\xb0\x15\x8d\x22\x81\xe1\x41\x7b\x3b\xb7\xdc\xff\xcc\xf7\xc3\x02\x2d\xe5\x5a\xd0\xef\x5d\x86\x69\xa5\xe1\x7a\x35\x2b\x34\x2f\x19\x2c\xf0\xc3\x62\x64\x85\xab\x02\xc3\x7c\xe1\xba\x52\x3d\x3c\x8a\x54\x86\x39\x8a\x19\x56\x6a\xe8\x64\x12\x8c\xf9\x41\xae\x62\xab\x72\x30\x76\xe8\x61\x05\x1b\x2e\x38\xd4\xec\x50\x53\x3d\x5b\x34\x35\xcd\x16\xa1\x09\x0b\xca\x5b\x3f\x5c\xc7\x08\x7e\x98\x2a\xe1\x26\x94\x40\x80\x19\xab\x49\x13\x19\x8e\xa9\x5e\x06\x7e\x28\x66\x20\x27\x4c\xcc\x83\x84\x12\x02\x3c\x9c\x51\x45\xc7\x94\x99\x42\xfb\xc4\x19\x45\x9e\xd1\x7f\x74\x11\x15\xf0\xac\xc6\x61\xb0\xb3\x1a\x42\x57\x5f\x16\x0e\x8c\x05\x63\x38\x53\x10\x54\x17\x55\x81\x32\x5a\x15\x76\x7d\x18\xff\x56\x06\x33\x3e\x6c\xf5\x75\xbb\x73\xab\xe9\x5e\x3e\xd3\x22\xab\xf9\x7b\x15\x7c\xca\xca\x26\x87\x08\x72\xd6\x81\x68\xa4\x49\x65\x62\x3b\xfb\x1d\x64\xb9\x60\x75\x3b\x2b\xef\x4d\xbb\xc6\xec\x4d\x96\x59\x02\x5c\x05\x45\x74\x57\x4d\xbe\xc6\xc3\xb5\x9f\x5a\x5c\x51\xf3\xd6\x03\xf9\xa0\xae\xce\x3d\x39\x41\x48\xe2\xce\x25\xce\x82\xb1\x04\x7c\xe7\x9a\xfb\x9a\x41\x0b\xa3\x96\x81\x2a\xc1\x1a\xbb\x99\xc9\x35\xc8\xd0\x59\x19\x6f\x3d\xbd\xaf\x5e\xf8\xd9\x62\xdb\xab\x0d\x51\x76\x16\x6c\xf8\xa4\xf2\xd8\x2a\x72\x9d\x30\x81\xb5\x5b\x15\x6f\x4c\x13\x1b\x7f\x37\xe6\x0a\x98\xef\x01\x33\xa4\x90\x5f\x90\xc4\xca\x6a\x56\xea\x4e\xd3\x59\x3d\xda\x11\x5c\x8c\x7b\xc7\x60\xed\x80\xcd\x54\x6f\x2b\x3b\x15\xee\xdb\x12\xc9\x19\xd3\x9d\x30\xdd\x02\xcc\x12\x89\x52\xcc\xd1\xc6\x3a\x73\x12\xde\xaa\x65\xa9\xe8\xa4\x36\x96\x4c\xd8\x3d\x87\x40\x02\xc3\x9a\xce\xe0\x28\xda\xdc\x3f\xae\x76\xfc\x3d\x2c\x16\x9b\xd2\x93\xca\xb4\x55\x22\xc2\xb0\x9c\x82\x7b\x8d\xaa\xf0\x7c\x42\xa5\xd2\x88\x61\xa5\x5b\x26\xfc\x87\x8d\x5a\x36\xe9\xa0\xca\xbb\xc6\x42\x6b\x91\xd6\x1e\x14\x39\x5b\x21\xba\x99\x9a\x15\x8f\x76\x47\x38\x83\xe7\xcf\x5a\xf9\x62\x0f\x36\x2b\x20\x76\x46\xdd\x69\x8b\x71\x77\xed\x1e\x12\x39\x9b\x28\xda\x0c\x99\x3e\x70\x2c\xdb\x3a\xc2\x23\x86\x83\xb6\x68\xc7\xb8\xae\x4e\x39\x1f\x99\xa7\x9b\x8a\x77\xe3\x95\xf6\xf6\x1f\x0a\x35\xcd\x5e\x49\xb9\x5d\x35\x74\xfa\x66\xd1\xfe\xa8\x57\x4b\xff\xa0\xd5\xd2\x2f\x32\x99\x2a\xe7\x52\xc2\xad\x95\xba\x32\x67\x10\xc0\x02\xc7\x9a\x2d\xef\x63\x2d\xfd\xf2\xe9\xe2\x1b\x3f\x8c\x3c\x4d\x4e\x80\x80\xa7\xe5\x49\xad\x8f\x47\x60\xe4\x15\xf3\x6e\x14\xd1\x74\xba\x02\xc4\x95\x05\x84\x8c\x57\xbb\xfd\x4a\xe3\x29\xe5\xd3\x1e\xce\x68\x4f\xe5\xbc\xa7\xe6\x58\xa6\xbd\x49\xce\x89\xc7\xc4\x54\x78\xf6\x3e\xe3\xd3\x1a\x8e\x94\x4b\x4d\xb4\x98\x09\x56\x6c\x9b\xbb\xa9\x20\x10\x8c\x69\x9c\x8f\x69\x1c\xc6\x0c\xb0\x0c\xc6\x42\x27\xab\x90\xa0\xd8\xdf\xa8\x65\x9d\x45\x7e\x25\x72\x6d\xbc\x57\x79\x88\x40\x2c\x64\x21\xce\xc6\xac\xb6\xa6\x81\xc0\x99\x76\x0e\x6d\xff\xd8\xb4\x73\xf9\xb1\xd3\xce\xe5\x41\xb4\x73\x79\xa6\x9d\x83\x1a\x17\xb4\x73\x78\xe4\xe3\xe9\xe4\xc0\xa8\xec\xa0\x51\x1e\xa4\x58\x37\x65\xba\x29\xd0\xc9\x9c\x9d\xb4\xdb\x4a\xe0\x8e\xe0\xb3\x73\x9a\xb6\x91\xa6\xf5\x07\x65\x9e\xd6\x1f\x7c\xa2\x89\x5a\x23\x33\x3b\x22\x57\xbb\xba\x3e\xe7\x6a\xe7\x5c\xad\x1c\xd2\x39\x68\x7a\xac\x5c\xed\xfa\x23\x0f\x9a\x0e\xdc\xd9\xbc\x3e\x07\x4d\x87\x34\x3e\x2e\x68\x2a\x1a\x27\x83\x2d\x1a\xb2\x17\xab\x05\xc2\x04\xb0\xa5\xff\x2f\x27\xcf\x06\xcf\x9e\x35\xfc\xff\x13\x66\x30\xc7\xcb\x8e\xa1\xf2\xe5\xde\x73\xd0\xed\x7e\xf7\x9c\x85\xae\x5c\xc9\x85\x4c\x31\x73\x46\xdf\xd3\x27\x91\x97\x0c\xce\xdc\x75\x60\xfb\x33\x77\x9d\xb9\xeb\xd3\xe4\xae\xec\x34\xea\x7a\x98\x97\x39\x0e\x20\x31\x67\xf4\xb3\xc8\x25\x92\xf0\x6b\x0e\x4a\xa3\x39\x56\x48\xc2\x2f\x10\x6b\x20\x3d\x74\x93\x40\x7c\x87\x96\xa6\x02\x8e\x63\x91\x73\x8d\xb0\x46\xf6\xbd\xd3\xbf\xe4\x9c\xa0\x89\x90\x28\x15\x12\x10\x01\x8d\x29\x53\xbd\xc8\xcb\xee\x83\xfc\xc6\xb9\xd6\x82\xa3\x14\x08\xcd\x53\x24\x31\xa1\xb9\xda\xce\x64\xfc\xe2\x65\x3f\xd4\x3e\x03\xb7\xc9\x31\xdd\x6a\x7b\x04\x5d\x9e\xb0\xa9\x87\x1e\x95\xee\x3e\x1f\x82\xfb\x90\xc7\xce\xdd\xac\xfb\x31\xa7\x94\xed\x5a\x3f\x06\x12\x9b\x1a\x1c\x8f\xca\xfa\x61\xff\x64\x8c\x07\xcf\x4b\xf3\xda\xfd\xf7\x0e\xa0\x2d\xab\x58\x7a\x59\xe7\xbe\xe5\x9b\x03\x9f\x1c\x88\x23\x8c\x12\x09\x93\xa1\xf3\xee\x5d\xef\x35\xe5\x77\xef\xdf\xef\x78\x7b\xcd\x5a\xc8\x47\x4a\x30\x4a\x50\xd3\x70\x6d\x96\xa8\xb6\xdc\xea\x6f\x9b\xde\x8b\x79\x98\xf9\x0b\xf2\xf7\xad\xf2\x22\x5b\x58\xbe\xae\x2e\xb6\xac\xb4\xeb\x0c\xc6\x19\x7d\x27\x90\x16\xb5\x05\x2b\xf2\xf0\xe8\xb4\x40\xa5\x01\xde\x93\x82\x96\x9a\x94\xe3\xe3\x8f\x9a\x90\x47\x89\xbe\x4e\x4c\xfc\x8e\xe8\xf5\xf0\x6d\x76\xd4\xdc\x35\x85\x45\x86\x39\xd9\xf1\xce\xda\xa3\xed\x7d\xd5\x28\x69\x6b\xf2\x6f\xbe\xac\x5a\x2e\x02\xbe\x33\x3a\x9f\x37\x9c\xcf\x1b\xca\x7a\xe7\xf3\x86\xf3\x79\xc3\xf9\xbc\xe1\x51\xce\x1b\xb2\x6a\x72\x70\xa1\x69\x0c\xdb\x8b\xca\x83\x6c\x07\x0c\x1e\x6e\x3b\xe0\x0d\x03\xac\x00\x11\x81\xb8\xd0\x48\x42\xc6\x96\x26\x86\xd2\x09\x55\x08\x52\x4c\xd9\x09\x39\xfe\x67\x67\xac\x1b\x91\x2d\x0b\xba\x40\xff\xfb\x2f\x1a\xf8\xfd\xe7\x36\xd6\xec\xa1\x6f\x18\x43\x45\x81\x42\x12\x14\xc8\x19\x90\xe3\xec\x76\x0e\x77\xce\xe1\x4e\x17\xed\xda\x13\x80\x76\x2d\x5a\x7b\xde\xd9\x5b\xe4\xd9\xdf\x58\xd4\x7e\xc8\xb3\xea\xd3\xf6\xb1\x6a\x16\x3d\x71\x5d\x94\x49\x98\x01\xd7\xe8\x3b\x43\x1a\x48\x70\x44\x7f\x7c\x8b\x0c\x5a\x90\x01\x0f\x4a\x31\xa7\x59\x6e\x5f\xc0\x43\xae\x3b\xba\x88\x08\x9d\x55\x18\xad\xff\x44\x2c\x9c\x27\x54\x43\xb1\x2c\x42\xc0\x85\x49\x7b\x0b\xd0\x05\xfd\xab\x6c\x81\x62\x91\x4b\xba\x91\x42\xfa\xce\xe8\x4b\x3e\x56\x59\x88\x3e\x9f\x7f\x22\x8f\xd0\x99\x31\xb1\xf5\xd8\x45\x54\xfc\xbf\x02\xa3\xff\x07\x00\x00\xff\xff\xd5\x70\x94\x24\x7a\x41\x00\x00")

func templatesKyc_rejectHtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesKyc_rejectHtml,
		"templates/kyc_reject.html",
	)
}

func templatesKyc_rejectHtml() (*asset, error) {
	bytes, err := templatesKyc_rejectHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/kyc_reject.html", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"enums/business_type.json":                    enumsBusiness_typeJson,
	"enums/countries.json":                        enumsCountriesJson,
	"enums/education.json":                        enumsEducationJson,
	"enums/employment_status.json":                enumsEmployment_statusJson,
	"enums/entity_type.json":                      enumsEntity_typeJson,
	"enums/gender.json":                           enumsGenderJson,
	"enums/id_document.json":                      enumsId_documentJson,
	"enums/industry.json":                         enumsIndustryJson,
	"enums/marital_status.json":                   enumsMarital_statusJson,
	"enums/nationalities.json":                    enumsNationalitiesJson,
	"migrations/001_squashed.sql":                 migrations001_squashedSql,
	"migrations/003_email_tokens.sql":             migrations003_email_tokensSql,
	"migrations/004_wallets_refactor.sql":         migrations004_wallets_refactorSql,
	"migrations/005_tfa_backends_refactor.sql":    migrations005_tfa_backends_refactorSql,
	"migrations/006_totp_constraint.sql":          migrations006_totp_constraintSql,
	"migrations/007_cascade_wallet_id_update.sql": migrations007_cascade_wallet_id_updateSql,
	"migrations/008_password_constraint.sql":      migrations008_password_constraintSql,
	"migrations/009_drop_tfa_keychain.sql":        migrations009_drop_tfa_keychainSql,
	"migrations/010_users_refactoring.sql":        migrations010_users_refactoringSql,
	"migrations/011_kyc_entities.sql":             migrations011_kyc_entitiesSql,
	"migrations/012_blobs.sql":                    migrations012_blobsSql,
	"migrations/013_rm_org_wallets.sql":           migrations013_rm_org_walletsSql,
	"migrations/014_blob_relationships.sql":       migrations014_blob_relationshipsSql,
	"migrations/015_rm_recovery_requests.sql":     migrations015_rm_recovery_requestsSql,
	"migrations/016_recoveries.sql":               migrations016_recoveriesSql,
	"migrations/017_rm_pending_transactions.sql":  migrations017_rm_pending_transactionsSql,
	"migrations/018_user_kyc.sql":                 migrations018_user_kycSql,
	"templates/email_confirm.html":                templatesEmail_confirmHtml,
	"templates/kyc_approve.html":                  templatesKyc_approveHtml,
	"templates/kyc_reject.html":                   templatesKyc_rejectHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"enums": &bintree{nil, map[string]*bintree{
		"business_type.json":     &bintree{enumsBusiness_typeJson, map[string]*bintree{}},
		"countries.json":         &bintree{enumsCountriesJson, map[string]*bintree{}},
		"education.json":         &bintree{enumsEducationJson, map[string]*bintree{}},
		"employment_status.json": &bintree{enumsEmployment_statusJson, map[string]*bintree{}},
		"entity_type.json":       &bintree{enumsEntity_typeJson, map[string]*bintree{}},
		"gender.json":            &bintree{enumsGenderJson, map[string]*bintree{}},
		"id_document.json":       &bintree{enumsId_documentJson, map[string]*bintree{}},
		"industry.json":          &bintree{enumsIndustryJson, map[string]*bintree{}},
		"marital_status.json":    &bintree{enumsMarital_statusJson, map[string]*bintree{}},
		"nationalities.json":     &bintree{enumsNationalitiesJson, map[string]*bintree{}},
	}},
	"migrations": &bintree{nil, map[string]*bintree{
		"001_squashed.sql":                 &bintree{migrations001_squashedSql, map[string]*bintree{}},
		"003_email_tokens.sql":             &bintree{migrations003_email_tokensSql, map[string]*bintree{}},
		"004_wallets_refactor.sql":         &bintree{migrations004_wallets_refactorSql, map[string]*bintree{}},
		"005_tfa_backends_refactor.sql":    &bintree{migrations005_tfa_backends_refactorSql, map[string]*bintree{}},
		"006_totp_constraint.sql":          &bintree{migrations006_totp_constraintSql, map[string]*bintree{}},
		"007_cascade_wallet_id_update.sql": &bintree{migrations007_cascade_wallet_id_updateSql, map[string]*bintree{}},
		"008_password_constraint.sql":      &bintree{migrations008_password_constraintSql, map[string]*bintree{}},
		"009_drop_tfa_keychain.sql":        &bintree{migrations009_drop_tfa_keychainSql, map[string]*bintree{}},
		"010_users_refactoring.sql":        &bintree{migrations010_users_refactoringSql, map[string]*bintree{}},
		"011_kyc_entities.sql":             &bintree{migrations011_kyc_entitiesSql, map[string]*bintree{}},
		"012_blobs.sql":                    &bintree{migrations012_blobsSql, map[string]*bintree{}},
		"013_rm_org_wallets.sql":           &bintree{migrations013_rm_org_walletsSql, map[string]*bintree{}},
		"014_blob_relationships.sql":       &bintree{migrations014_blob_relationshipsSql, map[string]*bintree{}},
		"015_rm_recovery_requests.sql":     &bintree{migrations015_rm_recovery_requestsSql, map[string]*bintree{}},
		"016_recoveries.sql":               &bintree{migrations016_recoveriesSql, map[string]*bintree{}},
		"017_rm_pending_transactions.sql":  &bintree{migrations017_rm_pending_transactionsSql, map[string]*bintree{}},
		"018_user_kyc.sql":                 &bintree{migrations018_user_kycSql, map[string]*bintree{}},
	}},
	"templates": &bintree{nil, map[string]*bintree{
		"email_confirm.html": &bintree{templatesEmail_confirmHtml, map[string]*bintree{}},
		"kyc_approve.html":   &bintree{templatesKyc_approveHtml, map[string]*bintree{}},
		"kyc_reject.html":    &bintree{templatesKyc_rejectHtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
