image: shebgregor/ci-golang
before_script:
  # Run ssh-agent (inside the build environment)
  - eval $(ssh-agent -s)
  # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  - echo "$SSH_PRIVATE_KEY" | ssh-add -
  - mkdir -p ~/.ssh
  - echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
  - chmod 600 ~/.ssh/id_rsa
  - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  - 'echo -e "Host gitlab\n\tHostName gitlab.com\n\tIdentityFile ~/.ssh/id_rsa\n\tUser git\n" >> ~/.ssh/config'

stages:
  - build
  - delivery
  - deploy

build:
  stage: build
  variables:
    APP_PATH: gitlab.com/swarmfund/api
  script:
    - mkdir -p $GOPATH/src/$APP_PATH
    - cp -rf ./* $GOPATH/src/$APP_PATH
    - cd $GOPATH/src/$APP_PATH
    - go build -o bin/api -a gitlab.com/swarmfund/api/cmd/api
    - cp -rf ./bin/ /builds/swarmfund/api/bin/
  artifacts:
      expire_in: 1 week
      paths:
        - bin/api
  only:
    - staging
    - dev

delivery:
  stage: delivery
  script:
    - rsync bin/api ubuntu@$HOST_DEV:artifacts/api/${CI_COMMIT_SHA:0:8}/
  only:
    - staging
    - dev

.deploy: &deploy
  stage: deploy
  script:
    - BRANCH=${CI_COMMIT_REF_NAME}
    - THOST=$( echo "HOST_${BRANCH}" | awk '{print toupper($0)}' )
    - ssh ubuntu@$HOST_DEV "artifacts/update.sh api $BRANCH ${CI_COMMIT_SHA:0:8}"
    - 'curl -X POST -H http://${!THOST}:8842/ec96h_fVyGnrRXZ0X9r8RQ'
  only:
    - staging
    - dev

deploy:dev: *deploy

deploy:staging:
  <<: *deploy
  when: manual
  only:
    - staging

pages:
  image: ruby:2.3.1
  stage: deploy
  before_script:
    - echo pass
  script:
    - cd docs
    - bundle install 
    - bundle exec middleman build --clean --build-dir=../public
  artifacts:
    paths:
      - public
  only:
    - dev
